define("NewFirebaseMobilePlugin_WTF.controller$AddTraceAttribute", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$AddTraceAttribute.AddTraceAttributeJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_AddTraceAttribute_AddTraceAttributeJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.addTraceAttribute$Action = function (traceNameIn, attributeIn, valueIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.AddTraceAttribute$vars"))());
vars.value.traceNameInLocal = traceNameIn;
vars.value.attributeInLocal = attributeIn;
vars.value.valueInLocal = valueIn;
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var functionExistsVar = new OS.DataTypes.VariableHolder();
var addTraceAttributeJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.AddTraceAttribute$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.addTraceAttribute", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_AddTraceAttribute_AddTraceAttributeJSJS, "AddTraceAttributeJS", "AddTraceAttribute", {
Value: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.valueInLocal, OS.Types.Text, true),
Attribute: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.attributeInLocal, OS.Types.Text, true),
TraceName: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.traceNameInLocal, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.AddTraceAttribute$addTraceAttributeJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
addTraceAttributeJSJSResult.value = results;
}).then(function () {
// Success = AddTraceAttributeJS.Success
outVars.value.successOut = addTraceAttributeJSJSResult.value.successOut;
// Error.ErrorMessage = AddTraceAttributeJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = addTraceAttributeJSJSResult.value.errorMessageOut;
// Error.ErrorCode = AddTraceAttributeJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = addTraceAttributeJSJSResult.value.errorCodeOut;
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.AddTraceAttribute$vars", [{
name: "TraceName",
attrName: "traceNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Attribute",
attrName: "attributeInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Value",
attrName: "valueInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.AddTraceAttribute$addTraceAttributeJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.AddTraceAttribute$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.addTraceAttribute$Action = function (traceNameIn, attributeIn, valueIn) {
traceNameIn = (traceNameIn === undefined) ? "" : traceNameIn;
attributeIn = (attributeIn === undefined) ? "" : attributeIn;
valueIn = (valueIn === undefined) ? "" : valueIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.addTraceAttribute$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(traceNameIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(attributeIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(valueIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$AddTraceAttribute.AddTraceAttributeJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.addTraceAttribute($parameters.TraceName, $parameters.Attribute, $parameters.Value, success, error);

function success() {
    $parameters.Success = true;
    $parameters.ErrorMessage = "";
    $parameters.ErrorCode = 0;
    $resolve();
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorMessage = err;
    $parameters.ErrorCode = 2;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin.PluginIsLoadedJS", "CommonPlugin.controller$IsCordovaDefined", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "CommonPlugin.model$ErrorRec"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_CheckFirebase_Plugin_PluginIsLoadedJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action = function (callContext) {
callContext = controller.callContext(callContext);
var isCordovaDefinedVar = new OS.DataTypes.VariableHolder();
var pluginIsLoadedJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Common.CheckFirebase_Plugin$outVars"))());
// Execute Action: IsCordovaDefined
isCordovaDefinedVar.value = CommonPluginController.default.isCordovaDefined$Action(callContext);

if((isCordovaDefinedVar.value.isLoadedOut)) {
pluginIsLoadedJSResult.value = controller.safeExecuteJSNode(NewFirebaseMobilePlugin_WTF_controller_CheckFirebase_Plugin_PluginIsLoadedJS, "PluginIsLoaded", "CheckFirebase_Plugin", {
IsAvailable: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Common.CheckFirebase_Plugin$pluginIsLoadedJSResult"))();
jsNodeResult.isAvailableOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.IsAvailable, OS.Types.Boolean);
return jsNodeResult;
}, {}, {});
if((pluginIsLoadedJSResult.value.isAvailableOut)) {
// Set Result
// IsAvailable = True
outVars.value.isAvailableOut = true;
} else {
// Set Output
// IsAvailable = False
outVars.value.isAvailableOut = false;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Error.ErrorMessage = "Plugin is not loaded."
outVars.value.errorOut.errorMessageAttr = "Plugin is not loaded.";
}

} else {
// Set Output
// IsAvailable = False
outVars.value.isAvailableOut = false;
// Error.ErrorCode = 1
outVars.value.errorOut.errorCodeAttr = "1";
// Error.ErrorMessage = "Cordova is not defined"
outVars.value.errorOut.errorMessageAttr = "Cordova is not defined";
}

return outVars.value;
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Common.CheckFirebase_Plugin$pluginIsLoadedJSResult", [{
name: "IsAvailable",
attrName: "isAvailableOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Common.CheckFirebase_Plugin$outVars", [{
name: "IsAvailable",
attrName: "isAvailableOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.checkFirebase_Plugin$Action = function () {
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
IsAvailable: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.isAvailableOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin.PluginIsLoadedJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
try{
    $parameters.IsAvailable = !!Firebase;
}
catch(e){
    
    $parameters.IsAvailable = false;
}

};
});

define("NewFirebaseMobilePlugin_WTF.controller$ClearAllNotifications", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$ClearAllNotifications.ClearAllNotificationsJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_ClearAllNotifications_ClearAllNotificationsJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.clearAllNotifications$Action = function (callContext) {
callContext = controller.callContext(callContext);
var functionExistsVar = new OS.DataTypes.VariableHolder();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var clearAllNotificationsJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.ClearAllNotifications$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.clearAllNotifications", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_ClearAllNotifications_ClearAllNotificationsJSJS, "ClearAllNotificationsJS", "ClearAllNotifications", {
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.ClearAllNotifications$clearAllNotificationsJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
return jsNodeResult;
}, {}, {}).then(function (results) {
clearAllNotificationsJSJSResult.value = results;
}).then(function () {
// Success = ClearAllNotificationsJS.Success
outVars.value.successOut = clearAllNotificationsJSJSResult.value.successOut;
// Error.ErrorCode = 0
outVars.value.errorOut.errorCodeAttr = "0";
// Error.ErrorMessage = ""
outVars.value.errorOut.errorMessageAttr = "";
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.ClearAllNotifications$clearAllNotificationsJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.ClearAllNotifications$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.clearAllNotifications$Action = function () {
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.clearAllNotifications$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$ClearAllNotifications.ClearAllNotificationsJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.clearAllNotifications(success, error);

function success() {
    $parameters.Success = true;
    $resolve();
}

function error() {
    $parameters.Success = false;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$Create_DYNAMICLINK_CONTROLLER", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "NewFirebaseMobilePlugin_WTF.model$DYNAMICLINK_CONTROLLERRecord", "NewFirebaseMobilePlugin_WTF.model$DYNAMICLINK_CONTROLLERRec", "NewFirebaseMobilePlugin_WTF.entities"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.create_DYNAMICLINK_CONTROLLER$Action = function (uRLIn, timestampIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CRUD.Create_DYNAMICLINK_CONTROLLER$vars"))());
vars.value.uRLInLocal = uRLIn;
vars.value.timestampInLocal = timestampIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var createDYNAMICLINK_CONTROLLERVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CRUD.Create_DYNAMICLINK_CONTROLLER$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// DYNAMICLINK_CONTROLLER.URL = URL
vars.value.dYNAMICLINK_CONTROLLERVar.uRLAttr = vars.value.uRLInLocal;
// DYNAMICLINK_CONTROLLER.ClickTimestamp = Timestamp
vars.value.dYNAMICLINK_CONTROLLERVar.clickTimestampAttr = vars.value.timestampInLocal;
// Execute Action: CreateDYNAMICLINK_CONTROLLER
return NewFirebaseMobilePlugin_WTFModel.entities.DYNAMICLINK_CONTROLLER.create(NewFirebaseMobilePlugin_WTFModel.DYNAMICLINK_CONTROLLERRecord.fromStructure(vars.value.dYNAMICLINK_CONTROLLERVar), callContext).then(function (value) {
createDYNAMICLINK_CONTROLLERVar.value = value;
}).then(function () {
// Success = True
outVars.value.successOut = true;
// Id = CreateDYNAMICLINK_CONTROLLER.Id
outVars.value.idOut = createDYNAMICLINK_CONTROLLERVar.value.idOut;
});
}).catch(function (ex) {
OS.Logger.trace("CRUD.Create_DYNAMICLINK_CONTROLLER", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CRUD.Create_DYNAMICLINK_CONTROLLER$vars", [{
name: "URL",
attrName: "uRLInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Timestamp",
attrName: "timestampInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "DYNAMICLINK_CONTROLLER",
attrName: "dYNAMICLINK_CONTROLLERVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new NewFirebaseMobilePlugin_WTFModel.DYNAMICLINK_CONTROLLERRec();
},
complexType: NewFirebaseMobilePlugin_WTFModel.DYNAMICLINK_CONTROLLERRec
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CRUD.Create_DYNAMICLINK_CONTROLLER$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Id",
attrName: "idOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.create_DYNAMICLINK_CONTROLLER$Action = function (uRLIn, timestampIn) {
uRLIn = (uRLIn === undefined) ? "" : uRLIn;
timestampIn = (timestampIn === undefined) ? "" : timestampIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.create_DYNAMICLINK_CONTROLLER$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(uRLIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(timestampIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Id: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.idOut, OS.Types.LongInteger, true)
};
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$CreateDynamicLinks", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$CreateDynamicLinks.CreateDynamicLinkJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "NewFirebaseMobilePlugin_WTF.model$SettingRec"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_CreateDynamicLinks_CreateDynamicLinkJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.createDynamicLinks$Action = function (settingsIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateDynamicLinks$vars"))());
vars.value.settingsInLocal = settingsIn.clone();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var createDynamicLinkJSJSResult = new OS.DataTypes.VariableHolder();
var serializeSettingsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.JSONSerializeOutputType());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateDynamicLinks$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// JSON Serialize: SerializeSettings
serializeSettingsVar.value.jSONOut = OS.JSONUtils.serializeToJSON(vars.value.settingsInLocal, false, false);
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_CreateDynamicLinks_CreateDynamicLinkJSJS, "CreateDynamicLinkJS", "CreateDynamicLinks", {
Settings: OS.DataTypes.JSConversions.basicTypeToJS(serializeSettingsVar.value.jSONOut, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
Url: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateDynamicLinks$createDynamicLinkJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.urlOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Url, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
createDynamicLinkJSJSResult.value = results;
}).then(function () {
if((createDynamicLinkJSJSResult.value.successOut)) {
// Success = CreateDynamicLinkJS.Success
outVars.value.successOut = createDynamicLinkJSJSResult.value.successOut;
// Url = CreateDynamicLinkJS.Url
outVars.value.urlOut = createDynamicLinkJSJSResult.value.urlOut;
// Error.ErrorCode = CreateDynamicLinkJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = createDynamicLinkJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = CreateDynamicLinkJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = createDynamicLinkJSJSResult.value.errorMessageOut;
} else {
// Error.ErrorCode = CreateDynamicLinkJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = createDynamicLinkJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = CreateDynamicLinkJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = createDynamicLinkJSJSResult.value.errorMessageOut;
// Success = CreateDynamicLinkJS.Success
outVars.value.successOut = createDynamicLinkJSJSResult.value.successOut;
// Url = CreateDynamicLinkJS.Url
outVars.value.urlOut = createDynamicLinkJSJSResult.value.urlOut;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateDynamicLinks$vars", [{
name: "Settings",
attrName: "settingsInLocal",
mandatory: true,
dataType: OS.Types.Record,
defaultValue: function () {
return new NewFirebaseMobilePlugin_WTFModel.SettingRec();
},
complexType: NewFirebaseMobilePlugin_WTFModel.SettingRec
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateDynamicLinks$createDynamicLinkJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Url",
attrName: "urlOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateDynamicLinks$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}, {
name: "Url",
attrName: "urlOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.createDynamicLinks$Action = function (settingsIn) {
settingsIn = (settingsIn === undefined) ? new NewFirebaseMobilePlugin_WTFModel.SettingRec() : settingsIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.createDynamicLinks$Action.bind(controller, settingsIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut,
Url: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.urlOut, OS.Types.Text, true)
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$CreateDynamicLinks.CreateDynamicLinkJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
var dynamicLinkPromise = Firebase.createDynamicLink(JSON.parse($parameters.Settings));

console.log("Settings", JSON.parse($parameters.Settings))

dynamicLinkPromise.then(function(url) {
    $parameters.Success = true;
    $parameters.ErrorCode = 0;
    $parameters.ErrorMessage = "";
    $parameters.Url = url;
    $resolve();
}).catch(function(message) {
    $parameters.Success = false;
    $parameters.ErrorCode = 1;
    $parameters.ErrorMessage = message;
    $parameters.Url = "";
    $resolve();
});
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$CreateShortDynamicLink", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$CreateShortDynamicLink.CreateShortDynamicLinksJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "NewFirebaseMobilePlugin_WTF.model$SettingRec"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_CreateShortDynamicLink_CreateShortDynamicLinksJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.createShortDynamicLink$Action = function (settingsIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateShortDynamicLink$vars"))());
vars.value.settingsInLocal = settingsIn.clone();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var createShortDynamicLinksJSJSResult = new OS.DataTypes.VariableHolder();
var serializeSettingsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.JSONSerializeOutputType());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateShortDynamicLink$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// JSON Serialize: SerializeSettings
serializeSettingsVar.value.jSONOut = OS.JSONUtils.serializeToJSON(vars.value.settingsInLocal, false, false);
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_CreateShortDynamicLink_CreateShortDynamicLinksJSJS, "CreateShortDynamicLinksJS", "CreateShortDynamicLink", {
Settings: OS.DataTypes.JSConversions.basicTypeToJS(serializeSettingsVar.value.jSONOut, OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
Url: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateShortDynamicLink$createShortDynamicLinksJSJSResult"))();
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.urlOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Url, OS.Types.Text);
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
return jsNodeResult;
}, {}, {}).then(function (results) {
createShortDynamicLinksJSJSResult.value = results;
}).then(function () {
if((createShortDynamicLinksJSJSResult.value.successOut)) {
// Error.ErrorCode = CreateShortDynamicLinksJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = createShortDynamicLinksJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = CreateShortDynamicLinksJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = createShortDynamicLinksJSJSResult.value.errorMessageOut;
// Success = CreateShortDynamicLinksJS.Success
outVars.value.successOut = createShortDynamicLinksJSJSResult.value.successOut;
// Url = CreateShortDynamicLinksJS.Url
outVars.value.urlOut = createShortDynamicLinksJSJSResult.value.urlOut;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateShortDynamicLink$vars", [{
name: "Settings",
attrName: "settingsInLocal",
mandatory: true,
dataType: OS.Types.Record,
defaultValue: function () {
return new NewFirebaseMobilePlugin_WTFModel.SettingRec();
},
complexType: NewFirebaseMobilePlugin_WTFModel.SettingRec
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateShortDynamicLink$createShortDynamicLinksJSJSResult", [{
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Url",
attrName: "urlOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateShortDynamicLink$outVars", [{
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Url",
attrName: "urlOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.createShortDynamicLink$Action = function (settingsIn) {
settingsIn = (settingsIn === undefined) ? new NewFirebaseMobilePlugin_WTFModel.SettingRec() : settingsIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.createShortDynamicLink$Action.bind(controller, settingsIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Error: actionResults.errorOut,
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Url: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.urlOut, OS.Types.Text, true)
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$CreateShortDynamicLink.CreateShortDynamicLinksJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
var createShortDynamicLink = Firebase.createShortDynamicLink(JSON.parse($parameters.Settings));

createShortDynamicLink.then(function(url) {
    $parameters.ErrorCode = 0;
    $parameters.ErrorMessage = "";
    $parameters.Url = url;
    $parameters.Success = true; 
    $resolve();
}).catch(function(message) {
    $parameters.ErrorCode = 2;
    $parameters.ErrorMessage = message;  
    $parameters.Url = "";
    $parameters.Success = false; 
    $resolve();
})
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$CreateUnguessableDynamicLink", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$CreateUnguessableDynamicLink.UnguessableDynamicLinkJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "NewFirebaseMobilePlugin_WTF.model$SettingRec"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_CreateUnguessableDynamicLink_UnguessableDynamicLinkJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.createUnguessableDynamicLink$Action = function (settingsIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateUnguessableDynamicLink$vars"))());
vars.value.settingsInLocal = settingsIn.clone();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var unguessableDynamicLinkJSJSResult = new OS.DataTypes.VariableHolder();
var serializeSettingsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.JSONSerializeOutputType());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateUnguessableDynamicLink$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// JSON Serialize: SerializeSettings
serializeSettingsVar.value.jSONOut = OS.JSONUtils.serializeToJSON(vars.value.settingsInLocal, false, false);
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_CreateUnguessableDynamicLink_UnguessableDynamicLinkJSJS, "UnguessableDynamicLinkJS", "CreateUnguessableDynamicLink", {
Settings: OS.DataTypes.JSConversions.basicTypeToJS(serializeSettingsVar.value.jSONOut, OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
Url: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateUnguessableDynamicLink$unguessableDynamicLinkJSJSResult"))();
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.urlOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Url, OS.Types.Text);
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
return jsNodeResult;
}, {}, {}).then(function (results) {
unguessableDynamicLinkJSJSResult.value = results;
}).then(function () {
if((unguessableDynamicLinkJSJSResult.value.successOut)) {
// Url = UnguessableDynamicLinkJS.Url
outVars.value.urlOut = unguessableDynamicLinkJSJSResult.value.urlOut;
// Success = UnguessableDynamicLinkJS.Success
outVars.value.successOut = unguessableDynamicLinkJSJSResult.value.successOut;
// Error.ErrorCode = UnguessableDynamicLinkJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = unguessableDynamicLinkJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = UnguessableDynamicLinkJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = unguessableDynamicLinkJSJSResult.value.errorMessageOut;
} else {
// Success = UnguessableDynamicLinkJS.Success
outVars.value.successOut = unguessableDynamicLinkJSJSResult.value.successOut;
// Url = UnguessableDynamicLinkJS.Url
outVars.value.urlOut = unguessableDynamicLinkJSJSResult.value.urlOut;
// Error.ErrorCode = UnguessableDynamicLinkJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = unguessableDynamicLinkJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = UnguessableDynamicLinkJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = unguessableDynamicLinkJSJSResult.value.errorMessageOut;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateUnguessableDynamicLink$vars", [{
name: "Settings",
attrName: "settingsInLocal",
mandatory: true,
dataType: OS.Types.Record,
defaultValue: function () {
return new NewFirebaseMobilePlugin_WTFModel.SettingRec();
},
complexType: NewFirebaseMobilePlugin_WTFModel.SettingRec
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateUnguessableDynamicLink$unguessableDynamicLinkJSJSResult", [{
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Url",
attrName: "urlOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.DynamicLinks.CreateUnguessableDynamicLink$outVars", [{
name: "Url",
attrName: "urlOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.createUnguessableDynamicLink$Action = function (settingsIn) {
settingsIn = (settingsIn === undefined) ? new NewFirebaseMobilePlugin_WTFModel.SettingRec() : settingsIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.createUnguessableDynamicLink$Action.bind(controller, settingsIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Url: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.urlOut, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$CreateUnguessableDynamicLink.UnguessableDynamicLinkJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
var ungDynamicLink = Firebase.createUnguessableDynamicLink(JSON.parse($parameters.Settings));

ungDynamicLink.then(function(url) {
    $parameters.ErrorCode = 0;
    $parameters.Url = url;
    $parameters.ErrorMessage = "";
    $parameters.Success = true;
    $resolve();
}).catch(function(message) {
    $parameters.ErrorCode = 2;
    $parameters.ErrorMessage = message;
    $parameters.Url = "";
    $parameters.Success = false;
    $resolve();
});
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$DeleteAll_DYNAMICLINK_CONTROLLER", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "NewFirebaseMobilePlugin_WTF.model$DYNAMICLINK_CONTROLLERRec", "NewFirebaseMobilePlugin_WTF.entities"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.deleteAll_DYNAMICLINK_CONTROLLER$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CRUD.DeleteAll_DYNAMICLINK_CONTROLLER$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: DeleteAllDYNAMICLINK_CONTROLLER
return NewFirebaseMobilePlugin_WTFModel.entities.DYNAMICLINK_CONTROLLER.deleteAll(callContext).then(function () {
// Success = True
outVars.value.successOut = true;
});
}).catch(function (ex) {
OS.Logger.trace("CRUD.DeleteAll_DYNAMICLINK_CONTROLLER", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CRUD.DeleteAll_DYNAMICLINK_CONTROLLER$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.deleteAll_DYNAMICLINK_CONTROLLER$Action = function () {
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.deleteAll_DYNAMICLINK_CONTROLLER$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$ForceCrash", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$ForceCrash.ForceCrashJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_ForceCrash_ForceCrashJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.forceCrash$Action = function (callContext) {
callContext = controller.callContext(callContext);
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var functionExistsVar = new OS.DataTypes.VariableHolder();
var forceCrashJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Crashlytics.ForceCrash$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.forceCrashlytics", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_ForceCrash_ForceCrashJSJS, "ForceCrashJS", "ForceCrash", {
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Crashlytics.ForceCrash$forceCrashJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
forceCrashJSJSResult.value = results;
}).then(function () {
// Success = ForceCrashJS.Success
outVars.value.successOut = forceCrashJSJSResult.value.successOut;
// Error.ErrorCode = ForceCrashJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = forceCrashJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = ForceCrashJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = forceCrashJSJSResult.value.errorMessageOut;
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Crashlytics.ForceCrash$forceCrashJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Crashlytics.ForceCrash$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.forceCrash$Action = function () {
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.forceCrash$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$ForceCrash.ForceCrashJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.forceCrashlytics(success, error);

function success() {
    $parameters.Success = true;
    $parameters.ErrorCode = 0;
    $parameters.ErrorMessage = "";
    $resolve();
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorMessage = err;
    $parameters.ErrorCode = 2;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$FunctionExists", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists.FunctionExistsJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_FunctionExists_FunctionExistsJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.functionExists$Action = function (functionIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.FunctionExists$vars"))());
vars.value.functionInLocal = functionIn;
var functionExistsJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.FunctionExists$outVars"))());
functionExistsJSJSResult.value = controller.safeExecuteJSNode(NewFirebaseMobilePlugin_WTF_controller_FunctionExists_FunctionExistsJSJS, "FunctionExistsJS", "FunctionExists", {
Function: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.functionInLocal, OS.Types.Text, true),
Exists: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.FunctionExists$functionExistsJSJSResult"))();
jsNodeResult.existsOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Exists, OS.Types.Boolean);
return jsNodeResult;
}, {}, {});
if((functionExistsJSJSResult.value.existsOut)) {
// Success = True
outVars.value.successOut = true;
// Error.ErrorMessage = ""
outVars.value.errorOut.errorMessageAttr = "";
// Error.ErrorCode = 0
outVars.value.errorOut.errorCodeAttr = "0";
} else {
// Error.ErrorMessage = Function + "doesn't exist"
outVars.value.errorOut.errorMessageAttr = (vars.value.functionInLocal + "doesn\'t exist");
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

return outVars.value;
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.FunctionExists$vars", [{
name: "Function",
attrName: "functionInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.FunctionExists$functionExistsJSJSResult", [{
name: "Exists",
attrName: "existsOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.FunctionExists$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.functionExists$Action = function (functionIn) {
functionIn = (functionIn === undefined) ? "" : functionIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.functionExists$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(functionIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$FunctionExists.FunctionExistsJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
$parameters.Exists = !!$parameters.Function;

console.log("Function", 
$parameters.Exists)
};
});

define("NewFirebaseMobilePlugin_WTF.controller$GeneralLog", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "MobilePatterns.controller", "NewFirebaseMobilePlugin_WTF.controller$ServerAction.GetSiteProperty_EnableLogs", "MobilePatterns.controller$GetNetworkStatus", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$MobilePatterns"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, MobilePatternsController) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.generalLog$Action = function (messageIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.GeneralLog$vars"))());
vars.value.messageInLocal = messageIn;
var getSiteProperty_EnableLogsVar = new OS.DataTypes.VariableHolder();
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.executeSequence(function () {
if((MobilePatternsController.default.getNetworkStatus$Action(callContext.withoutIterationContext()).isOnlineOut)) {
// Execute Action: GetSiteProperty_EnableLogs
return controller.getSiteProperty_EnableLogs$ServerAction(callContext).then(function (value) {
getSiteProperty_EnableLogsVar.value = value;
}).then(function () {
// Logs Enabled?
if((getSiteProperty_EnableLogsVar.value.valueOut)) {
// Execute Action: LogMessage
OS.SystemActions.logMessage(vars.value.messageInLocal, "Firebase", callContext);
}

});
}

});
}).then(function () {
return ;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.GeneralLog$vars", [{
name: "Message",
attrName: "messageInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.generalLog$Action = function (messageIn) {
messageIn = (messageIn === undefined) ? "" : messageIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.generalLog$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(messageIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$GetBadgeNumber", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$GetBadgeNumber.GetBadgeNumberJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_GetBadgeNumber_GetBadgeNumberJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.getBadgeNumber$Action = function (callContext) {
callContext = controller.callContext(callContext);
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var functionExistsVar = new OS.DataTypes.VariableHolder();
var getBadgeNumberJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.GetBadgeNumber$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.getBadgeNumber", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_GetBadgeNumber_GetBadgeNumberJSJS, "GetBadgeNumberJS", "GetBadgeNumber", {
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
BadgeNumber: OS.DataTypes.JSConversions.basicTypeToJS(0, OS.Types.Integer, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.GetBadgeNumber$getBadgeNumberJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.badgeNumberOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.BadgeNumber, OS.Types.Integer);
return jsNodeResult;
}, {}, {}).then(function (results) {
getBadgeNumberJSJSResult.value = results;
}).then(function () {
if((getBadgeNumberJSJSResult.value.successOut)) {
// Success = GetBadgeNumberJS.Success
outVars.value.successOut = getBadgeNumberJSJSResult.value.successOut;
// Error.ErrorCode = 0
outVars.value.errorOut.errorCodeAttr = "0";
// Error.ErrorMessage = ""
outVars.value.errorOut.errorMessageAttr = "";
// BadgeNumber = GetBadgeNumberJS.BadgeNumber
outVars.value.badgeNumberOut = getBadgeNumberJSJSResult.value.badgeNumberOut;
} else {
// Success = GetBadgeNumberJS.Success
outVars.value.successOut = getBadgeNumberJSJSResult.value.successOut;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Error.ErrorMessage = "Error fetching badge number"
outVars.value.errorOut.errorMessageAttr = "Error fetching badge number";
}

});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.GetBadgeNumber$getBadgeNumberJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "BadgeNumber",
attrName: "badgeNumberOut",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.GetBadgeNumber$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}, {
name: "BadgeNumber",
attrName: "badgeNumberOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.getBadgeNumber$Action = function () {
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.getBadgeNumber$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut,
BadgeNumber: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.badgeNumberOut, OS.Types.Integer, true)
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$GetBadgeNumber.GetBadgeNumberJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.getBadgeNumber(success, error);

function success(badgeNumber) {
    $parameters.Success = true;
    $parameters.BadgeNumber = badgeNumber;
    $resolve();
}

function error() {
    $parameters.Success = false;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$GetDevicePlatform", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.controller", "NewFirebaseMobilePlugin_WTF.controller$GetDevicePlatform.MappingPlatformValueJS", "CommonPlugin.controller$GetPlatform", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginController, NewFirebaseMobilePlugin_WTF_controller_GetDevicePlatform_MappingPlatformValueJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.getDevicePlatform$Action = function (callContext) {
callContext = controller.callContext(callContext);
var getPlatformVar = new OS.DataTypes.VariableHolder();
var mappingPlatformValueJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.GetDevicePlatform$outVars"))());
// Execute Action: GetPlatform
getPlatformVar.value = CommonPluginController.default.getPlatform$Action(callContext);

mappingPlatformValueJSResult.value = controller.safeExecuteJSNode(NewFirebaseMobilePlugin_WTF_controller_GetDevicePlatform_MappingPlatformValueJS, "MappingPlatformValue", "GetDevicePlatform", {
Platform: OS.DataTypes.JSConversions.basicTypeToJS(getPlatformVar.value.platformOut, OS.Types.Text, true),
PlatformOutput: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.GetDevicePlatform$mappingPlatformValueJSResult"))();
jsNodeResult.platformOutputOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.PlatformOutput, OS.Types.Text);
return jsNodeResult;
}, {}, {});
if(((mappingPlatformValueJSResult.value.platformOutputOut === "0"))) {
// DevicePlatformId = Android
outVars.value.devicePlatformIdOut = NewFirebaseMobilePlugin_WTFModel.staticEntities.devicePlatform2.android;
} else {
if((mappingPlatformValueJSResult.value.platformOutputOut === "1")) {
// DevicePlatformId = iOS
outVars.value.devicePlatformIdOut = NewFirebaseMobilePlugin_WTFModel.staticEntities.devicePlatform2.iOS;
}

}

return outVars.value;
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.GetDevicePlatform$mappingPlatformValueJSResult", [{
name: "PlatformOutput",
attrName: "platformOutputOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.GetDevicePlatform$outVars", [{
name: "DevicePlatformId",
attrName: "devicePlatformIdOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.getDevicePlatform$Action = function () {
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.getDevicePlatform$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
DevicePlatformId: actionResults.devicePlatformIdOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$GetDevicePlatform.MappingPlatformValueJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
var plat = $parameters.Platform;
if (plat == "android" || plat == "Android") {
    $parameters.PlatformOutput = 0;
} else if (plat == "ios" || plat == "iOS") {
    $parameters.PlatformOutput = 1;
} else if (plat == "windows" || plat == "Windows") {
    $parameters.PlatformOutput = 2;
} else {
    $parameters.PlatformOutput = 3;
}
};
});

define("NewFirebaseMobilePlugin_WTF.controller$GetId", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$GetId.GetIdJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_GetId_GetIdJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.getId$Action = function (callContext) {
callContext = controller.callContext(callContext);
var functionExistsVar = new OS.DataTypes.VariableHolder();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var getIdJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.GetId$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.getId", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_GetId_GetIdJSJS, "GetIdJS", "GetId", {
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
Id: OS.DataTypes.JSConversions.basicTypeToJS(OS.DataTypes.LongInteger.defaultValue, OS.Types.LongInteger, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.GetId$getIdJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.idOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Id, OS.Types.LongInteger);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
getIdJSJSResult.value = results;
}).then(function () {
if((getIdJSJSResult.value.successOut)) {
// Id = GetIdJS.Id
outVars.value.idOut = OS.BuiltinFunctions.longIntegerToText(getIdJSJSResult.value.idOut);
// Success = GetIdJS.Success
outVars.value.successOut = getIdJSJSResult.value.successOut;
// Error.ErrorCode = FunctionExists.Error.ErrorCode
outVars.value.errorOut.errorCodeAttr = functionExistsVar.value.errorOut.errorCodeAttr;
// Error.ErrorMessage = ""
outVars.value.errorOut.errorMessageAttr = "";
} else {
// Id = ""
outVars.value.idOut = "";
// Success = GetIdJS.Success
outVars.value.successOut = getIdJSJSResult.value.successOut;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Error.ErrorMessage = GetIdJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = getIdJSJSResult.value.errorMessageOut;
}

});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.GetId$getIdJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Id",
attrName: "idOut",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.GetId$outVars", [{
name: "Id",
attrName: "idOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.getId$Action = function () {
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.getId$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Id: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.idOut, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$GetId.GetIdJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.getId(success, error);

function success(id) {
    $parameters.Id = id;
    $parameters.Success = true;
    $resolve();
}

function error(err) {
    $parameters.ErrorMessage = err;
    $parameters.Success = false;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$GetToken", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$GetToken.GetTokenJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_GetToken_GetTokenJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.getToken$Action = function (callContext) {
callContext = controller.callContext(callContext);
var functionExistsVar = new OS.DataTypes.VariableHolder();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var getTokenJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.GetToken$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.getToken", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_GetToken_GetTokenJSJS, "GetTokenJS", "GetToken", {
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
Token: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.GetToken$getTokenJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.tokenOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Token, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
getTokenJSJSResult.value = results;
}).then(function () {
if((getTokenJSJSResult.value.successOut)) {
// Success = GetTokenJS.Success
outVars.value.successOut = getTokenJSJSResult.value.successOut;
// Token = GetTokenJS.Token
outVars.value.tokenOut = getTokenJSJSResult.value.tokenOut;
} else {
// Success = GetTokenJS.Success
outVars.value.successOut = getTokenJSJSResult.value.successOut;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Error.ErrorMessage = "Error geting token"
outVars.value.errorOut.errorMessageAttr = "Error geting token";
}

});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.GetToken$getTokenJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Token",
attrName: "tokenOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.GetToken$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}, {
name: "Token",
attrName: "tokenOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.getToken$Action = function () {
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.getToken$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut,
Token: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.tokenOut, OS.Types.Text, true)
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$GetToken.GetTokenJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.getToken(success, error);

function success(token) {
    $parameters.Token = token;
    $parameters.Success = true;
    $resolve();
}

function error() {
    $parameters.Success = false;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$GrantsPermission", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$GrantsPermission.GrantPermissionJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "NewFirebaseMobilePlugin_WTF.controller$HasPermission", "NewFirebaseMobilePlugin_WTF.controller$IsIos"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_GrantsPermission_GrantPermissionJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.grantsPermission$Action = function (callContext) {
callContext = controller.callContext(callContext);
var functionExistsVar = new OS.DataTypes.VariableHolder();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var hasPermissionVar = new OS.DataTypes.VariableHolder();
var isIosVar = new OS.DataTypes.VariableHolder();
var grantPermissionJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.GrantsPermission$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.grantPermission", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
// Execute Action: IsIos
isIosVar.value = NewFirebaseMobilePlugin_WTFController.default.isIos$Action(callContext);

return OS.Flow.executeSequence(function () {
if((isIosVar.value.isIOSOut)) {
// Execute Action: HasPermission
return NewFirebaseMobilePlugin_WTFController.default.hasPermission$Action(callContext).then(function (value) {
hasPermissionVar.value = value;
}).then(function () {
return OS.Flow.executeSequence(function () {
if((hasPermissionVar.value.hasPermissionOut)) {
// Success = True
outVars.value.successOut = true;
} else {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_GrantsPermission_GrantPermissionJSJS, "GrantPermissionJS", "GrantsPermission", {
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.GrantsPermission$grantPermissionJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
return jsNodeResult;
}, {}, {}).then(function (results) {
grantPermissionJSJSResult.value = results;
}).then(function () {
// Success = GrantPermissionJS.Success
outVars.value.successOut = grantPermissionJSJSResult.value.successOut;
});
}

});
});
} else {
// Success = True
outVars.value.successOut = true;
// Error.ErrorMessage = ""
outVars.value.errorOut.errorMessageAttr = "";
// Error.ErrorCode = 0
outVars.value.errorOut.errorCodeAttr = "0";
}

});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.GrantsPermission$grantPermissionJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.GrantsPermission$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.grantsPermission$Action = function () {
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.grantsPermission$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$GrantsPermission.GrantPermissionJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
function success() {
    $parameters.Success = true;
    $resolve();
}

function error() {
    $parameters.Success = false;
    $resolve();
}

Firebase.grantPermission(success, error);

});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$HandleNotificationData", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "NewFirebaseMobilePlugin_WTF.controller$HandleNotificationData.HandleNotificationDataJSJS", "NewFirebaseMobilePlugin_WTF.model$KeyValuePairList", "NewFirebaseMobilePlugin_WTF.model$NotificationDataRec"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, NewFirebaseMobilePlugin_WTF_controller_HandleNotificationData_HandleNotificationDataJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.handleNotificationData$Action = function (notificationJSONIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.HandleNotificationData$vars"))());
vars.value.notificationJSONInLocal = notificationJSONIn;
var handleNotificationDataJSJSResult = new OS.DataTypes.VariableHolder();
var jSONDeserializeKeyValuePairListVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getJSONDeserializeOutputType(NewFirebaseMobilePlugin_WTFModel.KeyValuePairList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.HandleNotificationData$outVars"))());
handleNotificationDataJSJSResult.value = controller.safeExecuteJSNode(NewFirebaseMobilePlugin_WTF_controller_HandleNotificationData_HandleNotificationDataJSJS, "HandleNotificationDataJS", "HandleNotificationData", {
NotificationJSON: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.notificationJSONInLocal, OS.Types.Text, true),
Title: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
Body: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
Deeplink: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
AppInBackground: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
DataKeyValues: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.HandleNotificationData$handleNotificationDataJSJSResult"))();
jsNodeResult.titleOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Title, OS.Types.Text);
jsNodeResult.bodyOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Body, OS.Types.Text);
jsNodeResult.deeplinkOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Deeplink, OS.Types.Text);
jsNodeResult.appInBackgroundOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.AppInBackground, OS.Types.Boolean);
jsNodeResult.dataKeyValuesOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.DataKeyValues, OS.Types.Text);
return jsNodeResult;
}, {}, {});
// JSON Deserialize: JSONDeserializeKeyValuePairList
jSONDeserializeKeyValuePairListVar.value.dataOut = OS.JSONUtils.deserializeFromJSON(handleNotificationDataJSJSResult.value.dataKeyValuesOut, NewFirebaseMobilePlugin_WTFModel.KeyValuePairList, false);
// NotificationData.Title = HandleNotificationDataJS.Title
outVars.value.notificationDataOut.titleAttr = handleNotificationDataJSJSResult.value.titleOut;
// NotificationData.Body = HandleNotificationDataJS.Body
outVars.value.notificationDataOut.bodyAttr = handleNotificationDataJSJSResult.value.bodyOut;
// NotificationData.Deeplink = HandleNotificationDataJS.Deeplink
outVars.value.notificationDataOut.deeplinkAttr = handleNotificationDataJSJSResult.value.deeplinkOut;
// NotificationData.AppInBackground = HandleNotificationDataJS.AppInBackground
outVars.value.notificationDataOut.appInBackgroundAttr = handleNotificationDataJSJSResult.value.appInBackgroundOut;
// NotificationData.DataKeyValues = JSONDeserializeKeyValuePairList.Data
outVars.value.notificationDataOut.dataKeyValuesAttr = jSONDeserializeKeyValuePairListVar.value.dataOut;
return outVars.value;
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.HandleNotificationData$vars", [{
name: "NotificationJSON",
attrName: "notificationJSONInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.HandleNotificationData$handleNotificationDataJSJSResult", [{
name: "Title",
attrName: "titleOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Body",
attrName: "bodyOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Deeplink",
attrName: "deeplinkOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "AppInBackground",
attrName: "appInBackgroundOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "DataKeyValues",
attrName: "dataKeyValuesOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.HandleNotificationData$outVars", [{
name: "NotificationData",
attrName: "notificationDataOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new NewFirebaseMobilePlugin_WTFModel.NotificationDataRec();
},
complexType: NewFirebaseMobilePlugin_WTFModel.NotificationDataRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.handleNotificationData$Action = function (notificationJSONIn) {
notificationJSONIn = (notificationJSONIn === undefined) ? "" : notificationJSONIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.handleNotificationData$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(notificationJSONIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
NotificationData: actionResults.notificationDataOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$HandleNotificationData.HandleNotificationDataJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
if($parameters.NotificationJSON) {
    var notificationData = JSON.parse($parameters.NotificationJSON);
    $parameters.Title = notificationData.title ? notificationData.title : "";
    $parameters.Body = notificationData.body ? notificationData.body : "";
    $parameters.Deeplink = notificationData.click_action ? notificationData.click_action : "";
    $parameters.AppInBackground = notificationData.tap ? notificationData.tap : false;
        
    var data = extractDataFromNotification(notificationData);
    $parameters.DataKeyValues = JSON.stringify(data);
}

function extractDataFromNotification(notificationData) {
    var unwantedKeys = ['title', 'body', 'message', 'tap', 'sound', 'badge', 'click_action'];
    return Object.keys(notificationData)
        .filter(function(key) {
            return !unwantedKeys.includes(key);
        })
        .map(function(key) {
            return {'Key': key, 'Value': notificationData[key]};
        });
}
};
});

define("NewFirebaseMobilePlugin_WTF.controller$HasPermission", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$HasPermission.HasPermissionJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_HasPermission_HasPermissionJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.hasPermission$Action = function (callContext) {
callContext = controller.callContext(callContext);
var functionExistsVar = new OS.DataTypes.VariableHolder();
var hasPermissionJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.HasPermission$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.hasPermission", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_HasPermission_HasPermissionJSJS, "HasPermissionJS", "HasPermission", {
HasPermission: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.HasPermission$hasPermissionJSJSResult"))();
jsNodeResult.hasPermissionOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.HasPermission, OS.Types.Boolean);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
hasPermissionJSJSResult.value = results;
}).then(function () {
// HasPermission = HasPermissionJS.HasPermission
outVars.value.hasPermissionOut = hasPermissionJSJSResult.value.hasPermissionOut;
// Error.ErrorCode = HasPermissionJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = hasPermissionJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = HasPermissionJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = hasPermissionJSJSResult.value.errorMessageOut;
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// HasPermission = False
outVars.value.hasPermissionOut = false;
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.HasPermission$hasPermissionJSJSResult", [{
name: "HasPermission",
attrName: "hasPermissionOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.HasPermission$outVars", [{
name: "HasPermission",
attrName: "hasPermissionOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.hasPermission$Action = function () {
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.hasPermission$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
HasPermission: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.hasPermissionOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$HasPermission.HasPermissionJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
$parameters.ErrorMessage = "";
$parameters.ErrorCode = 0;

function success(data) {
    $parameters.HasPermission = data.isEnabled;
    $resolve();
}

function error(err) {
    $parameters.HasPermission = false;
    $parameters.ErrorCode = 2;
    $parameters.ErrorMessage = err;
    $resolve();
}

Firebase.hasPermission(success, error);

});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$IncrementCounter", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$IncrementCounter.IncrementCounterJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_IncrementCounter_IncrementCounterJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.incrementCounter$Action = function (traceNameIn, counterNameIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.IncrementCounter$vars"))());
vars.value.traceNameInLocal = traceNameIn;
vars.value.counterNameInLocal = counterNameIn;
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var functionExistsVar = new OS.DataTypes.VariableHolder();
var incrementCounterJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.IncrementCounter$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.incrementCounter", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_IncrementCounter_IncrementCounterJSJS, "IncrementCounterJS", "IncrementCounter", {
CounterName: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.counterNameInLocal, OS.Types.Integer, true),
TraceName: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.traceNameInLocal, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.IncrementCounter$incrementCounterJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
incrementCounterJSJSResult.value = results;
}).then(function () {
// Success = IncrementCounterJS.Success
outVars.value.successOut = incrementCounterJSJSResult.value.successOut;
// Error.ErrorCode = IncrementCounterJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = incrementCounterJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = IncrementCounterJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = incrementCounterJSJSResult.value.errorMessageOut;
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.IncrementCounter$vars", [{
name: "TraceName",
attrName: "traceNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "CounterName",
attrName: "counterNameInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.IncrementCounter$incrementCounterJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.IncrementCounter$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.incrementCounter$Action = function (traceNameIn, counterNameIn) {
traceNameIn = (traceNameIn === undefined) ? "" : traceNameIn;
counterNameIn = (counterNameIn === undefined) ? 0 : counterNameIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.incrementCounter$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(traceNameIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(counterNameIn, OS.Types.Integer)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$IncrementCounter.IncrementCounterJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.incrementCounter($parameters.TraceName, $parameters.CounterName, success, error);

function success() {
    $parameters.Success = true;
    $parameters.ErrorMessage = "";
    $parameters.ErrorCode = 0;
    $resolve();
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorMessage = err;
    $parameters.ErrorCode = 2;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$InitCloudMessaging", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$GrantsPermission", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "NewFirebaseMobilePlugin_WTF.model$RegisterDevice_ResponseRec", "NewFirebaseMobilePlugin_WTF.controller$RegisterDevice", "NewFirebaseMobilePlugin_WTF.model$InitCloudMessaging_ResponseRec", "NewFirebaseMobilePlugin_WTF.model$GeneralResponseRec"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.initCloudMessaging$Action = function (callContext) {
callContext = controller.callContext(callContext);
var grantsPermissionVar = new OS.DataTypes.VariableHolder();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var registerDeviceVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.InitCloudMessaging$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: GrantsPermission
return NewFirebaseMobilePlugin_WTFController.default.grantsPermission$Action(callContext).then(function (value) {
grantsPermissionVar.value = value;
}).then(function () {
// Response.HasPermission = GrantsPermission.Success
outVars.value.responseOut.hasPermissionAttr = grantsPermissionVar.value.successOut;
// Response.PermissionGranted = GrantsPermission.Success
outVars.value.responseOut.permissionGrantedAttr = grantsPermissionVar.value.successOut;
// Response.General_Response.ErrorMessage = GrantsPermission.Error.ErrorMessage
outVars.value.responseOut.general_ResponseAttr.errorMessageAttr = grantsPermissionVar.value.errorOut.errorMessageAttr;
// Execute Action: RegisterDevice
return NewFirebaseMobilePlugin_WTFController.default.registerDevice$Action(callContext).then(function (value) {
registerDeviceVar.value = value;
});
}).then(function () {
// Response = RegisterDevice.Response
outVars.value.responseOut = OS.DataTypes.JSConversions.typeConvertRecord(registerDeviceVar.value.responseOut, new NewFirebaseMobilePlugin_WTFModel.InitCloudMessaging_ResponseRec(), function (source, target) {
target.permissionGrantedAttr = outVars.value.responseOut.permissionGrantedAttr;
target.hasPermissionAttr = source.hasPermissionAttr;
target.registrationIdAttr = source.registrationIdAttr;
target.deviceHardwareIdAttr = source.deviceHardwareIdAttr;
target.applicationIdAttr = source.applicationIdAttr;
target.general_ResponseAttr = source.general_ResponseAttr;
return target;
});
});
} else {
// Response.General_Response.Success = CheckFirebase_Plugin.IsAvailable
outVars.value.responseOut.general_ResponseAttr.successAttr = checkFirebase_PluginVar.value.isAvailableOut;
// Response.General_Response.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.responseOut.general_ResponseAttr.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Response.General_Response.ErrorCode = 2
outVars.value.responseOut.general_ResponseAttr.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.InitCloudMessaging$outVars", [{
name: "Response",
attrName: "responseOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new NewFirebaseMobilePlugin_WTFModel.InitCloudMessaging_ResponseRec();
},
complexType: NewFirebaseMobilePlugin_WTFModel.InitCloudMessaging_ResponseRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.initCloudMessaging$Action = function () {
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.initCloudMessaging$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Response: actionResults.responseOut
};
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$IsIos", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "NewFirebaseMobilePlugin_WTF.controller$GetDevicePlatform"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.isIos$Action = function (callContext) {
callContext = controller.callContext(callContext);
var getDevicePlatformVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.IsIos$outVars"))());
// Execute Action: GetDevicePlatform
getDevicePlatformVar.value = NewFirebaseMobilePlugin_WTFController.default.getDevicePlatform$Action(callContext);

// IsIOS = GetDevicePlatform.DevicePlatformId = iOS
outVars.value.isIOSOut = (getDevicePlatformVar.value.devicePlatformIdOut === NewFirebaseMobilePlugin_WTFModel.staticEntities.devicePlatform2.iOS);
return outVars.value;
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Private.IsIos$outVars", [{
name: "IsIOS",
attrName: "isIOSOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.isIos$Action = function () {
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.isIos$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
IsIOS: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.isIOSOut, OS.Types.Boolean, true)
};
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$LogError", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$LogError.LogErrorJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_LogError_LogErrorJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.logError$Action = function (messageIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Crashlytics.LogError$vars"))());
vars.value.messageInLocal = messageIn;
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var functionExistsVar = new OS.DataTypes.VariableHolder();
var logErrorJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Crashlytics.LogError$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.logError", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_LogError_LogErrorJSJS, "LogErrorJS", "LogError", {
Message: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.messageInLocal, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Crashlytics.LogError$logErrorJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
logErrorJSJSResult.value = results;
}).then(function () {
// Success = LogErrorJS.Success
outVars.value.successOut = logErrorJSJSResult.value.successOut;
// Error.ErrorCode = LogErrorJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = logErrorJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = LogErrorJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = logErrorJSJSResult.value.errorMessageOut;
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Crashlytics.LogError$vars", [{
name: "Message",
attrName: "messageInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Crashlytics.LogError$logErrorJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Crashlytics.LogError$outVars", [{
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.logError$Action = function (messageIn) {
messageIn = (messageIn === undefined) ? "" : messageIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.logError$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(messageIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Error: actionResults.errorOut,
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$LogError.LogErrorJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.logError($parameters.Message, success, error);

function success() {
    $parameters.Success = true;
    $parameters.ErrorMessage = "",
    $parameters.ErrorCode = 0;
    $resolve();
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorMessage = err;
    $parameters.ErrorCode = 2;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$LogEvent", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$LogEvent.ParametersBuilderJSJS", "NewFirebaseMobilePlugin_WTF.controller$LogEvent.LogEventJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_LogEvent_ParametersBuilderJSJS, NewFirebaseMobilePlugin_WTF_controller_LogEvent_LogEventJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.logEvent$Action = function (eventNameIn, parameter1_KeyIn, parameter1_ValueIn, parameter2_KeyIn, parameter2_ValueIn, parameter3_KeyIn, parameter3_ValueIn, parameter4_KeyIn, parameter4_ValueIn, parameter5_KeyIn, parameter5_ValueIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.LogEvent$vars"))());
vars.value.eventNameInLocal = eventNameIn;
vars.value.parameter1_KeyInLocal = parameter1_KeyIn;
vars.value.parameter1_ValueInLocal = parameter1_ValueIn;
vars.value.parameter2_KeyInLocal = parameter2_KeyIn;
vars.value.parameter2_ValueInLocal = parameter2_ValueIn;
vars.value.parameter3_KeyInLocal = parameter3_KeyIn;
vars.value.parameter3_ValueInLocal = parameter3_ValueIn;
vars.value.parameter4_KeyInLocal = parameter4_KeyIn;
vars.value.parameter4_ValueInLocal = parameter4_ValueIn;
vars.value.parameter5_KeyInLocal = parameter5_KeyIn;
vars.value.parameter5_ValueInLocal = parameter5_ValueIn;
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var functionExistsVar = new OS.DataTypes.VariableHolder();
var parametersBuilderJSJSResult = new OS.DataTypes.VariableHolder();
var logEventJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.LogEvent$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.logEvent", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_LogEvent_ParametersBuilderJSJS, "ParametersBuilderJS", "LogEvent", {
Parameter1_Key: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.parameter1_KeyInLocal, OS.Types.Text, true),
Parameter1_Value: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.parameter1_ValueInLocal, OS.Types.Text, true),
Parameter2_Value: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.parameter2_ValueInLocal, OS.Types.Text, true),
Parameter3_Value: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.parameter3_ValueInLocal, OS.Types.Text, true),
Parameter4_Key: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.parameter4_KeyInLocal, OS.Types.Text, true),
Parameter2_Key: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.parameter2_KeyInLocal, OS.Types.Text, true),
Parameter4_Value: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.parameter4_ValueInLocal, OS.Types.Text, true),
Parameter3_Key: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.parameter3_KeyInLocal, OS.Types.Text, true),
Parameter5_Value: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.parameter5_ValueInLocal, OS.Types.Text, true),
Parameter5_Key: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.parameter5_KeyInLocal, OS.Types.Text, true),
Parameters: OS.DataTypes.JSConversions.basicTypeToJS(null, OS.Types.Object, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.LogEvent$parametersBuilderJSJSResult"))();
jsNodeResult.parametersOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Parameters, OS.Types.Object);
return jsNodeResult;
}, {}, {}).then(function (results) {
parametersBuilderJSJSResult.value = results;
}).then(function () {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_LogEvent_LogEventJSJS, "LogEventJS", "LogEvent", {
Parameters: OS.DataTypes.JSConversions.basicTypeToJS(parametersBuilderJSJSResult.value.parametersOut, OS.Types.Object, true),
EventName: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.eventNameInLocal, OS.Types.Text, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.LogEvent$logEventJSJSResult"))();
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
return jsNodeResult;
}, {}, {}).then(function (results) {
logEventJSJSResult.value = results;
});
}).then(function () {
// Success = LogEventJS.Success
outVars.value.successOut = logEventJSJSResult.value.successOut;
// Error.ErrorCode = LogEventJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = logEventJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = LogEventJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = logEventJSJSResult.value.errorMessageOut;
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.LogEvent$vars", [{
name: "EventName",
attrName: "eventNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter1_Key",
attrName: "parameter1_KeyInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter1_Value",
attrName: "parameter1_ValueInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter2_Key",
attrName: "parameter2_KeyInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter2_Value",
attrName: "parameter2_ValueInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter3_Key",
attrName: "parameter3_KeyInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter3_Value",
attrName: "parameter3_ValueInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter4_Key",
attrName: "parameter4_KeyInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter4_Value",
attrName: "parameter4_ValueInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter5_Key",
attrName: "parameter5_KeyInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter5_Value",
attrName: "parameter5_ValueInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.LogEvent$parametersBuilderJSJSResult", [{
name: "Parameters",
attrName: "parametersOut",
mandatory: true,
dataType: OS.Types.Object,
defaultValue: function () {
return null;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.LogEvent$logEventJSJSResult", [{
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.LogEvent$outVars", [{
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.logEvent$Action = function (eventNameIn, parameter1_KeyIn, parameter1_ValueIn, parameter2_KeyIn, parameter2_ValueIn, parameter3_KeyIn, parameter3_ValueIn, parameter4_KeyIn, parameter4_ValueIn, parameter5_KeyIn, parameter5_ValueIn) {
eventNameIn = (eventNameIn === undefined) ? "" : eventNameIn;
parameter1_KeyIn = (parameter1_KeyIn === undefined) ? "" : parameter1_KeyIn;
parameter1_ValueIn = (parameter1_ValueIn === undefined) ? "" : parameter1_ValueIn;
parameter2_KeyIn = (parameter2_KeyIn === undefined) ? "" : parameter2_KeyIn;
parameter2_ValueIn = (parameter2_ValueIn === undefined) ? "" : parameter2_ValueIn;
parameter3_KeyIn = (parameter3_KeyIn === undefined) ? "" : parameter3_KeyIn;
parameter3_ValueIn = (parameter3_ValueIn === undefined) ? "" : parameter3_ValueIn;
parameter4_KeyIn = (parameter4_KeyIn === undefined) ? "" : parameter4_KeyIn;
parameter4_ValueIn = (parameter4_ValueIn === undefined) ? "" : parameter4_ValueIn;
parameter5_KeyIn = (parameter5_KeyIn === undefined) ? "" : parameter5_KeyIn;
parameter5_ValueIn = (parameter5_ValueIn === undefined) ? "" : parameter5_ValueIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.logEvent$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(eventNameIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter1_KeyIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter1_ValueIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter2_KeyIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter2_ValueIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter3_KeyIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter3_ValueIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter4_KeyIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter4_ValueIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter5_KeyIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter5_ValueIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Error: actionResults.errorOut,
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$LogEvent.ParametersBuilderJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
var parameters = {};
addKeyValue($parameters.Parameter1_Key, $parameters.Parameter1_Value);
addKeyValue($parameters.Parameter2_Key, $parameters.Parameter2_Value);
addKeyValue($parameters.Parameter3_Key, $parameters.Parameter3_Value);
addKeyValue($parameters.Parameter4_Key, $parameters.Parameter4_Value);
addKeyValue($parameters.Parameter5_Key, $parameters.Parameter5_Value);

function addKeyValue (key, val) {
    if (key !== "" && val !== "") {
        parameters[key] = val;
    }
}

$parameters.Parameters = parameters;
$resolve();
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$LogEvent.LogEventJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.logEvent($parameters.EventName, $parameters.Parameters, success, error);

function success() {
    $parameters.Success = true;
    $parameters.ErrorMessage = "";
    $parameters.ErrorCode = 0;
    $resolve();
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorMessage = err;
    $parameters.ErrorCode = 2;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$OpenNotification", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$OpenNotification.OnNotificationOpenJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists", "NewFirebaseMobilePlugin_WTF.model$NotificationDataRec", "NewFirebaseMobilePlugin_WTF.controller$HandleNotificationData", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_OpenNotification_OnNotificationOpenJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.openNotification$Action = function (callContext) {
callContext = controller.callContext(callContext);
var functionExistsVar = new OS.DataTypes.VariableHolder();
var handleNotificationDataVar = new OS.DataTypes.VariableHolder();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var onNotificationOpenJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.OpenNotification$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.onNotificationOpen", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_OpenNotification_OnNotificationOpenJSJS, "OnNotificationOpenJS", "OpenNotification", {
NotificationData: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
HasNotification: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.OpenNotification$onNotificationOpenJSJSResult"))();
jsNodeResult.notificationDataOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.NotificationData, OS.Types.Text);
jsNodeResult.hasNotificationOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.HasNotification, OS.Types.Boolean);
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
onNotificationOpenJSJSResult.value = results;
}).then(function () {
if((onNotificationOpenJSJSResult.value.successOut)) {
if((onNotificationOpenJSJSResult.value.hasNotificationOut)) {
// Success = OnNotificationOpenJS.Success
outVars.value.successOut = onNotificationOpenJSJSResult.value.successOut;
// Error.ErrorCode = 0
outVars.value.errorOut.errorCodeAttr = "0";
// Error.ErrorMessage = ""
outVars.value.errorOut.errorMessageAttr = "";
} else {
// Execute Action: HandleNotificationData
handleNotificationDataVar.value = NewFirebaseMobilePlugin_WTFController.default.handleNotificationData$Action(onNotificationOpenJSJSResult.value.notificationDataOut, callContext);

// HasNotification = True
outVars.value.hasNotificationOut = true;
// Success = True
outVars.value.successOut = true;
// NotificationData = HandleNotificationData.NotificationData
outVars.value.notificationDataOut = handleNotificationDataVar.value.notificationDataOut;
// Error.ErrorCode = 0
outVars.value.errorOut.errorCodeAttr = "0";
// Error.ErrorMessage = ""
outVars.value.errorOut.errorMessageAttr = "";
}

} else {
// Error.ErrorMessage = OnNotificationOpenJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = onNotificationOpenJSJSResult.value.errorMessageOut;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.OpenNotification$onNotificationOpenJSJSResult", [{
name: "NotificationData",
attrName: "notificationDataOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "HasNotification",
attrName: "hasNotificationOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.OpenNotification$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}, {
name: "HasNotification",
attrName: "hasNotificationOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "NotificationData",
attrName: "notificationDataOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new NewFirebaseMobilePlugin_WTFModel.NotificationDataRec();
},
complexType: NewFirebaseMobilePlugin_WTFModel.NotificationDataRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.openNotification$Action = function () {
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.openNotification$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut,
HasNotification: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.hasNotificationOut, OS.Types.Boolean, true),
NotificationData: actionResults.notificationDataOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$OpenNotification.OnNotificationOpenJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.onNotificationOpen(success, error);

function success(notification) {
    $parameters.NotificationData = JSON.stringify(notification);
    $parameters.HasNotification = true;
    $parameters.Success = true;
    $resolve();
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorMessage = JSON.stringify(err);
    $resolve();
}

setTimeout(function() {
    $resolve();
}, 50);
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$RegisterDevice", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "CommonPlugin.controller", "MobilePatterns.controller", "NewFirebaseMobilePlugin_WTF.controller$RegisterDevice.GetTokenJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$HasPermission", "NewFirebaseMobilePlugin_WTF.controller$GetDevicePlatform", "NewFirebaseMobilePlugin_WTF.controller$GeneralLog", "CommonPlugin.controller$GetDeviceID", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "MobilePatterns.controller$GetNetworkStatus", "NewFirebaseMobilePlugin_WTF.referencesHealth$MobilePatterns", "NewFirebaseMobilePlugin_WTF.model$RegisterDevice_ResponseRec"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, CommonPluginController, MobilePatternsController, NewFirebaseMobilePlugin_WTF_controller_RegisterDevice_GetTokenJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.registerDevice$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var hasPermissionVar = new OS.DataTypes.VariableHolder();
var getDevicePlatformVar = new OS.DataTypes.VariableHolder();
var getDeviceIDVar = new OS.DataTypes.VariableHolder();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var getTokenJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.RegisterDevice$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: GetDevicePlatform
getDevicePlatformVar.value = NewFirebaseMobilePlugin_WTFController.default.getDevicePlatform$Action(callContext);

// is iOS
return OS.Flow.executeSequence(function () {
if(((getDevicePlatformVar.value.devicePlatformIdOut === NewFirebaseMobilePlugin_WTFModel.staticEntities.devicePlatform2.iOS))) {
// Execute Action: HasPermission
return NewFirebaseMobilePlugin_WTFController.default.hasPermission$Action(callContext).then(function (value) {
hasPermissionVar.value = value;
}).then(function () {
// hasPermission
// Response.HasPermission = HasPermission.HasPermission
outVars.value.responseOut.hasPermissionAttr = hasPermissionVar.value.hasPermissionOut;
}).then(function () {
if((!(hasPermissionVar.value.hasPermissionOut))) {
return OS.Flow.returnAsync(outVars.value);

}

});
}

}).then(function () {
// Execute Action: GetDeviceID
getDeviceIDVar.value = CommonPluginController.default.getDeviceID$Action(callContext);

return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_RegisterDevice_GetTokenJSJS, "GetTokenJS", "RegisterDevice", {
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
Token: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.RegisterDevice$getTokenJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.tokenOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Token, OS.Types.Text);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
getTokenJSJSResult.value = results;
}).then(function () {
// Execute Action: GeneralLog
return NewFirebaseMobilePlugin_WTFController.default.generalLog$Action((("RegisterDevice " + "\r\n") + (((getTokenJSJSResult.value.errorMessageOut === "")) ? (((((((("UserId: " + (OS.BuiltinFunctions.getUserId()).toString()) + " DeviceId: ") + getDeviceIDVar.value.deviceHwIdOut) + " Platform: ") + (getDevicePlatformVar.value.devicePlatformIdOut).toString()) + " Token: ") + getTokenJSJSResult.value.tokenOut)) : (("ErrorMessage: " + getTokenJSJSResult.value.errorMessageOut)))), callContext);
}).then(function () {
// Response.RegistrationId = GetTokenJS.Token
outVars.value.responseOut.registrationIdAttr = getTokenJSJSResult.value.tokenOut;
// Response.DeviceHardwareId = GetDeviceID.DeviceHwId
outVars.value.responseOut.deviceHardwareIdAttr = getDeviceIDVar.value.deviceHwIdOut;
// Response.ApplicationId = GetEntryEspaceName
outVars.value.responseOut.applicationIdAttr = OS.BuiltinFunctions.getEntryEspaceName();
});
}).then(function () {
// Get Token is success?
if((getTokenJSJSResult.value.successOut)) {
// Response.General_Response.ErrorMessage = GetTokenJS.Success
outVars.value.responseOut.general_ResponseAttr.errorMessageAttr = (getTokenJSJSResult.value.successOut ? "True" : "False");
// Response.General_Response.ErrorMessage = GetTokenJS.ErrorMessage
outVars.value.responseOut.general_ResponseAttr.errorMessageAttr = getTokenJSJSResult.value.errorMessageOut;
} else {
// Response.General_Response.Success = GetTokenJS.Success
outVars.value.responseOut.general_ResponseAttr.successAttr = getTokenJSJSResult.value.successOut;
// Response.General_Response.ErrorMessage = GetTokenJS.ErrorMessage
outVars.value.responseOut.general_ResponseAttr.errorMessageAttr = getTokenJSJSResult.value.errorMessageOut;
}

});
} else {
if((MobilePatternsController.default.getNetworkStatus$Action(callContext.withoutIterationContext()).isOnlineOut)) {
// Response.General_Response.Success = CheckFirebase_Plugin.IsAvailable
outVars.value.responseOut.general_ResponseAttr.successAttr = checkFirebase_PluginVar.value.isAvailableOut;
// Response.General_Response.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.responseOut.general_ResponseAttr.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Response.General_Response.ErrorCode = 2
outVars.value.responseOut.general_ResponseAttr.errorCodeAttr = "2";
} else {
// Response.General_Response.Success = CheckFirebase_Plugin.IsAvailable
outVars.value.responseOut.general_ResponseAttr.successAttr = checkFirebase_PluginVar.value.isAvailableOut;
// Response.General_Response.ErrorMessage = "Device is offline"
outVars.value.responseOut.general_ResponseAttr.errorMessageAttr = "Device is offline";
}

}

});
}).catch(function (ex) {
OS.Logger.trace("CloudMessaging.RegisterDevice", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Response.General_Response.Success = False
outVars.value.responseOut.general_ResponseAttr.successAttr = false;
// Response.General_Response.ErrorMessage = AllExceptions.ExceptionMessage
outVars.value.responseOut.general_ResponseAttr.errorMessageAttr = allExceptionsVar.value.exceptionMessageAttr;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.RegisterDevice$getTokenJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Token",
attrName: "tokenOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.RegisterDevice$outVars", [{
name: "Response",
attrName: "responseOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new NewFirebaseMobilePlugin_WTFModel.RegisterDevice_ResponseRec();
},
complexType: NewFirebaseMobilePlugin_WTFModel.RegisterDevice_ResponseRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.registerDevice$Action = function () {
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.registerDevice$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Response: actionResults.responseOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$RegisterDevice.GetTokenJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
setTimeout(Firebase.getToken(success, error), 1000);

function success(token) {
    if (token === null) {
        setTimeout(Firebase.getToken(success, error), 1000);
    } else {
        $parameters.Success = true;
        $parameters.Token = token;
        $resolve();
    }
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorMessage = err;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$SetAnalyticsCollectionEnabled", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$SetAnalyticsCollectionEnabled.SetAnalyticsCollectionEnabledJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_SetAnalyticsCollectionEnabled_SetAnalyticsCollectionEnabledJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.setAnalyticsCollectionEnabled$Action = function (enableIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetAnalyticsCollectionEnabled$vars"))());
vars.value.enableInLocal = enableIn;
var functionExistsVar = new OS.DataTypes.VariableHolder();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var setAnalyticsCollectionEnabledJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetAnalyticsCollectionEnabled$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.setAnalyticsCollectionEnabled", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_SetAnalyticsCollectionEnabled_SetAnalyticsCollectionEnabledJSJS, "SetAnalyticsCollectionEnabledJS", "SetAnalyticsCollectionEnabled", {
Enable: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.enableInLocal, OS.Types.Boolean, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetAnalyticsCollectionEnabled$setAnalyticsCollectionEnabledJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
setAnalyticsCollectionEnabledJSJSResult.value = results;
}).then(function () {
// Success = SetAnalyticsCollectionEnabledJS.Success
outVars.value.successOut = setAnalyticsCollectionEnabledJSJSResult.value.successOut;
// Error.ErrorCode = SetAnalyticsCollectionEnabledJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = setAnalyticsCollectionEnabledJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = SetAnalyticsCollectionEnabledJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = setAnalyticsCollectionEnabledJSJSResult.value.errorMessageOut;
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetAnalyticsCollectionEnabled$vars", [{
name: "Enable",
attrName: "enableInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetAnalyticsCollectionEnabled$setAnalyticsCollectionEnabledJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetAnalyticsCollectionEnabled$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.setAnalyticsCollectionEnabled$Action = function (enableIn) {
enableIn = (enableIn === undefined) ? false : enableIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.setAnalyticsCollectionEnabled$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(enableIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$SetAnalyticsCollectionEnabled.SetAnalyticsCollectionEnabledJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.setAnalyticsCollectionEnabled($parameters.Enable, success, error);

function success() {
    $parameters.Success = true;
    $parameters.ErrorMessage = ""; 
    $parameters.ErrorCode = 0;     
    $resolve();
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorMessage = err;
    $parameters.ErrorCode = 2;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$SetBadgeNumber", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$SetBadgeNumber.SetBadgeNumberJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_SetBadgeNumber_SetBadgeNumberJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.setBadgeNumber$Action = function (badgeNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.SetBadgeNumber$vars"))());
vars.value.badgeNumberInLocal = badgeNumberIn;
var functionExistsVar = new OS.DataTypes.VariableHolder();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var setBadgeNumberJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.SetBadgeNumber$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.getToken", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_SetBadgeNumber_SetBadgeNumberJSJS, "SetBadgeNumberJS", "SetBadgeNumber", {
BadgeNumber: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.badgeNumberInLocal, OS.Types.Integer, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.SetBadgeNumber$setBadgeNumberJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
setBadgeNumberJSJSResult.value = results;
}).then(function () {
// Success = SetBadgeNumberJS.Success
outVars.value.successOut = setBadgeNumberJSJSResult.value.successOut;
// Error.ErrorCode = SetBadgeNumberJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = setBadgeNumberJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = SetBadgeNumberJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = setBadgeNumberJSJSResult.value.errorMessageOut;
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.SetBadgeNumber$vars", [{
name: "BadgeNumber",
attrName: "badgeNumberInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.SetBadgeNumber$setBadgeNumberJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.SetBadgeNumber$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.setBadgeNumber$Action = function (badgeNumberIn) {
badgeNumberIn = (badgeNumberIn === undefined) ? 0 : badgeNumberIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.setBadgeNumber$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(badgeNumberIn, OS.Types.Integer)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$SetBadgeNumber.SetBadgeNumberJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.setBadgeNumber($parameters.BadgeNumber, success, error);

function success() {
    $parameters.Success = true;
    $parameters.ErrorMessage = "";
    $parameters.ErrorCode = 0;
    $resolve();
}

function error(error) {
    $parameters.Success = false;
    $parameters.ErrorCode = 2;
    $parameters.ErrorMessage = error;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$SetCrashlyticsUserId", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$SetCrashlyticsUserId.SetCrashlyticsUserIdJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_SetCrashlyticsUserId_SetCrashlyticsUserIdJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.setCrashlyticsUserId$Action = function (userIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Crashlytics.SetCrashlyticsUserId$vars"))());
vars.value.userIdInLocal = userIdIn;
var functionExistsVar = new OS.DataTypes.VariableHolder();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var setCrashlyticsUserIdJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Crashlytics.SetCrashlyticsUserId$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.setCrashlyticsUserId", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_SetCrashlyticsUserId_SetCrashlyticsUserIdJSJS, "SetCrashlyticsUserIdJS", "SetCrashlyticsUserId", {
UserId: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.userIdInLocal, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Crashlytics.SetCrashlyticsUserId$setCrashlyticsUserIdJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
setCrashlyticsUserIdJSJSResult.value = results;
}).then(function () {
// Success = SetCrashlyticsUserIdJS.Success
outVars.value.successOut = setCrashlyticsUserIdJSJSResult.value.successOut;
// Error.ErrorCode = SetCrashlyticsUserIdJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = setCrashlyticsUserIdJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = SetCrashlyticsUserIdJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = setCrashlyticsUserIdJSJSResult.value.errorMessageOut;
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Crashlytics.SetCrashlyticsUserId$vars", [{
name: "UserId",
attrName: "userIdInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Crashlytics.SetCrashlyticsUserId$setCrashlyticsUserIdJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Crashlytics.SetCrashlyticsUserId$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.setCrashlyticsUserId$Action = function (userIdIn) {
userIdIn = (userIdIn === undefined) ? "" : userIdIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.setCrashlyticsUserId$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userIdIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$SetCrashlyticsUserId.SetCrashlyticsUserIdJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.setCrashlyticsUserId($parameters.UserId, success, error);

function success() {
    $parameters.Success = true;
    $parameters.ErrorMessage = "";
    $parameters.ErrorCode = 0;
    $resolve();
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorMessage = err;
    $parameters.ErrorCode = 2;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$SetPerformanceCollectionEnabled", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$SetPerformanceCollectionEnabled.SetPerformanceCollectionEnabledJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_SetPerformanceCollectionEnabled_SetPerformanceCollectionEnabledJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.setPerformanceCollectionEnabled$Action = function (enabledIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.SetPerformanceCollectionEnabled$vars"))());
vars.value.enabledInLocal = enabledIn;
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var functionExistsVar = new OS.DataTypes.VariableHolder();
var setPerformanceCollectionEnabledJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.SetPerformanceCollectionEnabled$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.setPerformanceCollectionEnabled", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_SetPerformanceCollectionEnabled_SetPerformanceCollectionEnabledJSJS, "SetPerformanceCollectionEnabledJS", "SetPerformanceCollectionEnabled", {
SetEnabled: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.enabledInLocal, OS.Types.Boolean, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.SetPerformanceCollectionEnabled$setPerformanceCollectionEnabledJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
setPerformanceCollectionEnabledJSJSResult.value = results;
}).then(function () {
// Success = SetPerformanceCollectionEnabledJS.Success
outVars.value.successOut = setPerformanceCollectionEnabledJSJSResult.value.successOut;
// Error.ErrorCode = SetPerformanceCollectionEnabledJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = setPerformanceCollectionEnabledJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = SetPerformanceCollectionEnabledJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = setPerformanceCollectionEnabledJSJSResult.value.errorMessageOut;
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.SetPerformanceCollectionEnabled$vars", [{
name: "Enabled",
attrName: "enabledInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.SetPerformanceCollectionEnabled$setPerformanceCollectionEnabledJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.SetPerformanceCollectionEnabled$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.setPerformanceCollectionEnabled$Action = function (enabledIn) {
enabledIn = (enabledIn === undefined) ? false : enabledIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.setPerformanceCollectionEnabled$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(enabledIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$SetPerformanceCollectionEnabled.SetPerformanceCollectionEnabledJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.setPerformanceCollectionEnabled($parameters.SetEnabled, success, error);

function success() {
    $parameters.Success = true;
    $parameters.ErrorMessage = ""; 
    $parameters.ErrorCode = 0;
    $resolve();
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorMessage = err;
    $parameters.ErrorCode = 2;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$SetScreenName", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$SetScreenName.SetScreenNameJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_SetScreenName_SetScreenNameJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.setScreenName$Action = function (screenNameIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetScreenName$vars"))());
vars.value.screenNameInLocal = screenNameIn;
var functionExistsVar = new OS.DataTypes.VariableHolder();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var setScreenNameJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetScreenName$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.setScreenName", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_SetScreenName_SetScreenNameJSJS, "SetScreenNameJS", "SetScreenName", {
ScreenName: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.screenNameInLocal, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetScreenName$setScreenNameJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
setScreenNameJSJSResult.value = results;
}).then(function () {
// Success = SetScreenNameJS.Success
outVars.value.successOut = setScreenNameJSJSResult.value.successOut;
// Error.ErrorCode = SetScreenNameJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = setScreenNameJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = SetScreenNameJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = setScreenNameJSJSResult.value.errorMessageOut;
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetScreenName$vars", [{
name: "ScreenName",
attrName: "screenNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetScreenName$setScreenNameJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetScreenName$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.setScreenName$Action = function (screenNameIn) {
screenNameIn = (screenNameIn === undefined) ? "" : screenNameIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.setScreenName$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(screenNameIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$SetScreenName.SetScreenNameJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
var screenName = $parameters.ScreenName
if ($parameters.ScreenName.trim() === "") {
    var pathName = window.location.pathname;
    screenName = pathName.substr(pathName.lastIndexOf('/') + 1);
}

Firebase.setScreenName(screenName, success, error);

function success() {
    $parameters.Success = true;
    $parameters.ErrorMessage = "";
    $parameters.ErrorCode = 0;
    $resolve();
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorMessage = err;
    $parameters.ErrorCode = 2; 
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$SetUserId", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$SetUserId.SetUserIdJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_SetUserId_SetUserIdJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.setUserId$Action = function (userIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetUserId$vars"))());
vars.value.userIdInLocal = userIdIn;
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var functionExistsVar = new OS.DataTypes.VariableHolder();
var setUserIdJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetUserId$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.setUserId", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_SetUserId_SetUserIdJSJS, "SetUserIdJS", "SetUserId", {
UserId: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.userIdInLocal, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetUserId$setUserIdJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
setUserIdJSJSResult.value = results;
}).then(function () {
// Success = SetUserIdJS.Success
outVars.value.successOut = setUserIdJSJSResult.value.successOut;
// Error.ErrorCode = SetUserIdJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = setUserIdJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetUserId$vars", [{
name: "UserId",
attrName: "userIdInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetUserId$setUserIdJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetUserId$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.setUserId$Action = function (userIdIn) {
userIdIn = (userIdIn === undefined) ? "" : userIdIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.setUserId$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userIdIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$SetUserId.SetUserIdJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.setUserId($parameters.UserId, success, error);

function success() {
    $parameters.Success = true;
    $parameters.ErrorMessage = ""; 
    $parameters.ErrorCode = 0;
    $resolve();
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorMessage = err;
    $parameters.ErrorCode = 2;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$SetUserProperty", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$SetUserProperty.SetUserPropertyJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_SetUserProperty_SetUserPropertyJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.setUserProperty$Action = function (propertyNameIn, propertyValueIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetUserProperty$vars"))());
vars.value.propertyNameInLocal = propertyNameIn;
vars.value.propertyValueInLocal = propertyValueIn;
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var functionExistsVar = new OS.DataTypes.VariableHolder();
var setUserPropertyJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetUserProperty$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.setUserProperty", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_SetUserProperty_SetUserPropertyJSJS, "SetUserPropertyJS", "SetUserProperty", {
PropertyName: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.propertyNameInLocal, OS.Types.Text, true),
PropertyValue: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.propertyValueInLocal, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetUserProperty$setUserPropertyJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
setUserPropertyJSJSResult.value = results;
}).then(function () {
// Success = SetUserPropertyJS.Success
outVars.value.successOut = setUserPropertyJSJSResult.value.successOut;
// Error.ErrorCode = SetUserPropertyJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = setUserPropertyJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = SetUserPropertyJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = setUserPropertyJSJSResult.value.errorMessageOut;
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetUserProperty$vars", [{
name: "PropertyName",
attrName: "propertyNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "PropertyValue",
attrName: "propertyValueInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetUserProperty$setUserPropertyJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Analytics.SetUserProperty$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.setUserProperty$Action = function (propertyNameIn, propertyValueIn) {
propertyNameIn = (propertyNameIn === undefined) ? "" : propertyNameIn;
propertyValueIn = (propertyValueIn === undefined) ? "" : propertyValueIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.setUserProperty$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(propertyNameIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(propertyValueIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$SetUserProperty.SetUserPropertyJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.setUserProperty($parameters.PropertyName, $parameters.PropertyValue, success, error);

function success() {
    $parameters.Success = true;
    $parameters.ErrorMessage = ""; 
    $parameters.ErrorCode = 0;
    $resolve();
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorMessage = err;
    $parameters.ErrorCode = 2;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$StartTrace", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$StartTrace.StartTraceJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_StartTrace_StartTraceJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.startTrace$Action = function (traceNameIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.StartTrace$vars"))());
vars.value.traceNameInLocal = traceNameIn;
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var functionExistsVar = new OS.DataTypes.VariableHolder();
var startTraceJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.StartTrace$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.startTrace", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_StartTrace_StartTraceJSJS, "StartTraceJS", "StartTrace", {
TraceName: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.traceNameInLocal, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.StartTrace$startTraceJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
startTraceJSJSResult.value = results;
}).then(function () {
// Success = StartTraceJS.Success
outVars.value.successOut = startTraceJSJSResult.value.successOut;
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.StartTrace$vars", [{
name: "TraceName",
attrName: "traceNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.StartTrace$startTraceJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.StartTrace$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.startTrace$Action = function (traceNameIn) {
traceNameIn = (traceNameIn === undefined) ? "" : traceNameIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.startTrace$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(traceNameIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$StartTrace.StartTraceJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.startTrace($parameters.TraceName, success, error);

function success() {
    $parameters.Success = true;
    $parameters.ErrorCode = 0;
    $parameters.ErrorMessage = "";
    $resolve();
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorMessage = err;
    $parameters.ErrorCode = 2;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$StopTrace", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$StopTrace.StopTraceJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_StopTrace_StopTraceJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.stopTrace$Action = function (traceNameIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.StopTrace$vars"))());
vars.value.traceNameInLocal = traceNameIn;
var functionExistsVar = new OS.DataTypes.VariableHolder();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var stopTraceJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.StopTrace$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.stopTrace", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_StopTrace_StopTraceJSJS, "StopTraceJS", "StopTrace", {
TraceName: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.traceNameInLocal, OS.Types.Text, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.StopTrace$stopTraceJSJSResult"))();
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
return jsNodeResult;
}, {}, {}).then(function (results) {
stopTraceJSJSResult.value = results;
}).then(function () {
// Success = StopTraceJS.Success
outVars.value.successOut = stopTraceJSJSResult.value.successOut;
// Error.ErrorCode = FunctionExists.Error.ErrorCode
outVars.value.errorOut.errorCodeAttr = functionExistsVar.value.errorOut.errorCodeAttr;
// Error.ErrorMessage = StopTraceJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = stopTraceJSJSResult.value.errorMessageOut;
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.StopTrace$vars", [{
name: "TraceName",
attrName: "traceNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.StopTrace$stopTraceJSJSResult", [{
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.Performance.StopTrace$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.stopTrace$Action = function (traceNameIn) {
traceNameIn = (traceNameIn === undefined) ? "" : traceNameIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.stopTrace$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(traceNameIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$StopTrace.StopTraceJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.stopTrace($parameters.TraceName, success, error);

function success() {
    $parameters.Success = true;
    $parameters.ErrorMessage = "";
    $parameters.ErrorCode = 0;
    $resolve();
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorMessage = err;
    $parameters.ErrorCode = 2;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$SubscribeTopic", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$SubscribeTopic.SubscribeJSJS", "NewFirebaseMobilePlugin_WTF.controller$IsIos", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_SubscribeTopic_SubscribeJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.subscribeTopic$Action = function (topicIn, topicSuffix_AndroidIn, topicSuffix_iOSIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.SubscribeTopic$vars"))());
vars.value.topicInLocal = topicIn;
vars.value.topicSuffix_AndroidInLocal = topicSuffix_AndroidIn;
vars.value.topicSuffix_iOSInLocal = topicSuffix_iOSIn;
var isIosVar = new OS.DataTypes.VariableHolder();
var functionExistsVar = new OS.DataTypes.VariableHolder();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var subscribeJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.SubscribeTopic$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.subscribe", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
// Execute Action: IsIos
isIosVar.value = NewFirebaseMobilePlugin_WTFController.default.isIos$Action(callContext);

// Topic = If
vars.value.topicInLocal = ((isIosVar.value.isIOSOut) ? ((vars.value.topicInLocal + vars.value.topicSuffix_iOSInLocal)) : ((vars.value.topicInLocal + vars.value.topicSuffix_AndroidInLocal)));
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_SubscribeTopic_SubscribeJSJS, "SubscribeJS", "SubscribeTopic", {
Topic: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.topicInLocal, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.SubscribeTopic$subscribeJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
subscribeJSJSResult.value = results;
}).then(function () {
if((subscribeJSJSResult.value.successOut)) {
// Success = SubscribeJS.Success
outVars.value.successOut = subscribeJSJSResult.value.successOut;
// Error.ErrorMessage = SubscribeJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = subscribeJSJSResult.value.errorMessageOut;
// Error.ErrorCode = SubscribeJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = subscribeJSJSResult.value.errorCodeOut;
} else {
// Success = SubscribeJS.Success
outVars.value.successOut = subscribeJSJSResult.value.successOut;
// Error.ErrorCode = SubscribeJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = subscribeJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = SubscribeJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = subscribeJSJSResult.value.errorMessageOut;
}

});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.SubscribeTopic$vars", [{
name: "Topic",
attrName: "topicInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "TopicSuffix_Android",
attrName: "topicSuffix_AndroidInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "TopicSuffix_iOS",
attrName: "topicSuffix_iOSInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.SubscribeTopic$subscribeJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.SubscribeTopic$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.subscribeTopic$Action = function (topicIn, topicSuffix_AndroidIn, topicSuffix_iOSIn) {
topicIn = (topicIn === undefined) ? "" : topicIn;
topicSuffix_AndroidIn = (topicSuffix_AndroidIn === undefined) ? "" : topicSuffix_AndroidIn;
topicSuffix_iOSIn = (topicSuffix_iOSIn === undefined) ? "" : topicSuffix_iOSIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.subscribeTopic$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(topicIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(topicSuffix_AndroidIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(topicSuffix_iOSIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$SubscribeTopic.SubscribeJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.subscribe($parameters.Topic, success, error);

function success() {
    $parameters.Success = true;
    $parameters.ErrorCode = 0;
    $parameters.ErrorMessage = "";
    $resolve();
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorCode = 2;
    $parameters.ErrorMessage = err;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$UnsubscribeTopic", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller$UnsubscribeTopic.UnsubscribeJSJS", "CommonPlugin.model$ErrorRec", "NewFirebaseMobilePlugin_WTF.referencesHealth", "NewFirebaseMobilePlugin_WTF.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$FunctionExists", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "NewFirebaseMobilePlugin_WTF.controller$IsIos"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController, CommonPluginModel, NewFirebaseMobilePlugin_WTF_controller_UnsubscribeTopic_UnsubscribeJSJS) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.unsubscribeTopic$Action = function (topicIn, topicSuffix_AndroidIn, topicSuffix_iOSIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.UnsubscribeTopic$vars"))());
vars.value.topicInLocal = topicIn;
vars.value.topicSuffix_AndroidInLocal = topicSuffix_AndroidIn;
vars.value.topicSuffix_iOSInLocal = topicSuffix_iOSIn;
var functionExistsVar = new OS.DataTypes.VariableHolder();
var checkFirebase_PluginVar = new OS.DataTypes.VariableHolder();
var isIosVar = new OS.DataTypes.VariableHolder();
var unsubscribeJSJSResult = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.UnsubscribeTopic$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebase_Plugin
checkFirebase_PluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebase_PluginVar.value.isAvailableOut)) {
// Execute Action: FunctionExists
functionExistsVar.value = NewFirebaseMobilePlugin_WTFController.default.functionExists$Action("Firebase.subscribe", callContext);

// Function Exists?
return OS.Flow.executeSequence(function () {
if((functionExistsVar.value.successOut)) {
// Execute Action: IsIos
isIosVar.value = NewFirebaseMobilePlugin_WTFController.default.isIos$Action(callContext);

// Topic = If
vars.value.topicInLocal = ((isIosVar.value.isIOSOut) ? ((vars.value.topicInLocal + vars.value.topicSuffix_iOSInLocal)) : ((vars.value.topicInLocal + vars.value.topicSuffix_AndroidInLocal)));
return controller.safeExecuteAsyncJSNode(NewFirebaseMobilePlugin_WTF_controller_UnsubscribeTopic_UnsubscribeJSJS, "UnsubscribeJS", "UnsubscribeTopic", {
Topic: OS.DataTypes.JSConversions.basicTypeToJS(vars.value.topicInLocal, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(false, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS("", OS.Types.Text, true)
}, function ($parameters) {
var jsNodeResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.UnsubscribeTopic$unsubscribeJSJSResult"))();
jsNodeResult.successOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.Success, OS.Types.Boolean);
jsNodeResult.errorMessageOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorMessage, OS.Types.Text);
jsNodeResult.errorCodeOut = OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType($parameters.ErrorCode, OS.Types.Text);
return jsNodeResult;
}, {}, {}).then(function (results) {
unsubscribeJSJSResult.value = results;
}).then(function () {
// Success = UnsubscribeJS.Success
outVars.value.successOut = unsubscribeJSJSResult.value.successOut;
// Error.ErrorCode = UnsubscribeJS.ErrorCode
outVars.value.errorOut.errorCodeAttr = unsubscribeJSJSResult.value.errorCodeOut;
// Error.ErrorMessage = UnsubscribeJS.ErrorMessage
outVars.value.errorOut.errorMessageAttr = unsubscribeJSJSResult.value.errorMessageOut;
});
} else {
// Error.ErrorMessage = FunctionExists.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = functionExistsVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = CheckFirebase_Plugin.IsAvailable
outVars.value.successOut = checkFirebase_PluginVar.value.isAvailableOut;
// Error.ErrorMessage = CheckFirebase_Plugin.Error.ErrorMessage
outVars.value.errorOut.errorMessageAttr = checkFirebase_PluginVar.value.errorOut.errorMessageAttr;
// Error.ErrorCode = 2
outVars.value.errorOut.errorCodeAttr = "2";
}

});
}).then(function () {
return outVars.value;
});
};
var controller = NewFirebaseMobilePlugin_WTFController.default;
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.UnsubscribeTopic$vars", [{
name: "Topic",
attrName: "topicInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "TopicSuffix_Android",
attrName: "topicSuffix_AndroidInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "TopicSuffix_iOS",
attrName: "topicSuffix_iOSInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.UnsubscribeTopic$unsubscribeJSJSResult", [{
name: "Success",
attrName: "successOut",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF.CloudMessaging.UnsubscribeTopic$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new CommonPluginModel.ErrorRec();
},
complexType: CommonPluginModel.ErrorRec
}]);
NewFirebaseMobilePlugin_WTFController.default.clientActionProxies.unsubscribeTopic$Action = function (topicIn, topicSuffix_AndroidIn, topicSuffix_iOSIn) {
topicIn = (topicIn === undefined) ? "" : topicIn;
topicSuffix_AndroidIn = (topicSuffix_AndroidIn === undefined) ? "" : topicSuffix_AndroidIn;
topicSuffix_iOSIn = (topicSuffix_iOSIn === undefined) ? "" : topicSuffix_iOSIn;
return controller.executeActionInsideJSNode(NewFirebaseMobilePlugin_WTFController.default.unsubscribeTopic$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(topicIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(topicSuffix_AndroidIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(topicSuffix_iOSIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Error: actionResults.errorOut
};
});
};
});
define("NewFirebaseMobilePlugin_WTF.controller$UnsubscribeTopic.UnsubscribeJSJS", [], function () {
return function ($parameters, $actions, $roles, $public) {
return new Promise(function ($resolve, $reject) {
Firebase.unsubscribe($parameters.Topic, success, error);

function success() {
    $parameters.Success = true;
    $parameters.ErrorCode = 0;
    $parameters.ErrorMessage = "";
    $resolve();
}

function error(err) {
    $parameters.Success = false;
    $parameters.ErrorCode = 2;
    $parameters.ErrorMessage = err;
    $resolve();
}
});
};
});

define("NewFirebaseMobilePlugin_WTF.controller$ServerAction.GetSiteProperty_EnableLogs", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model", "NewFirebaseMobilePlugin_WTF.controller"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel, NewFirebaseMobilePlugin_WTFController) {
var OS = OutSystems.Internal;
NewFirebaseMobilePlugin_WTFController.default.getSiteProperty_EnableLogs$ServerAction = function (callContext) {
var controller = this.controller;
return controller.callServerAction("GetSiteProperty_EnableLogs", "screenservices/NewFirebaseMobilePlugin_WTF/ActionGetSiteProperty_EnableLogs", "_7_6MTOpxy783yO_mGsTTQ", {}, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("NewFirebaseMobilePlugin_WTF$ActionGetSiteProperty_EnableLogs"))();
executeServerActionResult.valueOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Value, OS.Types.Boolean);
return executeServerActionResult;
});
};
NewFirebaseMobilePlugin_WTFController.default.constructor.registerVariableGroupType("NewFirebaseMobilePlugin_WTF$ActionGetSiteProperty_EnableLogs", [{
name: "Value",
attrName: "valueOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("NewFirebaseMobilePlugin_WTF.controller", ["exports", "OutSystems", "NewFirebaseMobilePlugin_WTF.model"], function (exports, OutSystems, NewFirebaseMobilePlugin_WTFModel) {
var OS = OutSystems.Internal;
var NewFirebaseMobilePlugin_WTFController = exports;
var Controller = (function (_super) {
__extends(Controller, _super);
function Controller() {
_super.apply(this, arguments);
}
Controller.prototype.clientActionProxies = {};
Controller.prototype.roles = {};
Controller.prototype.defaultTimeout = 10;
Controller.prototype.getDefaultTimeout = function () {
return NewFirebaseMobilePlugin_WTFController.default.defaultTimeout;
};
return Controller;
})(OS.Controller.BaseModuleController);
NewFirebaseMobilePlugin_WTFController.default = new Controller();
});
