define("WTF_MBP.controller$AccessTokenPassword", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "Mobile_LoginNOS.model", "Mobile_LoginNOS.model$AccessTokenCodeRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$Mobile_LoginNOS", "WTF_MBP.controller$ServerAction.AccessTokenPassword"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, Mobile_LoginNOSModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.accessTokenPassword$Action = function (usernameIn, passwordIn, currentOSIn, deviceUIDIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.AccessTokenPassword$vars"))());
vars.value.usernameInLocal = usernameIn;
vars.value.passwordInLocal = passwordIn;
vars.value.currentOSInLocal = currentOSIn;
vars.value.deviceUIDInLocal = deviceUIDIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var accessTokenPasswordVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.AccessTokenPassword$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: AccessTokenPassword
return controller.accessTokenPassword$ServerAction(vars.value.usernameInLocal, vars.value.passwordInLocal, vars.value.currentOSInLocal, vars.value.deviceUIDInLocal, callContext).then(function (value) {
accessTokenPasswordVar.value = value;
}).then(function () {
// Success = AccessTokenPassword.Success
outVars.value.successOut = accessTokenPasswordVar.value.successOut;
// Message = AccessTokenPassword.Message
outVars.value.messageOut = accessTokenPasswordVar.value.messageOut;
// AccessTokenInfo = AccessTokenPassword.AccessTokenInfo
outVars.value.accessTokenInfoOut = accessTokenPasswordVar.value.accessTokenInfoOut;
});
}).catch(function (ex) {
OS.Logger.trace("UserWTF.AccessTokenPassword", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.AccessTokenPassword$vars", [{
name: "Username",
attrName: "usernameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Password",
attrName: "passwordInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "CurrentOS",
attrName: "currentOSInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "DeviceUID",
attrName: "deviceUIDInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.AccessTokenPassword$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "AccessTokenInfo",
attrName: "accessTokenInfoOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new Mobile_LoginNOSModel.AccessTokenCodeRec();
},
complexType: Mobile_LoginNOSModel.AccessTokenCodeRec
}]);
WTF_MBPController.default.clientActionProxies.accessTokenPassword$Action = function (usernameIn, passwordIn, currentOSIn, deviceUIDIn) {
usernameIn = (usernameIn === undefined) ? "" : usernameIn;
passwordIn = (passwordIn === undefined) ? "" : passwordIn;
currentOSIn = (currentOSIn === undefined) ? "" : currentOSIn;
deviceUIDIn = (deviceUIDIn === undefined) ? "" : deviceUIDIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.accessTokenPassword$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(usernameIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(passwordIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(currentOSIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(deviceUIDIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
AccessTokenInfo: actionResults.accessTokenInfoOut
};
});
};
});

define("WTF_MBP.controller$Associations_CheckCache", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$Cache_ValidationByService", "WTF_MBP.controller$Associations_ClearCache", "WTF_MBP.model$STR_CACHE_SERVICERec", "WTF_MBP.controller$GetCacheServiceID", "WTF_MBP.model$Local_ASSOCIATIONRecordList", "WTF_MBP.model$Local_ASSOCIATIONRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.associations_CheckCache$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var cache_ValidationByServiceVar = new OS.DataTypes.VariableHolder();
var associations_ClearCacheVar = new OS.DataTypes.VariableHolder();
var getLocalASSOCIATIONSVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ASSOCIATIONRecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Cache_Control.Associations_CheckCache$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalASSOCIATIONS
var getLocalASSOCIATIONSAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ASSOCIATIONRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15";
} else {
selectSql += "\"ENLocal_ASSOCIATION\".\"Id\" o0, \"ENLocal_ASSOCIATION\".\"DisplayValue\" o1, \"ENLocal_ASSOCIATION\".\"FriendlyName\" o2, \"ENLocal_ASSOCIATION\".\"RoleName\" o3, \"ENLocal_ASSOCIATION\".\"Key\" o4, \"ENLocal_ASSOCIATION\".\"Value\" o5, \"ENLocal_ASSOCIATION\".\"Master\" o6, \"ENLocal_ASSOCIATION\".\"ContractDN\" o7, \"ENLocal_ASSOCIATION\".\"AccountOwner\" o8, \"ENLocal_ASSOCIATION\".\"AccountOwnerNIF\" o9, \"ENLocal_ASSOCIATION\".\"AccountOwnerEmail\" o10, \"ENLocal_ASSOCIATION\".\"AccountOwnerPhoneNr\" o11, \"ENLocal_ASSOCIATION\".\"CustCode_ClientNumber\" o12, \"ENLocal_ASSOCIATION\".\"PersonId\" o13, \"ENLocal_ASSOCIATION\".\"IsPending\" o14, \"ENLocal_ASSOCIATION\".\"UA\" o15";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ASSOCIATION\" \"ENLocal_ASSOCIATION\"";
fromAndWhereSql += " WHERE (\"ENLocal_ASSOCIATION\".\"IsPending\" = 1)";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ASSOCIATIONRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ASSOCIATIONAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalASSOCIATIONSVar.value;
});
};
return getLocalASSOCIATIONSAggr().then(function () {
// UseCache = GetLocalASSOCIATIONS.List.Empty
outVars.value.useCacheOut = getLocalASSOCIATIONSVar.value.listOut.isEmpty;
}).then(function () {
return OS.Flow.executeSequence(function () {
if((outVars.value.useCacheOut)) {
// Execute Action: Cache_ValidationByService
return WTF_MBPController.default.cache_ValidationByService$Action(WTF_MBPController.default.getCacheServiceID$Action(callContext.withoutIterationContext()).cacheServicesOut.associationsAttr, false, false, OS.DataTypes.DateTime.defaultValue, callContext).then(function (value) {
cache_ValidationByServiceVar.value = value;
}).then(function () {
// UseCache = Cache_ValidationByService.useCache
outVars.value.useCacheOut = cache_ValidationByServiceVar.value.useCacheOut;
});
} else {
// Execute Action: Associations_ClearCache
return WTF_MBPController.default.associations_ClearCache$Action(callContext).then(function (value) {
associations_ClearCacheVar.value = value;
});
}

});
});
}).catch(function (ex) {
OS.Logger.trace("Cache_Control.Associations_CheckCache", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Cache_Control.Associations_CheckCache$outVars", [{
name: "UseCache",
attrName: "useCacheOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.associations_CheckCache$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.associations_CheckCache$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
UseCache: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.useCacheOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$Associations_ClearCache", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$Cache_DisableByService", "WTF_MBP.model$STR_CACHE_SERVICERec", "WTF_MBP.controller$GetCacheServiceID"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.associations_ClearCache$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var cache_DisableByServiceAssociationsVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Cache_Control.Associations_ClearCache$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: Cache_DisableByServiceAssociations
return WTF_MBPController.default.cache_DisableByService$Action(WTF_MBPController.default.getCacheServiceID$Action(callContext.withoutIterationContext()).cacheServicesOut.associationsAttr, callContext).then(function (value) {
cache_DisableByServiceAssociationsVar.value = value;
});
}).catch(function (ex) {
OS.Logger.trace("Cache_Control.Associations_ClearCache", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// SetOutput
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Cache_Control.Associations_ClearCache$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.associations_ClearCache$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.associations_ClearCache$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$Cache_DisableByService", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_CACHE_CONTROL_SERVICESRecordList", "WTF_MBP.model$Local_CACHE_CONTROL_SERVICESRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.cache_DisableByService$Action = function (cacheServiceIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Cache_Control.Cache_DisableByService$vars"))());
vars.value.cacheServiceIdInLocal = cacheServiceIdIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getCacheServiceVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_CACHE_CONTROL_SERVICESRecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Cache_Control.Cache_DisableByService$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetCacheService
var getCacheServiceAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_CACHE_CONTROL_SERVICESRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}

var qpstCacheServiceId = vars.value.cacheServiceIdInLocal;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5";
} else {
selectSql += "\"ENLocal_CACHE_CONTROL_SERVI\".\"Id\" o0, \"ENLocal_CACHE_CONTROL_SERVI\".\"CacheServiceId\" o1, \"ENLocal_CACHE_CONTROL_SERVI\".\"CacheControlId\" o2, \"ENLocal_CACHE_CONTROL_SERVI\".\"LastUpdateAt\" o3, \"ENLocal_CACHE_CONTROL_SERVI\".\"ExpirationDate\" o4, \"ENLocal_CACHE_CONTROL_SERVI\".\"LastCacheCheck\" o5";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_CACHE_CONTROL_SERVICES\" \"ENLocal_CACHE_CONTROL_SERVI\"";
fromAndWhereSql += " WHERE (\"ENLocal_CACHE_CONTROL_SERVI\".\"CacheServiceId\" = :qpstCacheServiceId)";
argsList.add("qpstCacheServiceId", /*TEXT*/ 0, qpstCacheServiceId);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_CACHE_CONTROL_SERVICESRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_CACHE_CONTROL_SERVICESAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getCacheServiceVar.value;
});
};
return getCacheServiceAggr().then(function () {
// Foreach GetCacheService.List
callContext.iterationContext.registerIterationStart(getCacheServiceVar.value.listOut);
}).then(function () {
return OS.Flow.tryFinally(function () {
var getCacheServiceIterator = callContext.iterationContext.getIterator(getCacheServiceVar.value.listOut);
var getCacheServiceIndex = 0;
return OS.Flow.whileAsync(function () {
return ((getCacheServiceIndex < getCacheServiceVar.value.listOut.length));
}, function () {
getCacheServiceIterator.currentRowNumber = getCacheServiceIndex;
// Execute Action: DeleteLocal_CACHE_CONTROL_SERVICES
return WTF_MBPModel.entities.Local_CACHE_CONTROL_SERVICES.delete(getCacheServiceVar.value.listOut.getItem(getCacheServiceIndex.valueOf()).local_CACHE_CONTROL_SERVICESAttr.idAttr, callContext).then(function () {
getCacheServiceIndex++;
});
});
}, function () {
callContext.iterationContext.registerIterationEnd(getCacheServiceVar.value.listOut);
});
});
}).catch(function (ex) {
OS.Logger.trace("Cache_Control.Cache_DisableByService", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// SetOutput
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Cache_Control.Cache_DisableByService$vars", [{
name: "CacheServiceId",
attrName: "cacheServiceIdInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Cache_Control.Cache_DisableByService$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.cache_DisableByService$Action = function (cacheServiceIdIn) {
cacheServiceIdIn = (cacheServiceIdIn === undefined) ? "" : cacheServiceIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.cache_DisableByService$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(cacheServiceIdIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$Cache_ValidationByService", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "Essentials_MOB.controller", "WTF_MBP.controller$ServerAction.Cache_GetCacheControlId", "WTF_MBP.controller$GetCacheValidationInterval", "WTF_MBP.controller$Cache_DisableByService", "Essentials_MOB.controller$CheckNetworkStatus", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$Essentials_MOB", "WTF_MBP.model$Local_CACHE_CONTROL_SERVICESRecord", "WTF_MBP.model$Local_CACHE_CONTROL_SERVICESRec", "WTF_MBP.model$Local_CACHE_CONTROL_SERVICESRecordList", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORecordList", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, Essentials_MOBController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.cache_ValidationByService$Action = function (cacheServiceIdIn, toRefreshIn, validateItemCacheExpirationDateIn, itemCacheExpirationDateIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Cache_Control.Cache_ValidationByService$vars"))());
vars.value.cacheServiceIdInLocal = cacheServiceIdIn;
vars.value.toRefreshInLocal = toRefreshIn;
vars.value.validateItemCacheExpirationDateInLocal = validateItemCacheExpirationDateIn;
vars.value.itemCacheExpirationDateInLocal = itemCacheExpirationDateIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var cache_GetCacheControlIdVar = new OS.DataTypes.VariableHolder();
var getCacheValidationIntervalVar = new OS.DataTypes.VariableHolder();
var cache_DisableByServiceVar = new OS.DataTypes.VariableHolder();
var checkNetworkStatusVar = new OS.DataTypes.VariableHolder();
var createOrUpdateLocal_CACHE_CONTROL_SERVICESVar = new OS.DataTypes.VariableHolder();
var getCacheControlServiceVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_CACHE_CONTROL_SERVICESRecordList))());
var getAccessTokenInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Cache_Control.Cache_ValidationByService$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetCacheValidationInterval
return WTF_MBPController.default.getCacheValidationInterval$Action(callContext).then(function (value) {
getCacheValidationIntervalVar.value = value;
}).then(function () {
// CacheValidation
// CacheValidation = GetCacheValidationInterval.Value
vars.value.cacheValidationVar = getCacheValidationIntervalVar.value.valueOut;
// Aggregate: GetAccessTokenInfo
var getAccessTokenInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_ACCESS_TOKEN_INFO\".\"Id\" o0, \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" o1, \"ENLocal_ACCESS_TOKEN_INFO\".\"Access_token\" o2, \"ENLocal_ACCESS_TOKEN_INFO\".\"IsUserRegistered\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ACCESS_TOKEN_INFO\" \"ENLocal_ACCESS_TOKEN_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ACCESS_TOKEN_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getAccessTokenInfoVar.value;
});
};
return getAccessTokenInfoAggr();
}).then(function () {
// EmptyRefreshToken?
return OS.Flow.executeSequence(function () {
if(((getAccessTokenInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr === ""))) {
// Execute Action: LogMessage_NoRefreshToken
OS.SystemActions.logMessage(((((((((((((((((((((((((((((("Refresh token is empty" + "\r\n") + "INPUT") + "\r\n") + "CacheServiceId[") + vars.value.cacheServiceIdInLocal) + "]") + "\r\n") + "ToRefresh[") + (vars.value.toRefreshInLocal ? "True" : "False")) + "]") + "\r\n") + "ValidateItemCacheExpirationDate[") + (vars.value.validateItemCacheExpirationDateInLocal ? "True" : "False")) + "]") + "\r\n") + "ItemCacheExpirationDate[") + OS.BuiltinFunctions.dateTimeToText(vars.value.itemCacheExpirationDateInLocal)) + "]") + "\r\n") + "OUTPUT") + "\r\n") + "useCache[") + (outVars.value.useCacheOut ? "True" : "False")) + "]") + "\r\n") + "CacheExpirationDate[") + OS.BuiltinFunctions.dateTimeToText(outVars.value.cacheExpirationDateOut)) + "]") + "\r\n"), "CacheControl", callContext);
} else {
// Aggregate: GetCacheControlService
var getCacheControlServiceAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_CACHE_CONTROL_SERVICESRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}

var qpstCacheServiceId = vars.value.cacheServiceIdInLocal;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5";
} else {
selectSql += "\"ENLocal_CACHE_CONTROL_SERVI\".\"Id\" o0, \"ENLocal_CACHE_CONTROL_SERVI\".\"CacheServiceId\" o1, \"ENLocal_CACHE_CONTROL_SERVI\".\"CacheControlId\" o2, \"ENLocal_CACHE_CONTROL_SERVI\".\"LastUpdateAt\" o3, \"ENLocal_CACHE_CONTROL_SERVI\".\"ExpirationDate\" o4, \"ENLocal_CACHE_CONTROL_SERVI\".\"LastCacheCheck\" o5";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_CACHE_CONTROL_SERVICES\" \"ENLocal_CACHE_CONTROL_SERVI\"";
fromAndWhereSql += " WHERE (\"ENLocal_CACHE_CONTROL_SERVI\".\"CacheServiceId\" = :qpstCacheServiceId)";
argsList.add("qpstCacheServiceId", /*TEXT*/ 0, qpstCacheServiceId);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_CACHE_CONTROL_SERVICESRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_CACHE_CONTROL_SERVICESAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getCacheControlServiceVar.value;
});
};
return getCacheControlServiceAggr().then(function () {
// CacheExpirationDate = GetCacheControlService.List.Current.Local_CACHE_CONTROL_SERVICES.ExpirationDate
outVars.value.cacheExpirationDateOut = getCacheControlServiceVar.value.listOut.getCurrent(callContext.iterationContext).local_CACHE_CONTROL_SERVICESAttr.expirationDateAttr;
// Execute Action: CheckNetworkStatus
return Essentials_MOBController.default.checkNetworkStatus$Action(callContext).then(function (value) {
checkNetworkStatusVar.value = value;
});
}).then(function () {
// IsOnline = CheckNetworkStatus.isOnline
outVars.value.isOnlineOut = checkNetworkStatusVar.value.isOnlineOut;
}).then(function () {
// Invalid Cache?
return OS.Flow.executeSequence(function () {
if(((checkNetworkStatusVar.value.isOnlineOut && (((getCacheControlServiceVar.value.listOut.getCurrent(callContext.iterationContext).local_CACHE_CONTROL_SERVICESAttr.expirationDateAttr.equals(OS.BuiltinFunctions.nullDate()) || OS.BuiltinFunctions.currDateTime().gte(getCacheControlServiceVar.value.listOut.getCurrent(callContext.iterationContext).local_CACHE_CONTROL_SERVICESAttr.expirationDateAttr)) || vars.value.toRefreshInLocal) || (((OS.BuiltinFunctions.diffMinutes(getCacheControlServiceVar.value.listOut.getCurrent(callContext.iterationContext).local_CACHE_CONTROL_SERVICESAttr.lastCacheCheckAttr, OS.BuiltinFunctions.currDateTime()) > vars.value.cacheValidationVar) && (vars.value.cacheValidationVar > 0)) || (vars.value.validateItemCacheExpirationDateInLocal && OS.BuiltinFunctions.currDateTime().gte(vars.value.itemCacheExpirationDateInLocal))))))) {
// useCache = False
outVars.value.useCacheOut = false;
// Execute Action: Cache_GetCacheControlId
return controller.cache_GetCacheControlId$ServerAction(getAccessTokenInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr, vars.value.cacheServiceIdInLocal, vars.value.toRefreshInLocal, callContext).then(function (value) {
cache_GetCacheControlIdVar.value = value;
}).then(function () {
// Execute Action: LogMessage
OS.SystemActions.logMessage(((((((((("CacheControlId:" + OS.BuiltinFunctions.longIntegerToText(cache_GetCacheControlIdVar.value.cacheControlIdOut)) + "Success:") + (cache_GetCacheControlIdVar.value.successOut ? "True" : "False")) + "Message:") + cache_GetCacheControlIdVar.value.messageOut) + "MinutesToInvalidateCache:") + (cache_GetCacheControlIdVar.value.minutesToInvalidateCacheOut).toString()) + "isAtive:") + (cache_GetCacheControlIdVar.value.isAtiveOut ? "True" : "False")), "CacheControl", callContext);
}).then(function () {
// Invalid Cache Id?
return OS.Flow.executeSequence(function () {
if((cache_GetCacheControlIdVar.value.cacheControlIdOut.equals(OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.nullIdentifier())))) {
// Execute Action: Cache_DisableByService
return WTF_MBPController.default.cache_DisableByService$Action(vars.value.cacheServiceIdInLocal, callContext).then(function (value) {
cache_DisableByServiceVar.value = value;
}).then(function () {
// Execute Action: LogMessage_CacheNotConfigured
OS.SystemActions.logMessage(((((((((((((((((((((((((((((("Cache not configured" + "\r\n") + "INPUT") + "\r\n") + "CacheServiceId[") + vars.value.cacheServiceIdInLocal) + "]") + "\r\n") + "ToRefresh[") + (vars.value.toRefreshInLocal ? "True" : "False")) + "]") + "\r\n") + "ValidateItemCacheExpirationDate[") + (vars.value.validateItemCacheExpirationDateInLocal ? "True" : "False")) + "]") + "\r\n") + "ItemCacheExpirationDate[") + OS.BuiltinFunctions.dateTimeToText(vars.value.itemCacheExpirationDateInLocal)) + "]") + "\r\n") + "OUTPUT") + "\r\n") + "useCache[") + (outVars.value.useCacheOut ? "True" : "False")) + "]") + "\r\n") + "CacheExpirationDate[") + OS.BuiltinFunctions.dateTimeToText(outVars.value.cacheExpirationDateOut)) + "]") + "\r\n"), "CacheControl", callContext);
});
} else {
// CacheControl exists?
if((!(cache_GetCacheControlIdVar.value.cacheControlIdOut.equals(getCacheControlServiceVar.value.listOut.getCurrent(callContext.iterationContext).local_CACHE_CONTROL_SERVICESAttr.cacheControlIdAttr)))) {
// GetCacheControlService.List.Current.Local_CACHE_CONTROL_SERVICES.CacheServiceId = CacheServiceId
getCacheControlServiceVar.value.listOut.getCurrent(callContext.iterationContext).local_CACHE_CONTROL_SERVICESAttr.cacheServiceIdAttr = vars.value.cacheServiceIdInLocal;
// GetCacheControlService.List.Current.Local_CACHE_CONTROL_SERVICES.CacheControlId = Cache_GetCacheControlId.CacheControlId
getCacheControlServiceVar.value.listOut.getCurrent(callContext.iterationContext).local_CACHE_CONTROL_SERVICESAttr.cacheControlIdAttr = cache_GetCacheControlIdVar.value.cacheControlIdOut;
// GetCacheControlService.List.Current.Local_CACHE_CONTROL_SERVICES.LastUpdateAt = CurrDateTime
getCacheControlServiceVar.value.listOut.getCurrent(callContext.iterationContext).local_CACHE_CONTROL_SERVICESAttr.lastUpdateAtAttr = OS.BuiltinFunctions.currDateTime();
// GetCacheControlService.List.Current.Local_CACHE_CONTROL_SERVICES.ExpirationDate = AddMinutes
getCacheControlServiceVar.value.listOut.getCurrent(callContext.iterationContext).local_CACHE_CONTROL_SERVICESAttr.expirationDateAttr = OS.BuiltinFunctions.addMinutes(getCacheControlServiceVar.value.listOut.getCurrent(callContext.iterationContext).local_CACHE_CONTROL_SERVICESAttr.lastUpdateAtAttr, cache_GetCacheControlIdVar.value.minutesToInvalidateCacheOut);
// CacheExpirationDate = GetCacheControlService.List.Current.Local_CACHE_CONTROL_SERVICES.ExpirationDate
outVars.value.cacheExpirationDateOut = getCacheControlServiceVar.value.listOut.getCurrent(callContext.iterationContext).local_CACHE_CONTROL_SERVICESAttr.expirationDateAttr;
}

// LastCacheCheck
// GetCacheControlService.List.Current.Local_CACHE_CONTROL_SERVICES.LastCacheCheck = CurrDateTime
getCacheControlServiceVar.value.listOut.getCurrent(callContext.iterationContext).local_CACHE_CONTROL_SERVICESAttr.lastCacheCheckAttr = OS.BuiltinFunctions.currDateTime();
// Execute Action: CreateOrUpdateLocal_CACHE_CONTROL_SERVICES
return WTF_MBPModel.entities.Local_CACHE_CONTROL_SERVICES.createOrUpdate(WTF_MBPModel.Local_CACHE_CONTROL_SERVICESRecord.fromStructure(getCacheControlServiceVar.value.listOut.getCurrent(callContext.iterationContext).local_CACHE_CONTROL_SERVICESAttr), callContext).then(function (value) {
createOrUpdateLocal_CACHE_CONTROL_SERVICESVar.value = value;
}).then(function () {
// Execute Action: LogMessage_CacheCreateOrUpdate
OS.SystemActions.logMessage(((((((((((((((((((((((((((((("Cache created or updated" + "\r\n") + "INPUT") + "\r\n") + "CacheServiceId[") + vars.value.cacheServiceIdInLocal) + "]") + "\r\n") + "ToRefresh[") + (vars.value.toRefreshInLocal ? "True" : "False")) + "]") + "\r\n") + "ValidateItemCacheExpirationDate[") + (vars.value.validateItemCacheExpirationDateInLocal ? "True" : "False")) + "]") + "\r\n") + "ItemCacheExpirationDate[") + OS.BuiltinFunctions.dateTimeToText(vars.value.itemCacheExpirationDateInLocal)) + "]") + "\r\n") + "OUTPUT") + "\r\n") + "useCache[") + (outVars.value.useCacheOut ? "True" : "False")) + "]") + "\r\n") + "CacheExpirationDate[") + OS.BuiltinFunctions.dateTimeToText(outVars.value.cacheExpirationDateOut)) + "]") + "\r\n"), "CacheControl", callContext);
});
}

});
});
} else {
// useCache = True
outVars.value.useCacheOut = true;
// Execute Action: LogMessage_CacheIsValid
OS.SystemActions.logMessage(((((((((((((((((((((((((((((("Cache is valid" + "\r\n") + "INPUT") + "\r\n") + "CacheServiceId[") + vars.value.cacheServiceIdInLocal) + "]") + "\r\n") + "ToRefresh[") + (vars.value.toRefreshInLocal ? "True" : "False")) + "]") + "\r\n") + "ValidateItemCacheExpirationDate[") + (vars.value.validateItemCacheExpirationDateInLocal ? "True" : "False")) + "]") + "\r\n") + "ItemCacheExpirationDate[") + OS.BuiltinFunctions.dateTimeToText(vars.value.itemCacheExpirationDateInLocal)) + "]") + "\r\n") + "OUTPUT") + "\r\n") + "useCache[") + (outVars.value.useCacheOut ? "True" : "False")) + "]") + "\r\n") + "CacheExpirationDate[") + OS.BuiltinFunctions.dateTimeToText(outVars.value.cacheExpirationDateOut)) + "]") + "\r\n"), "CacheControl", callContext);
}

});
});
}

});
});
}).catch(function (ex) {
OS.Logger.trace("Cache_Control.Cache_ValidationByService", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// useCache = False
outVars.value.useCacheOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Cache_Control.Cache_ValidationByService$vars", [{
name: "CacheServiceId",
attrName: "cacheServiceIdInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ToRefresh",
attrName: "toRefreshInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ValidateItemCacheExpirationDate",
attrName: "validateItemCacheExpirationDateInLocal",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ItemCacheExpirationDate",
attrName: "itemCacheExpirationDateInLocal",
mandatory: false,
dataType: OS.Types.DateTime,
defaultValue: function () {
return OS.DataTypes.DateTime.defaultValue;
}
}, {
name: "CacheValidation",
attrName: "cacheValidationVar",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Cache_Control.Cache_ValidationByService$outVars", [{
name: "useCache",
attrName: "useCacheOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "CacheExpirationDate",
attrName: "cacheExpirationDateOut",
mandatory: false,
dataType: OS.Types.DateTime,
defaultValue: function () {
return OS.DataTypes.DateTime.defaultValue;
}
}, {
name: "IsOnline",
attrName: "isOnlineOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.cache_ValidationByService$Action = function (cacheServiceIdIn, toRefreshIn, validateItemCacheExpirationDateIn, itemCacheExpirationDateIn) {
cacheServiceIdIn = (cacheServiceIdIn === undefined) ? "" : cacheServiceIdIn;
toRefreshIn = (toRefreshIn === undefined) ? false : toRefreshIn;
validateItemCacheExpirationDateIn = (validateItemCacheExpirationDateIn === undefined) ? false : validateItemCacheExpirationDateIn;
itemCacheExpirationDateIn = (itemCacheExpirationDateIn === undefined) ? OS.DataTypes.DateTime.defaultValue : itemCacheExpirationDateIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.cache_ValidationByService$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(cacheServiceIdIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(toRefreshIn, OS.Types.Boolean), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(validateItemCacheExpirationDateIn, OS.Types.Boolean), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(itemCacheExpirationDateIn, OS.Types.DateTime)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
useCache: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.useCacheOut, OS.Types.Boolean, true),
CacheExpirationDate: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.cacheExpirationDateOut, OS.Types.DateTime, true),
IsOnline: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.isOnlineOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$CheckIsBrowser", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$Cordova_GetOperatingSystem"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.checkIsBrowser$Action = function (callContext) {
callContext = controller.callContext(callContext);
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Cordova.CheckIsBrowser$outVars"))());
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android)))) {
// Success = False
outVars.value.successOut = false;
} else {
// IsBrowser = True
outVars.value.isBrowserOut = true;
}

return outVars.value;
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Cordova.CheckIsBrowser$outVars", [{
name: "IsBrowser",
attrName: "isBrowserOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.checkIsBrowser$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.checkIsBrowser$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
IsBrowser: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.isBrowserOut, OS.Types.Boolean, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$CheckRefillInformation", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$GetConfigValueAsText_MBP", "WTF_MBP.controller$ServerAction.GetRefillInformation_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.checkRefillInformation$Action = function (refreshTokenIn, associationIdIn, mSISDNIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_Billing.CheckRefillInformation$vars"))());
vars.value.refreshTokenInLocal = refreshTokenIn;
vars.value.associationIdInLocal = associationIdIn;
vars.value.mSISDNInLocal = mSISDNIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getRefillInformation_BPVar = new OS.DataTypes.VariableHolder();
var getCustomerRestrictedStatusVar = new OS.DataTypes.VariableHolder();
var getCustomerRestrictedIDVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_Billing.CheckRefillInformation$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetCustomerRestrictedID
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("CUSTOMER_RESTRICTED_ID", callContext).then(function (value) {
getCustomerRestrictedIDVar.value = value;
}).then(function () {
// SetID
// ID = GetCustomerRestrictedID.Value
vars.value.iDVar = getCustomerRestrictedIDVar.value.valueOut;
// Execute Action: GetCustomerRestrictedStatus
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("CUSTOMER_RESTRICTED_STATUS", callContext).then(function (value) {
getCustomerRestrictedStatusVar.value = value;
});
}).then(function () {
// SetStatus
// Status = GetCustomerRestrictedStatus.Value
vars.value.statusVar = getCustomerRestrictedStatusVar.value.valueOut;
// Execute Action: GetRefillInformation_BP
return controller.getRefillInformation_BP$ServerAction(vars.value.refreshTokenInLocal, vars.value.associationIdInLocal, vars.value.mSISDNInLocal, vars.value.iDVar, vars.value.statusVar, callContext).then(function (value) {
getRefillInformation_BPVar.value = value;
});
}).then(function () {
// GetRefillInformation.Success?
if((getRefillInformation_BPVar.value.successOut)) {
// Eligible = GetRefillInformation_BP.Eligible
outVars.value.eligibleOut = getRefillInformation_BPVar.value.eligibleOut;
// CurrRefill = GetRefillInformation_BP.CurrRefill
outVars.value.currRefillOut = getRefillInformation_BPVar.value.currRefillOut;
// RefillCost = GetRefillInformation_BP.RefillCost
outVars.value.refillCostOut = getRefillInformation_BPVar.value.refillCostOut;
// RefillVolume = GetRefillInformation_BP.RefillVolume
outVars.value.refillVolumeOut = getRefillInformation_BPVar.value.refillVolumeOut;
} else {
// Success = False
outVars.value.successOut = false;
}

});
}).catch(function (ex) {
OS.Logger.trace("API_Billing.CheckRefillInformation", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_Billing.CheckRefillInformation$vars", [{
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "AssociationId",
attrName: "associationIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "MSISDN",
attrName: "mSISDNInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ID",
attrName: "iDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Status",
attrName: "statusVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_Billing.CheckRefillInformation$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Eligible",
attrName: "eligibleOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "CurrRefill",
attrName: "currRefillOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "RefillCost",
attrName: "refillCostOut",
mandatory: false,
dataType: OS.Types.Decimal,
defaultValue: function () {
return OS.DataTypes.Decimal.defaultValue;
}
}, {
name: "RefillVolume",
attrName: "refillVolumeOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.clientActionProxies.checkRefillInformation$Action = function (refreshTokenIn, associationIdIn, mSISDNIn) {
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
associationIdIn = (associationIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : associationIdIn;
mSISDNIn = (mSISDNIn === undefined) ? "" : mSISDNIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.checkRefillInformation$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(associationIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(mSISDNIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Eligible: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.eligibleOut, OS.Types.Boolean, true),
CurrRefill: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.currRefillOut, OS.Types.Integer, true),
RefillCost: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.refillCostOut, OS.Types.Decimal, true),
RefillVolume: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.refillVolumeOut, OS.Types.Integer, true)
};
});
};
});

define("WTF_MBP.controller$ClearCache", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "BALANCE_MBP.controller", "BALANCE_MBP.controller$Balance_ClearCache", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$BALANCE_MBP", "WTF_MBP.model$Local_PICTURERec", "WTF_MBP.model$Local_WALLET_ITEMRec", "WTF_MBP.model$Local_LAYOUT_LEVELSRec", "WTF_MBP.model$Local_APP_CONFIGRec", "WTF_MBP.model$Local_ADDONS_REFILLSRec", "WTF_MBP.model$Local_TMCODE_TO_CHANGERec", "WTF_MBP.model$Local_APP_FAQSRec", "WTF_MBP.model$Local_SERVICERec", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.model$Local_LAST_PAGERec", "WTF_MBP.model$Local_CACHE_CONTROL_SERVICESRec", "WTF_MBP.model$Local_SESSION_TEMP_TABLERec", "WTF_MBP.model$Local_PRIZERec", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.model$Local_SCRATCH_REGULATIONRec", "WTF_MBP.model$Local_ASSOCIATIONRec", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORec", "WTF_MBP.model$Local_HOT_DEAL_PURCHASERec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, BALANCE_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.clearCache$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var balance_ClearCacheVar = new OS.DataTypes.VariableHolder();
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: Balance_ClearCache
return BALANCE_MBPController.default.balance_ClearCache$Action(callContext).then(function (value) {
balance_ClearCacheVar.value = value;
}).then(function () {
// Execute Action: DeleteAllUserInfo
return WTF_MBPModel.entities.Local_USER_NOS_INFO.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllAccessTokenInfo
return WTF_MBPModel.entities.Local_ACCESS_TOKEN_INFO.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllUserWTF
return WTF_MBPModel.entities.Local_USER_WTF.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllLocal_ADDONS_REFILLS
return WTF_MBPModel.entities.Local_ADDONS_REFILLS.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllAPPFAQs
return WTF_MBPModel.entities.Local_APP_FAQS.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllPictures
return WTF_MBPModel.entities.Local_PICTURE.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllAppConfigs
return WTF_MBPModel.entities.Local_APP_CONFIG.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllSessionTempTables
return WTF_MBPModel.entities.Local_SESSION_TEMP_TABLE.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllLocal_PRIZE
return WTF_MBPModel.entities.Local_PRIZE.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllLocal_SERVICE
return WTF_MBPModel.entities.Local_SERVICE.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllLocal_ASSOCIATION
return WTF_MBPModel.entities.Local_ASSOCIATION.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllLocal_LAST_PAGE
return WTF_MBPModel.entities.Local_LAST_PAGE.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllLocal_CACHE_CONTROL_SERVICES
return WTF_MBPModel.entities.Local_CACHE_CONTROL_SERVICES.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllLocal_SCRATCH_REGULATION
return WTF_MBPModel.entities.Local_SCRATCH_REGULATION.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllLocal_LAYOUT_LEVELS
return WTF_MBPModel.entities.Local_LAYOUT_LEVELS.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllLocal_HOT_DEAL_PURCHASE
return WTF_MBPModel.entities.Local_HOT_DEAL_PURCHASE.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllLocal_WALLET_ITEM
return WTF_MBPModel.entities.Local_WALLET_ITEM.deleteAll(callContext);
}).then(function () {
// Execute Action: DeleteAllLocal_TMCODE_TO_CHANGE
return WTF_MBPModel.entities.Local_TMCODE_TO_CHANGE.deleteAll(callContext);
});
}).catch(function (ex) {
OS.Logger.trace("OfflineDataSync.ClearCache", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.clientActionProxies.clearCache$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.clearCache$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$CONST_GetRefData_InvoicePayment", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.cONST_GetRefData_InvoicePayment$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Constants.CONST_GetRefData_InvoicePayment$outVars"))());
try {// Process = "InvoicePayment"
outVars.value.processOut = "InvoicePayment";
// LOVType = "ONLINEPAYMENTMETHODMAPPING"
outVars.value.lOVTypeOut = "ONLINEPAYMENTMETHODMAPPING";
// Channel = "WSC"
outVars.value.channelOut = "WSC";
// FinancialMovement = "INVOICE"
outVars.value.financialMovementOut = "INVOICE";
} catch (ex) {
(function () {
OS.Logger.trace("Constants.CONST_GetRefData_InvoicePayment", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return outVars.value;

}

throw ex;
})();
}

return outVars.value;
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Constants.CONST_GetRefData_InvoicePayment$outVars", [{
name: "Process",
attrName: "processOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "LOVType",
attrName: "lOVTypeOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Channel",
attrName: "channelOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "FinancialMovement",
attrName: "financialMovementOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.cONST_GetRefData_InvoicePayment$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.cONST_GetRefData_InvoicePayment$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Process: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.processOut, OS.Types.Text, true),
LOVType: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.lOVTypeOut, OS.Types.Text, true),
Channel: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.channelOut, OS.Types.Text, true),
FinancialMovement: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.financialMovementOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$CONST_GetRefData_TopUp", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.cONST_GetRefData_TopUp$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Constants.CONST_GetRefData_TopUp$outVars"))());
try {// Process = "ChargeOptions"
outVars.value.processOut = "ChargeOptions";
// LOVType = "ONLINEPAYMENTMETHODMAPPING"
outVars.value.lOVTypeOut = "ONLINEPAYMENTMETHODMAPPING";
// Channel = "WSC"
outVars.value.channelOut = "WSC";
// FinancialMovement = "RECHARGE"
outVars.value.financialMovementOut = "RECHARGE";
} catch (ex) {
(function () {
OS.Logger.trace("Constants.CONST_GetRefData_TopUp", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return outVars.value;

}

throw ex;
})();
}

return outVars.value;
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Constants.CONST_GetRefData_TopUp$outVars", [{
name: "Process",
attrName: "processOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "LOVType",
attrName: "lOVTypeOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Channel",
attrName: "channelOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "FinancialMovement",
attrName: "financialMovementOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.cONST_GetRefData_TopUp$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.cONST_GetRefData_TopUp$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Process: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.processOut, OS.Types.Text, true),
LOVType: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.lOVTypeOut, OS.Types.Text, true),
Channel: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.channelOut, OS.Types.Text, true),
FinancialMovement: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.financialMovementOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$CONST_Tutorial_SelectorType", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.cONST_Tutorial_SelectorType$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Constants.CONST_Tutorial_SelectorType$outVars"))());
try {// MobileService = "MOBILE_VOICE"
outVars.value.mobileServiceOut = "MOBILE_VOICE";
// BroadbandService = "MOBILE_NET"
outVars.value.broadbandServiceOut = "MOBILE_NET";
// BillingAccount = "BILLING_ACCOUNT"
outVars.value.billingAccountOut = "BILLING_ACCOUNT";
} catch (ex) {
(function () {
OS.Logger.trace("Constants.CONST_Tutorial_SelectorType", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return outVars.value;

}

throw ex;
})();
}

return outVars.value;
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Constants.CONST_Tutorial_SelectorType$outVars", [{
name: "MobileService",
attrName: "mobileServiceOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "BroadbandService",
attrName: "broadbandServiceOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "BillingAccount",
attrName: "billingAccountOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.cONST_Tutorial_SelectorType$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.cONST_Tutorial_SelectorType$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
MobileService: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.mobileServiceOut, OS.Types.Text, true),
BroadbandService: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.broadbandServiceOut, OS.Types.Text, true),
BillingAccount: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.billingAccountOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$Cordova_GetDeviceID", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.controller", "CommonPlugin.controller$IsCordovaDefined", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "CommonPlugin.controller$GetDeviceID"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.cordova_GetDeviceID$Action = function (callContext) {
callContext = controller.callContext(callContext);
var isCordovaDefinedVar = new OS.DataTypes.VariableHolder();
var getDeviceIDVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Cordova.Cordova_GetDeviceID$outVars"))());
// Execute Action: IsCordovaDefined
isCordovaDefinedVar.value = CommonPluginController.default.isCordovaDefined$Action(callContext);

if((isCordovaDefinedVar.value.isLoadedOut)) {
// Execute Action: GetDeviceID
getDeviceIDVar.value = CommonPluginController.default.getDeviceID$Action(callContext);

// DeviceHwId = GetDeviceID.DeviceHwId
outVars.value.deviceHwIdOut = getDeviceIDVar.value.deviceHwIdOut;
}

return outVars.value;
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Cordova.Cordova_GetDeviceID$outVars", [{
name: "DeviceHwId",
attrName: "deviceHwIdOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.cordova_GetDeviceID$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.cordova_GetDeviceID$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
DeviceHwId: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.deviceHwIdOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$Cordova_GetOperatingSystem", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.controller", "CommonPlugin.controller$IsCordovaDefined", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "CommonPlugin.controller$GetOperatingSystem"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.cordova_GetOperatingSystem$Action = function (callContext) {
callContext = controller.callContext(callContext);
var isCordovaDefinedVar = new OS.DataTypes.VariableHolder();
var getOperatingSystemVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Cordova.Cordova_GetOperatingSystem$outVars"))());
// Execute Action: IsCordovaDefined
isCordovaDefinedVar.value = CommonPluginController.default.isCordovaDefined$Action(callContext);

if((isCordovaDefinedVar.value.isLoadedOut)) {
// Execute Action: GetOperatingSystem
getOperatingSystemVar.value = CommonPluginController.default.getOperatingSystem$Action(callContext);

// OperatingSystemsId = GetOperatingSystem.OperatingSystemsId
outVars.value.operatingSystemsIdOut = getOperatingSystemVar.value.operatingSystemsIdOut;
}

return outVars.value;
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Cordova.Cordova_GetOperatingSystem$outVars", [{
name: "OperatingSystemsId",
attrName: "operatingSystemsIdOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.cordova_GetOperatingSystem$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.cordova_GetOperatingSystem$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
OperatingSystemsId: actionResults.operatingSystemsIdOut
};
});
};
});

define("WTF_MBP.controller$Cordova_GetPlatform", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.controller", "CommonPlugin.controller$IsCordovaDefined", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "CommonPlugin.controller$GetPlatform"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.cordova_GetPlatform$Action = function (callContext) {
callContext = controller.callContext(callContext);
var isCordovaDefinedVar = new OS.DataTypes.VariableHolder();
var getPlatformVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Cordova.Cordova_GetPlatform$outVars"))());
// Execute Action: IsCordovaDefined
isCordovaDefinedVar.value = CommonPluginController.default.isCordovaDefined$Action(callContext);

if((isCordovaDefinedVar.value.isLoadedOut)) {
// Execute Action: GetPlatform
getPlatformVar.value = CommonPluginController.default.getPlatform$Action(callContext);

// Platform = GetPlatform.Platform
outVars.value.platformOut = getPlatformVar.value.platformOut;
}

return outVars.value;
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Cordova.Cordova_GetPlatform$outVars", [{
name: "Platform",
attrName: "platformOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.cordova_GetPlatform$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.cordova_GetPlatform$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Platform: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.platformOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$CreateLocalLayoutLevels", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_LAYOUT_LEVELSRecordList", "WTF_MBP.model$STR_LAYOUT_LEVELList", "WTF_MBP.controller$ServerAction.GetLayoutLevels", "WTF_MBP.model$Local_LAYOUT_LEVELSRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.createLocalLayoutLevels$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getLayoutLevelsVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.PageRedirection.CreateLocalLayoutLevels$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetLayoutLevels
return controller.getLayoutLevels$ServerAction(callContext).then(function (value) {
getLayoutLevelsVar.value = value;
}).then(function () {
// Execute Action: DeleteAllLocalLayoutlLevels
return WTF_MBPModel.entities.Local_LAYOUT_LEVELS.deleteAll(callContext);
}).then(function () {
// Execute Action: CreateAllLocalLayoutLevels
return WTF_MBPModel.entities.Local_LAYOUT_LEVELS.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(getLayoutLevelsVar.value.layoutLevelsListOut, new WTF_MBPModel.Local_LAYOUT_LEVELSRecordList(), function (source, target) {
target.local_LAYOUT_LEVELSAttr.idAttr = OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.nullIdentifier());
target.local_LAYOUT_LEVELSAttr.labelAttr = source.labelAttr;
target.local_LAYOUT_LEVELSAttr.levelAttr = source.levelAttr;
return target;
}), callContext);
});
}).catch(function (ex) {
OS.Logger.trace("PageRedirection.CreateLocalLayoutLevels", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// SetOutput
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.PageRedirection.CreateLocalLayoutLevels$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.createLocalLayoutLevels$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.createLocalLayoutLevels$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$CreateOrUpdateAllLocal_ADDONS_REFILLS_Logic", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_ADDONS_REFILLSRecordList", "WTF_MBP.model$Local_ADDONS_REFILLSRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.createOrUpdateAllLocal_ADDONS_REFILLS_Logic$Action = function (sourceListIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateAllLocal_ADDONS_REFILLS_Logic$vars"))());
vars.value.sourceListInLocal = sourceListIn.clone();
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateAllLocal_ADDONS_REFILLS_Logic$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: DeleteAllLocal_ADDONS_REFILLS
return WTF_MBPModel.entities.Local_ADDONS_REFILLS.deleteAll(callContext).then(function () {
// Execute Action: CreateOrUpdateAllLocal_ADDONS_REFILLS
return WTF_MBPModel.entities.Local_ADDONS_REFILLS.createOrUpdateAll(vars.value.sourceListInLocal, callContext);
});
}).catch(function (ex) {
OS.Logger.trace("CRUDActions.CreateOrUpdateAllLocal_ADDONS_REFILLS_Logic", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateAllLocal_ADDONS_REFILLS_Logic$vars", [{
name: "SourceList",
attrName: "sourceListInLocal",
mandatory: true,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.Local_ADDONS_REFILLSRecordList();
},
complexType: WTF_MBPModel.Local_ADDONS_REFILLSRecordList
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateAllLocal_ADDONS_REFILLS_Logic$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.createOrUpdateAllLocal_ADDONS_REFILLS_Logic$Action = function (sourceListIn) {
sourceListIn = (sourceListIn === undefined) ? new WTF_MBPModel.Local_ADDONS_REFILLSRecordList() : sourceListIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.createOrUpdateAllLocal_ADDONS_REFILLS_Logic$Action.bind(controller, sourceListIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$CreateOrUpdateAllLocal_INFO_CARDS_logic", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_INFOCARDSRecordList", "WTF_MBP.model$Local_INFOCARDSList", "WTF_MBP.model$Local_INFOCARDSRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.createOrUpdateAllLocal_INFO_CARDS_logic$Action = function (infoCardsIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateAllLocal_INFO_CARDS_logic$vars"))());
vars.value.infoCardsInLocal = infoCardsIn.clone();
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: DeleteAllLocal_INFOCARDS
return WTF_MBPModel.entities.Local_INFOCARDS.deleteAll(callContext).then(function () {
// Execute Action: CreateOrUpdateAllLocal_INFOCARDS
return WTF_MBPModel.entities.Local_INFOCARDS.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(vars.value.infoCardsInLocal, new WTF_MBPModel.Local_INFOCARDSRecordList(), function (source, target) {
target = WTF_MBPModel.Local_INFOCARDSRecord.fromStructure(source);
return target;
}), callContext);
});
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateAllLocal_INFO_CARDS_logic$vars", [{
name: "InfoCards",
attrName: "infoCardsInLocal",
mandatory: true,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.Local_INFOCARDSList();
},
complexType: WTF_MBPModel.Local_INFOCARDSList
}]);
WTF_MBPController.default.clientActionProxies.createOrUpdateAllLocal_INFO_CARDS_logic$Action = function (infoCardsIn) {
infoCardsIn = (infoCardsIn === undefined) ? new WTF_MBPModel.Local_INFOCARDSList() : infoCardsIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.createOrUpdateAllLocal_INFO_CARDS_logic$Action.bind(controller, infoCardsIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$CreateOrUpdateAllLocal_TMCODE_TO_CHANGE", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_TMCODE_TO_CHANGERecordList", "WTF_MBP.model$Local_TMCODE_TO_CHANGEList", "WTF_MBP.model$Local_TMCODE_TO_CHANGERec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.createOrUpdateAllLocal_TMCODE_TO_CHANGE$Action = function (listIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateAllLocal_TMCODE_TO_CHANGE$vars"))());
vars.value.listInLocal = listIn.clone();
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: DeleteAllLocal_TMCODE_TO_CHANGE
return WTF_MBPModel.entities.Local_TMCODE_TO_CHANGE.deleteAll(callContext).then(function () {
// Execute Action: CreateOrUpdateAllLocal_TMCODE_TO_CHANGE
return WTF_MBPModel.entities.Local_TMCODE_TO_CHANGE.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(vars.value.listInLocal, new WTF_MBPModel.Local_TMCODE_TO_CHANGERecordList(), function (source, target) {
target = WTF_MBPModel.Local_TMCODE_TO_CHANGERecord.fromStructure(source);
return target;
}), callContext);
});
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateAllLocal_TMCODE_TO_CHANGE$vars", [{
name: "list",
attrName: "listInLocal",
mandatory: true,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.Local_TMCODE_TO_CHANGEList();
},
complexType: WTF_MBPModel.Local_TMCODE_TO_CHANGEList
}]);
WTF_MBPController.default.clientActionProxies.createOrUpdateAllLocal_TMCODE_TO_CHANGE$Action = function (listIn) {
listIn = (listIn === undefined) ? new WTF_MBPModel.Local_TMCODE_TO_CHANGEList() : listIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.createOrUpdateAllLocal_TMCODE_TO_CHANGE$Action.bind(controller, listIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$CreateOrUpdateLocal_APP_ACCESS_CONTROL_Logic", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_APP_ACCESS_CONTROLRecord", "WTF_MBP.model$Local_APP_ACCESS_CONTROLRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.createOrUpdateLocal_APP_ACCESS_CONTROL_Logic$Action = function (sourceIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateLocal_APP_ACCESS_CONTROL_Logic$vars"))());
vars.value.sourceInLocal = sourceIn.clone();
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var createOrUpdateLocal_APP_ACCESS_CONTROLVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateLocal_APP_ACCESS_CONTROL_Logic$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CreateOrUpdateLocal_APP_ACCESS_CONTROL
return WTF_MBPModel.entities.Local_APP_ACCESS_CONTROL.createOrUpdate(WTF_MBPModel.Local_APP_ACCESS_CONTROLRecord.fromStructure(vars.value.sourceInLocal.local_APP_ACCESS_CONTROLAttr), callContext).then(function (value) {
createOrUpdateLocal_APP_ACCESS_CONTROLVar.value = value;
}).then(function () {
// Id = CreateOrUpdateLocal_APP_ACCESS_CONTROL.Id
outVars.value.idOut = createOrUpdateLocal_APP_ACCESS_CONTROLVar.value.idOut;
});
}).catch(function (ex) {
OS.Logger.trace("CRUDActions.CreateOrUpdateLocal_APP_ACCESS_CONTROL_Logic", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateLocal_APP_ACCESS_CONTROL_Logic$vars", [{
name: "Source",
attrName: "sourceInLocal",
mandatory: true,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.Local_APP_ACCESS_CONTROLRecord();
},
complexType: WTF_MBPModel.Local_APP_ACCESS_CONTROLRecord
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateLocal_APP_ACCESS_CONTROL_Logic$outVars", [{
name: "Id",
attrName: "idOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.clientActionProxies.createOrUpdateLocal_APP_ACCESS_CONTROL_Logic$Action = function (sourceIn) {
sourceIn = (sourceIn === undefined) ? new WTF_MBPModel.Local_APP_ACCESS_CONTROLRecord() : sourceIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.createOrUpdateLocal_APP_ACCESS_CONTROL_Logic$Action.bind(controller, sourceIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Id: actionResults.idOut
};
});
};
});

define("WTF_MBP.controller$CreateOrUpdateLocal_LOCALDYNAMICLINK", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_TEMPDYNAMICLINKRecord", "WTF_MBP.model$Local_TEMPDYNAMICLINKRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.createOrUpdateLocal_LOCALDYNAMICLINK$Action = function (sourceIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateLocal_LOCALDYNAMICLINK$vars"))());
vars.value.sourceInLocal = sourceIn.clone();
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var createOrUpdateLocal_TEMPDYNAMICLINKVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateLocal_LOCALDYNAMICLINK$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CreateOrUpdateLocal_TEMPDYNAMICLINK
return WTF_MBPModel.entities.Local_TEMPDYNAMICLINK.createOrUpdate(WTF_MBPModel.Local_TEMPDYNAMICLINKRecord.fromStructure(vars.value.sourceInLocal.local_TEMPDYNAMICLINKAttr), callContext).then(function (value) {
createOrUpdateLocal_TEMPDYNAMICLINKVar.value = value;
}).then(function () {
// Id = CreateOrUpdateLocal_TEMPDYNAMICLINK.Id
outVars.value.idOut = createOrUpdateLocal_TEMPDYNAMICLINKVar.value.idOut;
});
}).catch(function (ex) {
OS.Logger.trace("CRUDActions.CreateOrUpdateLocal_LOCALDYNAMICLINK", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateLocal_LOCALDYNAMICLINK$vars", [{
name: "Source",
attrName: "sourceInLocal",
mandatory: true,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.Local_TEMPDYNAMICLINKRecord();
},
complexType: WTF_MBPModel.Local_TEMPDYNAMICLINKRecord
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateLocal_LOCALDYNAMICLINK$outVars", [{
name: "Id",
attrName: "idOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.clientActionProxies.createOrUpdateLocal_LOCALDYNAMICLINK$Action = function (sourceIn) {
sourceIn = (sourceIn === undefined) ? new WTF_MBPModel.Local_TEMPDYNAMICLINKRecord() : sourceIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.createOrUpdateLocal_LOCALDYNAMICLINK$Action.bind(controller, sourceIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Id: actionResults.idOut
};
});
};
});

define("WTF_MBP.controller$CreateOrUpdateLocal_TEMPDEEPLINK_Logic", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_TEMPDEEPLINKRecord", "WTF_MBP.model$Local_TEMPDEEPLINKRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.createOrUpdateLocal_TEMPDEEPLINK_Logic$Action = function (sourceIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateLocal_TEMPDEEPLINK_Logic$vars"))());
vars.value.sourceInLocal = sourceIn.clone();
var createOrUpdateLocal_TEMPDEEPLINKVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateLocal_TEMPDEEPLINK_Logic$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CreateOrUpdateLocal_TEMPDEEPLINK
return WTF_MBPModel.entities.Local_TEMPDEEPLINK.createOrUpdate(WTF_MBPModel.Local_TEMPDEEPLINKRecord.fromStructure(vars.value.sourceInLocal), callContext).then(function (value) {
createOrUpdateLocal_TEMPDEEPLINKVar.value = value;
}).then(function () {
// Id = CreateOrUpdateLocal_TEMPDEEPLINK.Id
outVars.value.idOut = createOrUpdateLocal_TEMPDEEPLINKVar.value.idOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateLocal_TEMPDEEPLINK_Logic$vars", [{
name: "Source",
attrName: "sourceInLocal",
mandatory: true,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.Local_TEMPDEEPLINKRec();
},
complexType: WTF_MBPModel.Local_TEMPDEEPLINKRec
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.CRUDActions.CreateOrUpdateLocal_TEMPDEEPLINK_Logic$outVars", [{
name: "Id",
attrName: "idOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.clientActionProxies.createOrUpdateLocal_TEMPDEEPLINK_Logic$Action = function (sourceIn) {
sourceIn = (sourceIn === undefined) ? new WTF_MBPModel.Local_TEMPDEEPLINKRec() : sourceIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.createOrUpdateLocal_TEMPDEEPLINK_Logic$Action.bind(controller, sourceIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Id: actionResults.idOut
};
});
};
});

define("WTF_MBP.controller$CreateOrUpdateSessionTemp", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_SESSION_TEMP_TABLERecord", "WTF_MBP.model$Local_SESSION_TEMP_TABLERec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.createOrUpdateSessionTemp$Action = function (sourceIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SessionUserNOSToken.CreateOrUpdateSessionTemp$vars"))());
vars.value.sourceInLocal = sourceIn.clone();
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var createOrUpdateLocal_SESSION_TEMP_TABLEVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SessionUserNOSToken.CreateOrUpdateSessionTemp$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CreateOrUpdateLocal_SESSION_TEMP_TABLE
return WTF_MBPModel.entities.Local_SESSION_TEMP_TABLE.createOrUpdate(WTF_MBPModel.Local_SESSION_TEMP_TABLERecord.fromStructure(vars.value.sourceInLocal), callContext).then(function (value) {
createOrUpdateLocal_SESSION_TEMP_TABLEVar.value = value;
}).then(function () {
// Id = CreateOrUpdateLocal_SESSION_TEMP_TABLE.Id
outVars.value.idOut = createOrUpdateLocal_SESSION_TEMP_TABLEVar.value.idOut;
});
}).catch(function (ex) {
OS.Logger.trace("SessionUserNOSToken.CreateOrUpdateSessionTemp", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SessionUserNOSToken.CreateOrUpdateSessionTemp$vars", [{
name: "Source",
attrName: "sourceInLocal",
mandatory: true,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.Local_SESSION_TEMP_TABLERec();
},
complexType: WTF_MBPModel.Local_SESSION_TEMP_TABLERec
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SessionUserNOSToken.CreateOrUpdateSessionTemp$outVars", [{
name: "Id",
attrName: "idOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.clientActionProxies.createOrUpdateSessionTemp$Action = function (sourceIn) {
sourceIn = (sourceIn === undefined) ? new WTF_MBPModel.Local_SESSION_TEMP_TABLERec() : sourceIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.createOrUpdateSessionTemp$Action.bind(controller, sourceIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Id: actionResults.idOut
};
});
};
});

define("WTF_MBP.controller$CreateOrUpdateUserWTF", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_USER_WTFRecord", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.model$Local_USER_WTFRecordList", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.createOrUpdateUserWTF$Action = function (sourceIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.CreateOrUpdateUserWTF$vars"))());
vars.value.sourceInLocal = sourceIn.clone();
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var createOrUpdateLocal_USER_WTFVar = new OS.DataTypes.VariableHolder();
var getLocalUSERWTFSVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_WTFRecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalUSERWTFS
var getLocalUSERWTFSAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_WTFRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4";
} else {
selectSql += "\"ENLocal_USER_WTF\".\"Id\" o0, \"ENLocal_USER_WTF\".\"Msisdn\" o1, \"ENLocal_USER_WTF\".\"CodeMember\" o2, \"ENLocal_USER_WTF\".\"Tmcode_label\" o3, \"ENLocal_USER_WTF\".\"Is_MonthlyRenewal\" o4";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_WTF\" \"ENLocal_USER_WTF\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_WTFRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_WTFAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalUSERWTFSVar.value;
});
};
return getLocalUSERWTFSAggr().then(function () {
// GetLocalUSERWTFS.List.Current.Local_USER_WTF.Msisdn = Source.Local_USER_WTF.Msisdn
getLocalUSERWTFSVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_WTFAttr.msisdnAttr = vars.value.sourceInLocal.local_USER_WTFAttr.msisdnAttr;
// GetLocalUSERWTFS.List.Current.Local_USER_WTF.CodeMember = Source.Local_USER_WTF.CodeMember
getLocalUSERWTFSVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_WTFAttr.codeMemberAttr = vars.value.sourceInLocal.local_USER_WTFAttr.codeMemberAttr;
// GetLocalUSERWTFS.List.Current.Local_USER_WTF.Tmcode_label = Source.Local_USER_WTF.Tmcode_label
getLocalUSERWTFSVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_WTFAttr.tmcode_labelAttr = vars.value.sourceInLocal.local_USER_WTFAttr.tmcode_labelAttr;
// GetLocalUSERWTFS.List.Current.Local_USER_WTF.Is_MonthlyRenewal = Source.Local_USER_WTF.Is_MonthlyRenewal
getLocalUSERWTFSVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_WTFAttr.is_MonthlyRenewalAttr = vars.value.sourceInLocal.local_USER_WTFAttr.is_MonthlyRenewalAttr;
// Execute Action: CreateOrUpdateLocal_USER_WTF
return WTF_MBPModel.entities.Local_USER_WTF.createOrUpdate(WTF_MBPModel.Local_USER_WTFRecord.fromStructure(getLocalUSERWTFSVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_WTFAttr), callContext).then(function (value) {
createOrUpdateLocal_USER_WTFVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("UserWTF.CreateOrUpdateUserWTF", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.CreateOrUpdateUserWTF$vars", [{
name: "Source",
attrName: "sourceInLocal",
mandatory: true,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.Local_USER_WTFRecord();
},
complexType: WTF_MBPModel.Local_USER_WTFRecord
}]);
WTF_MBPController.default.clientActionProxies.createOrUpdateUserWTF$Action = function (sourceIn) {
sourceIn = (sourceIn === undefined) ? new WTF_MBPModel.Local_USER_WTFRecord() : sourceIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.createOrUpdateUserWTF$Action.bind(controller, sourceIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$CreateUserWTF_UserNOSInfo", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_USER_NOS_INFORecord", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.createUserWTF_UserNOSInfo$Action = function (local_UserInfoIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.CreateUserWTF_UserNOSInfo$vars"))());
vars.value.local_UserInfoInLocal = local_UserInfoIn.clone();
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var createLocal_USER_NOS_INFOVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.CreateUserWTF_UserNOSInfo$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: DeleteAllLocal_USER_NOS_INFO
return WTF_MBPModel.entities.Local_USER_NOS_INFO.deleteAll(callContext).then(function () {
// Execute Action: CreateLocal_USER_NOS_INFO
return WTF_MBPModel.entities.Local_USER_NOS_INFO.create(WTF_MBPModel.Local_USER_NOS_INFORecord.fromStructure(vars.value.local_UserInfoInLocal), callContext).then(function (value) {
createLocal_USER_NOS_INFOVar.value = value;
});
}).then(function () {
// Local_UserInfoId = CreateLocal_USER_NOS_INFO.Id
outVars.value.local_UserInfoIdOut = createLocal_USER_NOS_INFOVar.value.idOut;
// Success = True
outVars.value.successOut = true;
});
}).catch(function (ex) {
OS.Logger.trace("UserWTF.CreateUserWTF_UserNOSInfo", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// SetOutput
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.CreateUserWTF_UserNOSInfo$vars", [{
name: "Local_UserInfo",
attrName: "local_UserInfoInLocal",
mandatory: true,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.Local_USER_NOS_INFORec();
},
complexType: WTF_MBPModel.Local_USER_NOS_INFORec
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.CreateUserWTF_UserNOSInfo$outVars", [{
name: "Local_UserInfoId",
attrName: "local_UserInfoIdOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.createUserWTF_UserNOSInfo$Action = function (local_UserInfoIn) {
local_UserInfoIn = (local_UserInfoIn === undefined) ? new WTF_MBPModel.Local_USER_NOS_INFORec() : local_UserInfoIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.createUserWTF_UserNOSInfo$Action.bind(controller, local_UserInfoIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Local_UserInfoId: actionResults.local_UserInfoIdOut,
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$CreatOrUpdate_AccessTokenInfo", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORecord", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORecordList", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.creatOrUpdate_AccessTokenInfo$Action = function (refresh_tokenIn, access_tokenIn, isUserRegisteredIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SessionUserNOSToken.CreatOrUpdate_AccessTokenInfo$vars"))());
vars.value.refresh_tokenInLocal = refresh_tokenIn;
vars.value.access_tokenInLocal = access_tokenIn;
vars.value.isUserRegisteredInLocal = isUserRegisteredIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var createOrUpdateLocal_ACCESS_TOKEN_INFOVar = new OS.DataTypes.VariableHolder();
var getLocalACCESSTOKENINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SessionUserNOSToken.CreatOrUpdate_AccessTokenInfo$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalACCESSTOKENINFOES
var getLocalACCESSTOKENINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_ACCESS_TOKEN_INFO\".\"Id\" o0, \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" o1, \"ENLocal_ACCESS_TOKEN_INFO\".\"Access_token\" o2, \"ENLocal_ACCESS_TOKEN_INFO\".\"IsUserRegistered\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ACCESS_TOKEN_INFO\" \"ENLocal_ACCESS_TOKEN_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ACCESS_TOKEN_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalACCESSTOKENINFOESVar.value;
});
};
return getLocalACCESSTOKENINFOESAggr().then(function () {
// GetLocalACCESSTOKENINFOES.List.Current.Local_ACCESS_TOKEN_INFO.Refresh_token = Refresh_token
getLocalACCESSTOKENINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr = vars.value.refresh_tokenInLocal;
// GetLocalACCESSTOKENINFOES.List.Current.Local_ACCESS_TOKEN_INFO.Access_token = Access_token
getLocalACCESSTOKENINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.access_tokenAttr = vars.value.access_tokenInLocal;
// GetLocalACCESSTOKENINFOES.List.Current.Local_ACCESS_TOKEN_INFO.IsUserRegistered = IsUserRegistered
getLocalACCESSTOKENINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.isUserRegisteredAttr = vars.value.isUserRegisteredInLocal;
// Execute Action: CreateOrUpdateLocal_ACCESS_TOKEN_INFO
return WTF_MBPModel.entities.Local_ACCESS_TOKEN_INFO.createOrUpdate(getLocalACCESSTOKENINFOESVar.value.listOut.getCurrent(callContext.iterationContext), callContext).then(function (value) {
createOrUpdateLocal_ACCESS_TOKEN_INFOVar.value = value;
});
}).then(function () {
// Success = True
outVars.value.successOut = true;
// Local_AccessTokenInfoId = CreateOrUpdateLocal_ACCESS_TOKEN_INFO.Id
outVars.value.local_AccessTokenInfoIdOut = createOrUpdateLocal_ACCESS_TOKEN_INFOVar.value.idOut;
});
}).catch(function (ex) {
OS.Logger.trace("SessionUserNOSToken.CreatOrUpdate_AccessTokenInfo", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// SetOutput
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SessionUserNOSToken.CreatOrUpdate_AccessTokenInfo$vars", [{
name: "Refresh_token",
attrName: "refresh_tokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Access_token",
attrName: "access_tokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "IsUserRegistered",
attrName: "isUserRegisteredInLocal",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SessionUserNOSToken.CreatOrUpdate_AccessTokenInfo$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Local_AccessTokenInfoId",
attrName: "local_AccessTokenInfoIdOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.clientActionProxies.creatOrUpdate_AccessTokenInfo$Action = function (refresh_tokenIn, access_tokenIn, isUserRegisteredIn) {
refresh_tokenIn = (refresh_tokenIn === undefined) ? "" : refresh_tokenIn;
access_tokenIn = (access_tokenIn === undefined) ? "" : access_tokenIn;
isUserRegisteredIn = (isUserRegisteredIn === undefined) ? true : isUserRegisteredIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.creatOrUpdate_AccessTokenInfo$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refresh_tokenIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(access_tokenIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(isUserRegisteredIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Local_AccessTokenInfoId: actionResults.local_AccessTokenInfoIdOut
};
});
};
});

define("WTF_MBP.controller$Delete_AccessTokenInfo", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.delete_AccessTokenInfo$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SessionUserNOSToken.Delete_AccessTokenInfo$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: DeleteAllLocal_ACCESS_TOKEN_INFO
return WTF_MBPModel.entities.Local_ACCESS_TOKEN_INFO.deleteAll(callContext);
}).catch(function (ex) {
OS.Logger.trace("SessionUserNOSToken.Delete_AccessTokenInfo", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// SetOutput
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SessionUserNOSToken.Delete_AccessTokenInfo$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.delete_AccessTokenInfo$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.delete_AccessTokenInfo$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$DeleteAllLocal_LOCALDYNAMICLINK", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_TEMPDYNAMICLINKRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.deleteAllLocal_LOCALDYNAMICLINK$Action = function (callContext) {
callContext = controller.callContext(callContext);
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: DeleteAllLocal_TEMPDYNAMICLINK
return WTF_MBPModel.entities.Local_TEMPDYNAMICLINK.deleteAll(callContext);
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.clientActionProxies.deleteAllLocal_LOCALDYNAMICLINK$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.deleteAllLocal_LOCALDYNAMICLINK$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$DeleteAllLocal_LOCALTEMPDEEPLINK", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_TEMPDEEPLINKRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.deleteAllLocal_LOCALTEMPDEEPLINK$Action = function (callContext) {
callContext = controller.callContext(callContext);
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: DeleteAllLocal_TEMPDEEPLINK
return WTF_MBPModel.entities.Local_TEMPDEEPLINK.deleteAll(callContext);
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.clientActionProxies.deleteAllLocal_LOCALTEMPDEEPLINK$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.deleteAllLocal_LOCALTEMPDEEPLINK$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$DeleteAllLocal_SessionTemp", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_SESSION_TEMP_TABLERec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.deleteAllLocal_SessionTemp$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: DeleteAllLocal_SESSION_TEMP_TABLE
return WTF_MBPModel.entities.Local_SESSION_TEMP_TABLE.deleteAll(callContext);
}).catch(function (ex) {
OS.Logger.trace("SessionUserNOSToken.DeleteAllLocal_SessionTemp", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.clientActionProxies.deleteAllLocal_SessionTemp$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.deleteAllLocal_SessionTemp$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$FB_AddTraceAttribute", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller", "WTF_MBP.controller$FB_CheckMinVersion", "CommonPlugin.model$ErrorRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "WTF_MBP.referencesHealth$NewFirebaseMobilePlugin_WTF", "WTF_MBP.controller$FB_AddTraceAttribute"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginModel, NewFirebaseMobilePlugin_WTFController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.fB_AddTraceAttribute$Action = function (traceNameIn, attributeIn, valueIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_AddTraceAttribute$vars"))());
vars.value.traceNameInLocal = traceNameIn;
vars.value.attributeInLocal = attributeIn;
vars.value.valueInLocal = valueIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var fB_CheckMinVersionVar = new OS.DataTypes.VariableHolder();
var checkFirebasePluginVar = new OS.DataTypes.VariableHolder();
var addTraceAttributeVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_AddTraceAttribute$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebasePlugin
checkFirebasePluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebasePluginVar.value.isAvailableOut)) {
// Execute Action: FB_CheckMinVersion
return WTF_MBPController.default.fB_CheckMinVersion$Action(callContext).then(function (value) {
fB_CheckMinVersionVar.value = value;
}).then(function () {
// New Version Available?
return OS.Flow.executeSequence(function () {
if((fB_CheckMinVersionVar.value.successOut)) {
// Execute Action: AddTraceAttribute
return WTF_MBPController.default.fB_AddTraceAttribute$Action(vars.value.traceNameInLocal, vars.value.attributeInLocal, vars.value.valueInLocal, callContext).then(function (value) {
addTraceAttributeVar.value = value;
}).then(function () {
// Output
// Success = AddTraceAttribute.Success
outVars.value.successOut = addTraceAttributeVar.value.successOut;
// ErrorMessage = AddTraceAttribute.ErrorMessage
outVars.value.errorMessageOut = addTraceAttributeVar.value.errorMessageOut;
});
} else {
// Execute Action: LogMessage5
OS.SystemActions.logMessage("The current version dosen\'t allow to use function SetCrashLytics event!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "The current version dosen't allow to use function SetCrashLytics event!"
outVars.value.errorMessageOut = "The current version dosen\'t allow to use function SetCrashLytics event!";
}

});
});
} else {
// Execute Action: LogMessage4
OS.SystemActions.logMessage("FirebaseMobile_v2 is not defined!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "FirebaseMobile_v2 is not defined!"
outVars.value.errorMessageOut = "FirebaseMobile_v2 is not defined!";
}

});
}).catch(function (ex) {
OS.Logger.trace("FirebaseMobile_v2.FB_AddTraceAttribute", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = AllExceptions.ExceptionMessage
outVars.value.errorMessageOut = allExceptionsVar.value.exceptionMessageAttr;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_AddTraceAttribute$vars", [{
name: "TraceName",
attrName: "traceNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Attribute",
attrName: "attributeInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Value",
attrName: "valueInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_AddTraceAttribute$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.fB_AddTraceAttribute$Action = function (traceNameIn, attributeIn, valueIn) {
traceNameIn = (traceNameIn === undefined) ? "" : traceNameIn;
attributeIn = (attributeIn === undefined) ? "" : attributeIn;
valueIn = (valueIn === undefined) ? "" : valueIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.fB_AddTraceAttribute$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(traceNameIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(attributeIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(valueIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.errorMessageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$FB_CheckMinVersion", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "MobileUtilities.controller", "CommonPlugin.model", "BuildInfoPlugin.controller", "MobileUtilities.controller$String_Split", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$MobileUtilities", "CommonPlugin.model$ErrorRec", "WTF_MBP.referencesHealth$CommonPlugin", "BuildInfoPlugin.controller$GetBuildInfo", "WTF_MBP.referencesHealth$BuildInfoPlugin", "WTF_MBP.controller$GetConfigValueAsText_MBP", "BuildInfoPlugin.controller$CheckBuildInfoPlugin"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, MobileUtilitiesController, CommonPluginModel, BuildInfoPluginController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.fB_CheckMinVersion$Action = function (callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_CheckMinVersion$vars"))());
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var string_Split_BuildVersionVar = new OS.DataTypes.VariableHolder();
var getBuildInfoVar = new OS.DataTypes.VariableHolder();
var getLocalConfigByKeyVar = new OS.DataTypes.VariableHolder();
var checkBuildInfoPluginVar = new OS.DataTypes.VariableHolder();
var string_Split_Min_VersionVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_CheckMinVersion$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetLocalConfigByKey
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("LOCAL_MIN_VERSION_FIREBASE_PLUGIN", callContext).then(function (value) {
getLocalConfigByKeyVar.value = value;
}).then(function () {
// IsEmpty?
if(((getLocalConfigByKeyVar.value.valueOut === ""))) {
// Execute Action: LogMessage
OS.SystemActions.logMessage("Key: LOCAL_MIN_VERSION_FIREBASE_PLUGIN Not found!", "FirebaseMobile", callContext);
// Set Output
// Success = False
outVars.value.successOut = false;
} else {
// Execute Action: CheckBuildInfoPlugin
checkBuildInfoPluginVar.value = BuildInfoPluginController.default.checkBuildInfoPlugin$Action(callContext);

if((checkBuildInfoPluginVar.value.isAvailableOut)) {
// Execute Action: GetBuildInfo
getBuildInfoVar.value = BuildInfoPluginController.default.getBuildInfo$Action(callContext);

// Execute Action: String_Split_BuildVersion
string_Split_BuildVersionVar.value = MobileUtilitiesController.default.string_Split$Action(getBuildInfoVar.value.versionOut, ".", callContext);

// Execute Action: String_Split_Min_Version
string_Split_Min_VersionVar.value = MobileUtilitiesController.default.string_Split$Action(getLocalConfigByKeyVar.value.valueOut, ".", callContext);

// VersionAvailable = TextToInteger >= TextToInteger and TextToInteger >= TextToInteger and TextToInteger >= TextToInteger
vars.value.versionAvailableVar = (((OS.BuiltinFunctions.textToInteger(string_Split_BuildVersionVar.value.subStringsOut.getItem(0)) >= OS.BuiltinFunctions.textToInteger(string_Split_Min_VersionVar.value.subStringsOut.getItem(0))) && (OS.BuiltinFunctions.textToInteger(string_Split_BuildVersionVar.value.subStringsOut.getItem(1)) >= OS.BuiltinFunctions.textToInteger(string_Split_Min_VersionVar.value.subStringsOut.getItem(1)))) && (OS.BuiltinFunctions.textToInteger(string_Split_BuildVersionVar.value.subStringsOut.getItem(2)) >= OS.BuiltinFunctions.textToInteger(string_Split_Min_VersionVar.value.subStringsOut.getItem(2))));
// Version Available?
if((vars.value.versionAvailableVar)) {
// Set Output
// Success = True
outVars.value.successOut = true;
// Execute Action: LogMessage4
OS.SystemActions.logMessage((("This version " + getBuildInfoVar.value.versionOut) + " is able to use FirebaseMobile_v2 PLugin"), "FirebaseMobile", callContext);
} else {
// Execute Action: LogMessage3
OS.SystemActions.logMessage((("This version " + getBuildInfoVar.value.versionOut) + " isn\'t able to use FirebaseMobile_v2 PLugin"), "FirebaseMobile", callContext);
// Set Output
// Success = False
outVars.value.successOut = false;
}

} else {
// Execute Action: LogMessage2
OS.SystemActions.logMessage("CheckBuildInfoPluing is not define!", "FirebaseMobile", callContext);
// Set Output
// Success = False
outVars.value.successOut = false;
}

}

});
}).catch(function (ex) {
OS.Logger.trace("FirebaseMobile_v2.FB_CheckMinVersion", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_CheckMinVersion$vars", [{
name: "VersionAvailable",
attrName: "versionAvailableVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_CheckMinVersion$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.fB_CheckMinVersion$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.fB_CheckMinVersion$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$FB_LogError", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model$ErrorRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$LogError", "WTF_MBP.referencesHealth$NewFirebaseMobilePlugin_WTF", "WTF_MBP.controller$FB_CheckMinVersion", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginModel, NewFirebaseMobilePlugin_WTFController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.fB_LogError$Action = function (messageIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_LogError$vars"))());
vars.value.messageInLocal = messageIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var logErrorVar = new OS.DataTypes.VariableHolder();
var fB_CheckMinVersionVar = new OS.DataTypes.VariableHolder();
var checkFirebasePluginVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_LogError$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebasePlugin
checkFirebasePluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebasePluginVar.value.isAvailableOut)) {
// Execute Action: FB_CheckMinVersion
return WTF_MBPController.default.fB_CheckMinVersion$Action(callContext).then(function (value) {
fB_CheckMinVersionVar.value = value;
}).then(function () {
// New Version Available?
return OS.Flow.executeSequence(function () {
if((fB_CheckMinVersionVar.value.successOut)) {
// Execute Action: LogError
return NewFirebaseMobilePlugin_WTFController.default.logError$Action(vars.value.messageInLocal, callContext).then(function (value) {
logErrorVar.value = value;
}).then(function () {
// Success = LogError.Success
outVars.value.successOut = logErrorVar.value.successOut;
// ErrorMessage = LogError.Error.ErrorMessage
outVars.value.errorMessageOut = logErrorVar.value.errorOut.errorMessageAttr;
// Execute Action: LogMessage5
OS.SystemActions.logMessage("LogError Success!", "FirebaseMobile", callContext);
});
} else {
// Execute Action: LogMessage6
OS.SystemActions.logMessage("The current version dosen\'t allow to use function LogError event!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "The current version dosen't allow to use function LogError event!"
outVars.value.errorMessageOut = "The current version dosen\'t allow to use function LogError event!";
}

});
});
} else {
// Execute Action: LogMessage4
OS.SystemActions.logMessage("FirebaseMobile_v2 is not defined!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "FirebaseMobile_v2 is not defined!"
outVars.value.errorMessageOut = "FirebaseMobile_v2 is not defined!";
}

});
}).catch(function (ex) {
OS.Logger.trace("FirebaseMobile_v2.FB_LogError", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = AllExceptions.ExceptionMessage
outVars.value.errorMessageOut = allExceptionsVar.value.exceptionMessageAttr;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_LogError$vars", [{
name: "Message",
attrName: "messageInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_LogError$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.fB_LogError$Action = function (messageIn) {
messageIn = (messageIn === undefined) ? "" : messageIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.fB_LogError$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(messageIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.errorMessageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$FB_LogEvent", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model$ErrorRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "WTF_MBP.referencesHealth$NewFirebaseMobilePlugin_WTF", "NewFirebaseMobilePlugin_WTF.controller$LogEvent"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginModel, NewFirebaseMobilePlugin_WTFController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.fB_LogEvent$Action = function (eventNameIn, parameter1_KeyIn, parameter1_ValueIn, parameter2_KeyIn, parameter2_ValueIn, parameter3_KeyIn, parameter3_ValueIn, parameter4_KeyIn, parameter4_ValueIn, parameter5_KeyIn, parameter5_ValueIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_LogEvent$vars"))());
vars.value.eventNameInLocal = eventNameIn;
vars.value.parameter1_KeyInLocal = parameter1_KeyIn;
vars.value.parameter1_ValueInLocal = parameter1_ValueIn;
vars.value.parameter2_KeyInLocal = parameter2_KeyIn;
vars.value.parameter2_ValueInLocal = parameter2_ValueIn;
vars.value.parameter3_KeyInLocal = parameter3_KeyIn;
vars.value.parameter3_ValueInLocal = parameter3_ValueIn;
vars.value.parameter4_KeyInLocal = parameter4_KeyIn;
vars.value.parameter4_ValueInLocal = parameter4_ValueIn;
vars.value.parameter5_KeyInLocal = parameter5_KeyIn;
vars.value.parameter5_ValueInLocal = parameter5_ValueIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var checkFirebasePluginVar = new OS.DataTypes.VariableHolder();
var logEventVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_LogEvent$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebasePlugin
checkFirebasePluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebasePluginVar.value.isAvailableOut)) {
// Execute Action: LogEvent
return NewFirebaseMobilePlugin_WTFController.default.logEvent$Action(vars.value.eventNameInLocal, vars.value.parameter1_KeyInLocal, vars.value.parameter1_ValueInLocal, vars.value.parameter2_KeyInLocal, vars.value.parameter2_ValueInLocal, vars.value.parameter3_KeyInLocal, vars.value.parameter3_ValueInLocal, vars.value.parameter4_KeyInLocal, vars.value.parameter4_ValueInLocal, vars.value.parameter5_KeyInLocal, vars.value.parameter5_ValueInLocal, callContext).then(function (value) {
logEventVar.value = value;
}).then(function () {
// Set output
// Success = LogEvent.Success
outVars.value.successOut = logEventVar.value.successOut;
// ErrorMessage = LogEvent.Error.ErrorMessage
outVars.value.errorMessageOut = logEventVar.value.errorOut.errorMessageAttr;
// Execute Action: LogMessage5
OS.SystemActions.logMessage("LogEvent Success!", "FirebaseMobile", callContext);
});
} else {
// Execute Action: LogMessage4
OS.SystemActions.logMessage("FirebaseMobile_v2 is not defined!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "FirebaseMobile_v2 is not defined!"
outVars.value.errorMessageOut = "FirebaseMobile_v2 is not defined!";
}

});
}).catch(function (ex) {
OS.Logger.trace("FirebaseMobile_v2.FB_LogEvent", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = AllExceptions.ExceptionMessage
outVars.value.errorMessageOut = allExceptionsVar.value.exceptionMessageAttr;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_LogEvent$vars", [{
name: "EventName",
attrName: "eventNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter1_Key",
attrName: "parameter1_KeyInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter1_Value",
attrName: "parameter1_ValueInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter2_Key",
attrName: "parameter2_KeyInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter2_Value",
attrName: "parameter2_ValueInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter3_Key",
attrName: "parameter3_KeyInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter3_Value",
attrName: "parameter3_ValueInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter4_Key",
attrName: "parameter4_KeyInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter4_Value",
attrName: "parameter4_ValueInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter5_Key",
attrName: "parameter5_KeyInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameter5_Value",
attrName: "parameter5_ValueInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_LogEvent$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.fB_LogEvent$Action = function (eventNameIn, parameter1_KeyIn, parameter1_ValueIn, parameter2_KeyIn, parameter2_ValueIn, parameter3_KeyIn, parameter3_ValueIn, parameter4_KeyIn, parameter4_ValueIn, parameter5_KeyIn, parameter5_ValueIn) {
eventNameIn = (eventNameIn === undefined) ? "" : eventNameIn;
parameter1_KeyIn = (parameter1_KeyIn === undefined) ? "" : parameter1_KeyIn;
parameter1_ValueIn = (parameter1_ValueIn === undefined) ? "" : parameter1_ValueIn;
parameter2_KeyIn = (parameter2_KeyIn === undefined) ? "" : parameter2_KeyIn;
parameter2_ValueIn = (parameter2_ValueIn === undefined) ? "" : parameter2_ValueIn;
parameter3_KeyIn = (parameter3_KeyIn === undefined) ? "" : parameter3_KeyIn;
parameter3_ValueIn = (parameter3_ValueIn === undefined) ? "" : parameter3_ValueIn;
parameter4_KeyIn = (parameter4_KeyIn === undefined) ? "" : parameter4_KeyIn;
parameter4_ValueIn = (parameter4_ValueIn === undefined) ? "" : parameter4_ValueIn;
parameter5_KeyIn = (parameter5_KeyIn === undefined) ? "" : parameter5_KeyIn;
parameter5_ValueIn = (parameter5_ValueIn === undefined) ? "" : parameter5_ValueIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.fB_LogEvent$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(eventNameIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter1_KeyIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter1_ValueIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter2_KeyIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter2_ValueIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter3_KeyIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter3_ValueIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter4_KeyIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter4_ValueIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter5_KeyIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(parameter5_ValueIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.errorMessageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$FB_SetAnalyticsCollectionEnabled", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller", "WTF_MBP.controller$FB_CheckMinVersion", "CommonPlugin.model$ErrorRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "WTF_MBP.referencesHealth$NewFirebaseMobilePlugin_WTF", "NewFirebaseMobilePlugin_WTF.controller$SetAnalyticsCollectionEnabled"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginModel, NewFirebaseMobilePlugin_WTFController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.fB_SetAnalyticsCollectionEnabled$Action = function (setEnabledIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetAnalyticsCollectionEnabled$vars"))());
vars.value.setEnabledInLocal = setEnabledIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var fB_CheckMinVersionVar = new OS.DataTypes.VariableHolder();
var checkFirebasePluginVar = new OS.DataTypes.VariableHolder();
var setAnalyticsCollectionEnabledVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetAnalyticsCollectionEnabled$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebasePlugin
checkFirebasePluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebasePluginVar.value.isAvailableOut)) {
// Execute Action: FB_CheckMinVersion
return WTF_MBPController.default.fB_CheckMinVersion$Action(callContext).then(function (value) {
fB_CheckMinVersionVar.value = value;
}).then(function () {
// New Version Available?
return OS.Flow.executeSequence(function () {
if((fB_CheckMinVersionVar.value.successOut)) {
// Execute Action: SetAnalyticsCollectionEnabled
return NewFirebaseMobilePlugin_WTFController.default.setAnalyticsCollectionEnabled$Action(vars.value.setEnabledInLocal, callContext).then(function (value) {
setAnalyticsCollectionEnabledVar.value = value;
}).then(function () {
// Output
// Success = SetAnalyticsCollectionEnabled.Success
outVars.value.successOut = setAnalyticsCollectionEnabledVar.value.successOut;
// ErrorMessage = SetAnalyticsCollectionEnabled.Error.ErrorMessage
outVars.value.errorMessageOut = setAnalyticsCollectionEnabledVar.value.errorOut.errorMessageAttr;
});
} else {
// Execute Action: LogMessage5
OS.SystemActions.logMessage("The current version dosen\'t allow to use function SetCrashLytics event!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "The current version dosen't allow to use function SetCrashLytics event!"
outVars.value.errorMessageOut = "The current version dosen\'t allow to use function SetCrashLytics event!";
}

});
});
} else {
// Execute Action: LogMessage4
OS.SystemActions.logMessage("FirebaseMobile_v2 is not defined!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "FirebaseMobile_v2 is not defined!"
outVars.value.errorMessageOut = "FirebaseMobile_v2 is not defined!";
}

});
}).catch(function (ex) {
OS.Logger.trace("FirebaseMobile_v2.FB_SetAnalyticsCollectionEnabled", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
// ErrorMessage = AllExceptions.ExceptionMessage
outVars.value.errorMessageOut = allExceptionsVar.value.exceptionMessageAttr;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetAnalyticsCollectionEnabled$vars", [{
name: "SetEnabled",
attrName: "setEnabledInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetAnalyticsCollectionEnabled$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.fB_SetAnalyticsCollectionEnabled$Action = function (setEnabledIn) {
setEnabledIn = (setEnabledIn === undefined) ? false : setEnabledIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.fB_SetAnalyticsCollectionEnabled$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(setEnabledIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.errorMessageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$FB_SetCrashlytics", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller", "WTF_MBP.controller$FB_CheckMinVersion", "CommonPlugin.model$ErrorRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "WTF_MBP.referencesHealth$NewFirebaseMobilePlugin_WTF", "NewFirebaseMobilePlugin_WTF.controller$SetCrashlyticsUserId"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginModel, NewFirebaseMobilePlugin_WTFController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.fB_SetCrashlytics$Action = function (userIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetCrashlytics$vars"))());
vars.value.userIdInLocal = userIdIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var fB_CheckMinVersionVar = new OS.DataTypes.VariableHolder();
var checkFirebasePluginVar = new OS.DataTypes.VariableHolder();
var setCrashlyticsUserIdVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetCrashlytics$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebasePlugin
checkFirebasePluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebasePluginVar.value.isAvailableOut)) {
// Execute Action: FB_CheckMinVersion
return WTF_MBPController.default.fB_CheckMinVersion$Action(callContext).then(function (value) {
fB_CheckMinVersionVar.value = value;
}).then(function () {
// New Version Available?
return OS.Flow.executeSequence(function () {
if((fB_CheckMinVersionVar.value.successOut)) {
// Execute Action: SetCrashlyticsUserId
return NewFirebaseMobilePlugin_WTFController.default.setCrashlyticsUserId$Action(vars.value.userIdInLocal, callContext).then(function (value) {
setCrashlyticsUserIdVar.value = value;
}).then(function () {
// Output
// Success = SetCrashlyticsUserId.Success
outVars.value.successOut = setCrashlyticsUserIdVar.value.successOut;
// ErrorMessage = SetCrashlyticsUserId.Error.ErrorMessage
outVars.value.errorMessageOut = setCrashlyticsUserIdVar.value.errorOut.errorMessageAttr;
});
} else {
// Execute Action: LogMessage5
OS.SystemActions.logMessage("The current version dosen\'t allow to use function SetCrashLytics event!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "The current version dosen't allow to use function SetCrashLytics event!"
outVars.value.errorMessageOut = "The current version dosen\'t allow to use function SetCrashLytics event!";
}

});
});
} else {
// Execute Action: LogMessage4
OS.SystemActions.logMessage("FirebaseMobile_v2 is not defined!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "FirebaseMobile_v2 is not defined!"
outVars.value.errorMessageOut = "FirebaseMobile_v2 is not defined!";
}

});
}).catch(function (ex) {
OS.Logger.trace("FirebaseMobile_v2.FB_SetCrashlytics", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = AllExceptions.ExceptionMessage
outVars.value.errorMessageOut = allExceptionsVar.value.exceptionMessageAttr;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetCrashlytics$vars", [{
name: "UserId",
attrName: "userIdInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetCrashlytics$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.fB_SetCrashlytics$Action = function (userIdIn) {
userIdIn = (userIdIn === undefined) ? "" : userIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.fB_SetCrashlytics$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userIdIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.errorMessageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$FB_SetScreenName", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model$ErrorRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "WTF_MBP.referencesHealth$NewFirebaseMobilePlugin_WTF", "WTF_MBP.controller$FB_CheckMinVersion", "NewFirebaseMobilePlugin_WTF.controller$SetScreenName"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginModel, NewFirebaseMobilePlugin_WTFController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.fB_SetScreenName$Action = function (screenNameIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetScreenName$vars"))());
vars.value.screenNameInLocal = screenNameIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var checkFirebasePluginVar = new OS.DataTypes.VariableHolder();
var fB_CheckMinVersionVar = new OS.DataTypes.VariableHolder();
var setScreenNameVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetScreenName$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebasePlugin
checkFirebasePluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebasePluginVar.value.isAvailableOut)) {
// Execute Action: FB_CheckMinVersion
return WTF_MBPController.default.fB_CheckMinVersion$Action(callContext).then(function (value) {
fB_CheckMinVersionVar.value = value;
}).then(function () {
// New Version Available?
return OS.Flow.executeSequence(function () {
if((fB_CheckMinVersionVar.value.successOut)) {
// Execute Action: SetScreenName
return NewFirebaseMobilePlugin_WTFController.default.setScreenName$Action(vars.value.screenNameInLocal, callContext).then(function (value) {
setScreenNameVar.value = value;
}).then(function () {
// Output
// Success = Success
outVars.value.successOut = outVars.value.successOut;
// ErrorMessage = SetScreenName.Error.ErrorMessage
outVars.value.errorMessageOut = setScreenNameVar.value.errorOut.errorMessageAttr;
});
} else {
// Execute Action: LogMessage5
OS.SystemActions.logMessage("The current version dosen\'t allow to use function SetCrashLytics event!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "The current version dosen't allow to use function SetCrashLytics event!"
outVars.value.errorMessageOut = "The current version dosen\'t allow to use function SetCrashLytics event!";
}

});
});
} else {
// Execute Action: LogMessage4
OS.SystemActions.logMessage("FirebaseMobile_v2 is not defined!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "FirebaseMobile_v2 is not defined!"
outVars.value.errorMessageOut = "FirebaseMobile_v2 is not defined!";
}

});
}).catch(function (ex) {
OS.Logger.trace("FirebaseMobile_v2.FB_SetScreenName", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = AllExceptions.ExceptionMessage
outVars.value.errorMessageOut = allExceptionsVar.value.exceptionMessageAttr;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetScreenName$vars", [{
name: "ScreenName",
attrName: "screenNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetScreenName$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.fB_SetScreenName$Action = function (screenNameIn) {
screenNameIn = (screenNameIn === undefined) ? "" : screenNameIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.fB_SetScreenName$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(screenNameIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.errorMessageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$FB_SetUserID", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model$ErrorRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "WTF_MBP.referencesHealth$NewFirebaseMobilePlugin_WTF", "WTF_MBP.controller$FB_CheckMinVersion", "NewFirebaseMobilePlugin_WTF.controller$SetUserId"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginModel, NewFirebaseMobilePlugin_WTFController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.fB_SetUserID$Action = function (userIDIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetUserID$vars"))());
vars.value.userIDInLocal = userIDIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var checkFirebasePluginVar = new OS.DataTypes.VariableHolder();
var fB_CheckMinVersionVar = new OS.DataTypes.VariableHolder();
var setUserIdVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetUserID$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebasePlugin
checkFirebasePluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebasePluginVar.value.isAvailableOut)) {
// Execute Action: FB_CheckMinVersion
return WTF_MBPController.default.fB_CheckMinVersion$Action(callContext).then(function (value) {
fB_CheckMinVersionVar.value = value;
}).then(function () {
// New Version Available?
return OS.Flow.executeSequence(function () {
if((fB_CheckMinVersionVar.value.successOut)) {
// Execute Action: SetUserId
return NewFirebaseMobilePlugin_WTFController.default.setUserId$Action(vars.value.userIDInLocal, callContext).then(function (value) {
setUserIdVar.value = value;
}).then(function () {
// Output
// Success = Success
outVars.value.successOut = outVars.value.successOut;
// ErrorMessage = SetUserId.Error.ErrorMessage
outVars.value.errorMessageOut = setUserIdVar.value.errorOut.errorMessageAttr;
});
} else {
// Execute Action: LogMessage5
OS.SystemActions.logMessage("The current version dosen\'t allow to use function SetCrashLytics event!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "The current version dosen't allow to use function SetCrashLytics event!"
outVars.value.errorMessageOut = "The current version dosen\'t allow to use function SetCrashLytics event!";
}

});
});
} else {
// Execute Action: LogMessage4
OS.SystemActions.logMessage("FirebaseMobile_v2 is not defined!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "FirebaseMobile_v2 is not defined!"
outVars.value.errorMessageOut = "FirebaseMobile_v2 is not defined!";
}

});
}).catch(function (ex) {
OS.Logger.trace("FirebaseMobile_v2.FB_SetUserID", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = AllExceptions.ExceptionMessage
outVars.value.errorMessageOut = allExceptionsVar.value.exceptionMessageAttr;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetUserID$vars", [{
name: "UserID",
attrName: "userIDInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetUserID$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.fB_SetUserID$Action = function (userIDIn) {
userIDIn = (userIDIn === undefined) ? "" : userIDIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.fB_SetUserID$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userIDIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.errorMessageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$FB_SetUserProperty", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller", "WTF_MBP.controller$FB_CheckMinVersion", "CommonPlugin.model$ErrorRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "WTF_MBP.referencesHealth$NewFirebaseMobilePlugin_WTF", "NewFirebaseMobilePlugin_WTF.controller$SetUserProperty"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginModel, NewFirebaseMobilePlugin_WTFController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.fB_SetUserProperty$Action = function (propertyNameIn, propertyValueIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetUserProperty$vars"))());
vars.value.propertyNameInLocal = propertyNameIn;
vars.value.propertyValueInLocal = propertyValueIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var fB_CheckMinVersionVar = new OS.DataTypes.VariableHolder();
var checkFirebasePluginVar = new OS.DataTypes.VariableHolder();
var setUserPropertyVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetUserProperty$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebasePlugin
checkFirebasePluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebasePluginVar.value.isAvailableOut)) {
// Execute Action: FB_CheckMinVersion
return WTF_MBPController.default.fB_CheckMinVersion$Action(callContext).then(function (value) {
fB_CheckMinVersionVar.value = value;
}).then(function () {
// New Version Available?
return OS.Flow.executeSequence(function () {
if((fB_CheckMinVersionVar.value.successOut)) {
// Execute Action: SetUserProperty
return NewFirebaseMobilePlugin_WTFController.default.setUserProperty$Action(vars.value.propertyNameInLocal, vars.value.propertyValueInLocal, callContext).then(function (value) {
setUserPropertyVar.value = value;
}).then(function () {
// Output
// Success = Success
outVars.value.successOut = outVars.value.successOut;
// ErrorMessage = SetUserProperty.Error.ErrorMessage
outVars.value.errorMessageOut = setUserPropertyVar.value.errorOut.errorMessageAttr;
});
} else {
// Execute Action: LogMessage5
OS.SystemActions.logMessage("The current version dosen\'t allow to use function SetCrashLytics event!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "The current version dosen't allow to use function SetCrashLytics event!"
outVars.value.errorMessageOut = "The current version dosen\'t allow to use function SetCrashLytics event!";
}

});
});
} else {
// Execute Action: LogMessage4
OS.SystemActions.logMessage("FirebaseMobile_v2 is not defined!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "FirebaseMobile_v2 is not defined!"
outVars.value.errorMessageOut = "FirebaseMobile_v2 is not defined!";
}

});
}).catch(function (ex) {
OS.Logger.trace("FirebaseMobile_v2.FB_SetUserProperty", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = AllExceptions.ExceptionMessage
outVars.value.errorMessageOut = allExceptionsVar.value.exceptionMessageAttr;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetUserProperty$vars", [{
name: "PropertyName",
attrName: "propertyNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "PropertyValue",
attrName: "propertyValueInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_SetUserProperty$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.fB_SetUserProperty$Action = function (propertyNameIn, propertyValueIn) {
propertyNameIn = (propertyNameIn === undefined) ? "" : propertyNameIn;
propertyValueIn = (propertyValueIn === undefined) ? "" : propertyValueIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.fB_SetUserProperty$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(propertyNameIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(propertyValueIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.errorMessageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$FB_StartTrace", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model$ErrorRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$StartTrace", "WTF_MBP.referencesHealth$NewFirebaseMobilePlugin_WTF", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginModel, NewFirebaseMobilePlugin_WTFController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.fB_StartTrace$Action = function (traceNameIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_StartTrace$vars"))());
vars.value.traceNameInLocal = traceNameIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var startTraceVar = new OS.DataTypes.VariableHolder();
var checkFirebasePluginVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_StartTrace$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebasePlugin
checkFirebasePluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebasePluginVar.value.isAvailableOut)) {
// Execute Action: StartTrace
return NewFirebaseMobilePlugin_WTFController.default.startTrace$Action(vars.value.traceNameInLocal, callContext).then(function (value) {
startTraceVar.value = value;
}).then(function () {
// Success = StartTrace.Success
outVars.value.successOut = startTraceVar.value.successOut;
// ErrorMessage = StartTrace.Error.ErrorMessage
outVars.value.errorMessageOut = startTraceVar.value.errorOut.errorMessageAttr;
// Execute Action: LogMessage5
OS.SystemActions.logMessage("StartTrace Success!", "FirebaseMobile", callContext);
});
} else {
// Execute Action: LogMessage4
OS.SystemActions.logMessage("FirebaseMobile_v2 is not defined!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "FirebaseMobile_v2 is not defined!"
outVars.value.errorMessageOut = "FirebaseMobile_v2 is not defined!";
}

});
}).catch(function (ex) {
OS.Logger.trace("FirebaseMobile_v2.FB_StartTrace", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = AllExceptions.ExceptionMessage
outVars.value.errorMessageOut = allExceptionsVar.value.exceptionMessageAttr;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_StartTrace$vars", [{
name: "TraceName",
attrName: "traceNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_StartTrace$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.fB_StartTrace$Action = function (traceNameIn) {
traceNameIn = (traceNameIn === undefined) ? "" : traceNameIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.fB_StartTrace$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(traceNameIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.errorMessageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$FB_StopTrace", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.model", "NewFirebaseMobilePlugin_WTF.controller", "CommonPlugin.model$ErrorRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "NewFirebaseMobilePlugin_WTF.controller$CheckFirebase_Plugin", "WTF_MBP.referencesHealth$NewFirebaseMobilePlugin_WTF", "NewFirebaseMobilePlugin_WTF.controller$StopTrace"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginModel, NewFirebaseMobilePlugin_WTFController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.fB_StopTrace$Action = function (traceNameIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_StopTrace$vars"))());
vars.value.traceNameInLocal = traceNameIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var checkFirebasePluginVar = new OS.DataTypes.VariableHolder();
var stopTraceVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_StopTrace$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: CheckFirebasePlugin
checkFirebasePluginVar.value = NewFirebaseMobilePlugin_WTFController.default.checkFirebase_Plugin$Action(callContext);

return OS.Flow.executeSequence(function () {
if((checkFirebasePluginVar.value.isAvailableOut)) {
// Execute Action: StopTrace
return NewFirebaseMobilePlugin_WTFController.default.stopTrace$Action(vars.value.traceNameInLocal, callContext).then(function (value) {
stopTraceVar.value = value;
}).then(function () {
// Success = Success
outVars.value.successOut = outVars.value.successOut;
// ErrorMessage = StopTrace.Error.ErrorMessage
outVars.value.errorMessageOut = stopTraceVar.value.errorOut.errorMessageAttr;
// Execute Action: LogMessage5
OS.SystemActions.logMessage("StopTrace Success!", "FirebaseMobile", callContext);
});
} else {
// Execute Action: LogMessage4
OS.SystemActions.logMessage("FirebaseMobile_v2 is not defined!", "FirebaseMobile", callContext);
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = "FirebaseMobile_v2 is not defined!"
outVars.value.errorMessageOut = "FirebaseMobile_v2 is not defined!";
}

});
}).catch(function (ex) {
OS.Logger.trace("FirebaseMobile_v2.FB_StopTrace", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Output
// Success = False
outVars.value.successOut = false;
// ErrorMessage = AllExceptions.ExceptionMessage
outVars.value.errorMessageOut = allExceptionsVar.value.exceptionMessageAttr;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_StopTrace$vars", [{
name: "TraceName",
attrName: "traceNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FirebaseMobile_v2.FB_StopTrace$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.fB_StopTrace$Action = function (traceNameIn) {
traceNameIn = (traceNameIn === undefined) ? "" : traceNameIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.fB_StopTrace$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(traceNameIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
ErrorMessage: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.errorMessageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$FillUserWtfWalletItemAddress", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_BP.model$App_UserWtfPrizeAddressRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.FillUserWtfWalletItemAddress"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.fillUserWtfWalletItemAddress$Action = function (app_UserWtfPrizeAddressIn, itemIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Wallet.FillUserWtfWalletItemAddress$vars"))());
vars.value.app_UserWtfPrizeAddressInLocal = app_UserWtfPrizeAddressIn.clone();
vars.value.itemIdInLocal = itemIdIn;
var fillUserWtfWalletItemAddressVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Wallet.FillUserWtfWalletItemAddress$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: FillUserWtfWalletItemAddress
return controller.fillUserWtfWalletItemAddress$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, vars.value.app_UserWtfPrizeAddressInLocal, vars.value.itemIdInLocal, callContext).then(function (value) {
fillUserWtfWalletItemAddressVar.value = value;
});
}).then(function () {
// Success = FillUserWtfWalletItemAddress.Success
outVars.value.successOut = fillUserWtfWalletItemAddressVar.value.successOut;
// Message = FillUserWtfWalletItemAddress.Message
outVars.value.messageOut = fillUserWtfWalletItemAddressVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Wallet.FillUserWtfWalletItemAddress$vars", [{
name: "App_UserWtfPrizeAddress",
attrName: "app_UserWtfPrizeAddressInLocal",
mandatory: true,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_UserWtfPrizeAddressRec();
},
complexType: WTF_BPModel.App_UserWtfPrizeAddressRec
}, {
name: "ItemId",
attrName: "itemIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Wallet.FillUserWtfWalletItemAddress$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.fillUserWtfWalletItemAddress$Action = function (app_UserWtfPrizeAddressIn, itemIdIn) {
app_UserWtfPrizeAddressIn = (app_UserWtfPrizeAddressIn === undefined) ? new WTF_BPModel.App_UserWtfPrizeAddressRec() : app_UserWtfPrizeAddressIn;
itemIdIn = (itemIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : itemIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.fillUserWtfWalletItemAddress$Action.bind(controller, app_UserWtfPrizeAddressIn, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(itemIdIn, OS.Types.LongInteger)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$FilterListContacts", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_PhoneContactsList", "WTF_MBP.controller$ServerAction.FilterListContacts"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.filterListContacts$Action = function (userWtfIdIn, refreshTokenIn, app_PhoneContactsListIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FilterListContacts$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
vars.value.app_PhoneContactsListInLocal = app_PhoneContactsListIn.clone();
var filterListContactsVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.FilterListContacts$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: FilterListContacts
return controller.filterListContacts$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, vars.value.app_PhoneContactsListInLocal, callContext).then(function (value) {
filterListContactsVar.value = value;
}).then(function () {
// App_PhoneContactsFilter = FilterListContacts.App_PhoneContactsListFilter
outVars.value.app_PhoneContactsFilterOut = filterListContactsVar.value.app_PhoneContactsListFilterOut;
// Success = FilterListContacts.Success
outVars.value.successOut = filterListContactsVar.value.successOut;
// Message = FilterListContacts.Message
outVars.value.messageOut = filterListContactsVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FilterListContacts$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_PhoneContactsList",
attrName: "app_PhoneContactsListInLocal",
mandatory: true,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_PhoneContactsList();
},
complexType: WTF_MBPModel.App_PhoneContactsList
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.FilterListContacts$outVars", [{
name: "App_PhoneContactsFilter",
attrName: "app_PhoneContactsFilterOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_PhoneContactsList();
},
complexType: WTF_MBPModel.App_PhoneContactsList
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.filterListContacts$Action = function (userWtfIdIn, refreshTokenIn, app_PhoneContactsListIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
app_PhoneContactsListIn = (app_PhoneContactsListIn === undefined) ? new WTF_MBPModel.App_PhoneContactsList() : app_PhoneContactsListIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.filterListContacts$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text), app_PhoneContactsListIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
App_PhoneContactsFilter: actionResults.app_PhoneContactsFilterOut,
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$Get_ClientIdAndClientSecret", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$Get_OperatingSystem", "WTF_MBP.controller$GetConfigValueAsText_MBP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.get_ClientIdAndClientSecret$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var get_OperatingSystemVar = new OS.DataTypes.VariableHolder();
var getClientSecret_AndroidVar = new OS.DataTypes.VariableHolder();
var getClientIdIOSVar = new OS.DataTypes.VariableHolder();
var getClientIdAndroidVar = new OS.DataTypes.VariableHolder();
var getClientSecret_iOSVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Login.Get_ClientIdAndClientSecret$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: Get_OperatingSystem
get_OperatingSystemVar.value = WTF_MBPController.default.get_OperatingSystem$Action(callContext);

// Is IOS
return OS.Flow.executeSequence(function () {
if(((get_OperatingSystemVar.value.operatingSystemOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS))) {
// Execute Action: GetClientIdIOS
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("LoginNOS_CLIENTID_IOS", callContext).then(function (value) {
getClientIdIOSVar.value = value;
}).then(function () {
// Execute Action: GetClientSecret_iOS
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("LoginNOS_CLIENTSECRET_IOS", callContext).then(function (value) {
getClientSecret_iOSVar.value = value;
});
}).then(function () {
// ClientID
// ClientID = GetClientIdIOS.Value
outVars.value.clientIDOut = getClientIdIOSVar.value.valueOut;
// ClientSecret = GetClientSecret_iOS.Value
outVars.value.clientSecretOut = getClientSecret_iOSVar.value.valueOut;
});
} else {
// Execute Action: GetClientIdAndroid
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("LoginNOS_CLIENTID_ANDROID", callContext).then(function (value) {
getClientIdAndroidVar.value = value;
}).then(function () {
// Execute Action: GetClientSecret_Android
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("LoginNOS_CLIENTSECRET_ANDROID", callContext).then(function (value) {
getClientSecret_AndroidVar.value = value;
});
}).then(function () {
// ClientID
// ClientID = GetClientIdAndroid.Value
outVars.value.clientIDOut = getClientIdAndroidVar.value.valueOut;
// ClientSecret = GetClientSecret_Android.Value
outVars.value.clientSecretOut = getClientSecret_AndroidVar.value.valueOut;
});
}

});
}).catch(function (ex) {
OS.Logger.trace("Login.Get_ClientIdAndClientSecret", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Login.Get_ClientIdAndClientSecret$outVars", [{
name: "ClientID",
attrName: "clientIDOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ClientSecret",
attrName: "clientSecretOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.get_ClientIdAndClientSecret$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.get_ClientIdAndClientSecret$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
ClientID: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.clientIDOut, OS.Types.Text, true),
ClientSecret: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.clientSecretOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$Get_OperatingSystem", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.controller", "CommonPlugin.controller$IsCordovaDefined", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "CommonPlugin.controller$GetOperatingSystem"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.get_OperatingSystem$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var isCordovaDefinedVar = new OS.DataTypes.VariableHolder();
var getOperatingSystemVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Get_OperatingSystem$outVars"))());
try {// Execute Action: IsCordovaDefined
isCordovaDefinedVar.value = CommonPluginController.default.isCordovaDefined$Action(callContext);

if((isCordovaDefinedVar.value.isLoadedOut)) {
// Execute Action: GetOperatingSystem
getOperatingSystemVar.value = CommonPluginController.default.getOperatingSystem$Action(callContext);

// OperatingSystem = GetOperatingSystem.OperatingSystemsId
outVars.value.operatingSystemOut = getOperatingSystemVar.value.operatingSystemsIdOut;
}

} catch (ex) {
(function () {
OS.Logger.trace("Get_OperatingSystem.Get_OperatingSystem", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return outVars.value;

}

throw ex;
})();
}

return outVars.value;
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Get_OperatingSystem$outVars", [{
name: "OperatingSystem",
attrName: "operatingSystemOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.get_OperatingSystem$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.get_OperatingSystem$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
OperatingSystem: actionResults.operatingSystemOut
};
});
};
});

define("WTF_MBP.controller$GetAccessTokenCode", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.GetAccessTokenCode"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getAccessTokenCode$Action = function (codeIn, codeVerifierIn, callbackURLIn, deviceUIDIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SessionUserNOSToken.GetAccessTokenCode$vars"))());
vars.value.codeInLocal = codeIn;
vars.value.codeVerifierInLocal = codeVerifierIn;
vars.value.callbackURLInLocal = callbackURLIn;
vars.value.deviceUIDInLocal = deviceUIDIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getAccessTokenCodeVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SessionUserNOSToken.GetAccessTokenCode$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetAccessTokenCode
return controller.getAccessTokenCode$ServerAction(vars.value.codeInLocal, vars.value.codeVerifierInLocal, vars.value.callbackURLInLocal, vars.value.deviceUIDInLocal, callContext).then(function (value) {
getAccessTokenCodeVar.value = value;
}).then(function () {
// RefreshToken = GetAccessTokenCode.RefreshToken
outVars.value.refreshTokenOut = getAccessTokenCodeVar.value.refreshTokenOut;
// Success = GetAccessTokenCode.Success
outVars.value.successOut = getAccessTokenCodeVar.value.successOut;
// Message = GetAccessTokenCode.Message
outVars.value.messageOut = getAccessTokenCodeVar.value.messageOut;
});
}).catch(function (ex) {
OS.Logger.trace("SessionUserNOSToken.GetAccessTokenCode", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SessionUserNOSToken.GetAccessTokenCode$vars", [{
name: "Code",
attrName: "codeInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "CodeVerifier",
attrName: "codeVerifierInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "CallbackURL",
attrName: "callbackURLInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "DeviceUID",
attrName: "deviceUIDInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SessionUserNOSToken.GetAccessTokenCode$outVars", [{
name: "RefreshToken",
attrName: "refreshTokenOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.getAccessTokenCode$Action = function (codeIn, codeVerifierIn, callbackURLIn, deviceUIDIn) {
codeIn = (codeIn === undefined) ? "" : codeIn;
codeVerifierIn = (codeVerifierIn === undefined) ? "" : codeVerifierIn;
callbackURLIn = (callbackURLIn === undefined) ? "" : callbackURLIn;
deviceUIDIn = (deviceUIDIn === undefined) ? "" : deviceUIDIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getAccessTokenCode$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(codeIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(codeVerifierIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(callbackURLIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(deviceUIDIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.refreshTokenOut, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$GetActiveUserWTF", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORecordList", "WTF_MBP.model$Local_USER_WTFRecordList", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getActiveUserWTF$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getLocalACCESSTOKENINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList))());
var getLocalUSERWTFSVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_WTFRecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SessionUserNOSToken.GetActiveUserWTF$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalUSERWTFS
var getLocalUSERWTFSAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_WTFRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4";
} else {
selectSql += "\"ENLocal_USER_WTF\".\"Id\" o0, \"ENLocal_USER_WTF\".\"Msisdn\" o1, \"ENLocal_USER_WTF\".\"CodeMember\" o2, \"ENLocal_USER_WTF\".\"Tmcode_label\" o3, \"ENLocal_USER_WTF\".\"Is_MonthlyRenewal\" o4";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_WTF\" \"ENLocal_USER_WTF\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_WTFRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_WTFAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalUSERWTFSVar.value;
});
};
return getLocalUSERWTFSAggr().then(function () {
// Aggregate: GetLocalACCESSTOKENINFOES
var getLocalACCESSTOKENINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_ACCESS_TOKEN_INFO\".\"Id\" o0, \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" o1, \"ENLocal_ACCESS_TOKEN_INFO\".\"Access_token\" o2, \"ENLocal_ACCESS_TOKEN_INFO\".\"IsUserRegistered\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ACCESS_TOKEN_INFO\" \"ENLocal_ACCESS_TOKEN_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ACCESS_TOKEN_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalACCESSTOKENINFOESVar.value;
});
};
return getLocalACCESSTOKENINFOESAggr();
}).then(function () {
// UserWTFActiveNow = GetLocalUSERWTFS.List.Current.Local_USER_WTF
outVars.value.userWTFActiveNowOut = getLocalUSERWTFSVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_WTFAttr;
// RefreshToken = GetLocalACCESSTOKENINFOES.List.Current.Local_ACCESS_TOKEN_INFO.Refresh_token
outVars.value.refreshTokenOut = getLocalACCESSTOKENINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr;
});
}).catch(function (ex) {
OS.Logger.trace("SessionUserNOSToken.GetActiveUserWTF", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SessionUserNOSToken.GetActiveUserWTF$outVars", [{
name: "UserWTFActiveNow",
attrName: "userWTFActiveNowOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.Local_USER_WTFRec();
},
complexType: WTF_MBPModel.Local_USER_WTFRec
}, {
name: "RefreshToken",
attrName: "refreshTokenOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.getActiveUserWTF$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.getActiveUserWTF$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
UserWTFActiveNow: actionResults.userWTFActiveNowOut,
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.refreshTokenOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$GetAddOnsAndRefills", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$STR_ADDON_REFILLList", "WTF_MBP.controller$ServerAction.GetAddonsAndRefills_BP", "WTF_MBP.model$Local_ADDONS_REFILLSRecordList", "WTF_MBP.controller$CreateOrUpdateAllLocal_ADDONS_REFILLS_Logic", "WTF_MBP.controller$GetApplicationName_MBP", "WTF_MBP.model$STR_ADDON_REFILLRecordList", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_ADDONS_REFILLSRec", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORec", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getAddOnsAndRefills$Action = function (associationIdIn, serviceIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_Addons.GetAddOnsAndRefills$vars"))());
vars.value.associationIdInLocal = associationIdIn;
vars.value.serviceIdInLocal = serviceIdIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getAddonsAndRefills_BPVar = new OS.DataTypes.VariableHolder();
var createOrUpdateLocal_ADDONS_REFILLS_LogicVar = new OS.DataTypes.VariableHolder();
var getApplicationName_MBPVar = new OS.DataTypes.VariableHolder();
var getLocalRefillsByMsisdnVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ADDONS_REFILLSRecordList))());
var getLocalACCESSTOKENINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList))());
var getLocalUSERNOSINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
var getLocalAddonsByMsisdnVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ADDONS_REFILLSRecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_Addons.GetAddOnsAndRefills$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalACCESSTOKENINFOES
var getLocalACCESSTOKENINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_ACCESS_TOKEN_INFO\".\"Id\" o0, \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" o1, \"ENLocal_ACCESS_TOKEN_INFO\".\"Access_token\" o2, \"ENLocal_ACCESS_TOKEN_INFO\".\"IsUserRegistered\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ACCESS_TOKEN_INFO\" \"ENLocal_ACCESS_TOKEN_INFO\"";
orderBySql += " ORDER BY \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" ASC ";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ACCESS_TOKEN_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalACCESSTOKENINFOESVar.value;
});
};
return getLocalACCESSTOKENINFOESAggr().then(function () {
// Aggregate: GetLocalUSERNOSINFOES
var getLocalUSERNOSINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
orderBySql += " ORDER BY \"ENLocal_USER_NOS_INFO\".\"Name\" ASC ";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalUSERNOSINFOESVar.value;
});
};
return getLocalUSERNOSINFOESAggr();
}).then(function () {
// Aggregate: GetLocalAddonsByMsisdn
var getLocalAddonsByMsisdnAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ADDONS_REFILLSRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}

var qpstMsisdn = vars.value.serviceIdInLocal;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23";
} else {
selectSql += "\"ENLocal_ADDONS_REFILLS\".\"Id\" o0, \"ENLocal_ADDONS_REFILLS\".\"Id_Addons_Refills\" o1, \"ENLocal_ADDONS_REFILLS\".\"Icon\" o2, \"ENLocal_ADDONS_REFILLS\".\"Cost\" o3, \"ENLocal_ADDONS_REFILLS\".\"IsSubscribed\" o4, \"ENLocal_ADDONS_REFILLS\".\"StatusLabel\" o5, \"ENLocal_ADDONS_REFILLS\".\"CanSubscribe\" o6, \"ENLocal_ADDONS_REFILLS\".\"IsPending\" o7, \"ENLocal_ADDONS_REFILLS\".\"CanUnsubscribe\" o8, \"ENLocal_ADDONS_REFILLS\".\"ExpiryDate\" o9, \"ENLocal_ADDONS_REFILLS\".\"Description\" o10, \"ENLocal_ADDONS_REFILLS\".\"IsAvailable\" o11, \"ENLocal_ADDONS_REFILLS\".\"Msisdn\" o12, \"ENLocal_ADDONS_REFILLS\".\"CommercialDescription\" o13, \"ENLocal_ADDONS_REFILLS\".\"PackageGroup\" o14, \"ENLocal_ADDONS_REFILLS\".\"Type\" o15, \"ENLocal_ADDONS_REFILLS\".\"Category\" o16, \"ENLocal_ADDONS_REFILLS\".\"CategoryLabel\" o17, \"ENLocal_ADDONS_REFILLS\".\"CategoryDescription\" o18, \"ENLocal_ADDONS_REFILLS\".\"IsAddOn\" o19, \"ENLocal_ADDONS_REFILLS\".\"IsRefill\" o20, \"ENLocal_ADDONS_REFILLS\".\"SubscriptionStart\" o21, \"ENLocal_ADDONS_REFILLS\".\"Icons\" o22, \"ENLocal_ADDONS_REFILLS\".\"CacheExpirationDate\" o23";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ADDONS_REFILLS\" \"ENLocal_ADDONS_REFILLS\"";
fromAndWhereSql += " WHERE (\"ENLocal_ADDONS_REFILLS\".\"Msisdn\" = :qpstMsisdn) AND (\"ENLocal_ADDONS_REFILLS\".\"IsAddOn\" = 1)";
orderBySql += " ORDER BY \"ENLocal_ADDONS_REFILLS\".\"CacheExpirationDate\" ASC ";
argsList.add("qpstMsisdn", /*TEXT*/ 0, qpstMsisdn);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ADDONS_REFILLSRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ADDONS_REFILLSAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalAddonsByMsisdnVar.value;
});
};
return getLocalAddonsByMsisdnAggr();
}).then(function () {
// Aggregate: GetLocalRefillsByMsisdn
var getLocalRefillsByMsisdnAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ADDONS_REFILLSRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}

var qpstMsisdn = vars.value.serviceIdInLocal;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23";
} else {
selectSql += "\"ENLocal_ADDONS_REFILLS\".\"Id\" o0, \"ENLocal_ADDONS_REFILLS\".\"Id_Addons_Refills\" o1, \"ENLocal_ADDONS_REFILLS\".\"Icon\" o2, \"ENLocal_ADDONS_REFILLS\".\"Cost\" o3, \"ENLocal_ADDONS_REFILLS\".\"IsSubscribed\" o4, \"ENLocal_ADDONS_REFILLS\".\"StatusLabel\" o5, \"ENLocal_ADDONS_REFILLS\".\"CanSubscribe\" o6, \"ENLocal_ADDONS_REFILLS\".\"IsPending\" o7, \"ENLocal_ADDONS_REFILLS\".\"CanUnsubscribe\" o8, \"ENLocal_ADDONS_REFILLS\".\"ExpiryDate\" o9, \"ENLocal_ADDONS_REFILLS\".\"Description\" o10, \"ENLocal_ADDONS_REFILLS\".\"IsAvailable\" o11, \"ENLocal_ADDONS_REFILLS\".\"Msisdn\" o12, \"ENLocal_ADDONS_REFILLS\".\"CommercialDescription\" o13, \"ENLocal_ADDONS_REFILLS\".\"PackageGroup\" o14, \"ENLocal_ADDONS_REFILLS\".\"Type\" o15, \"ENLocal_ADDONS_REFILLS\".\"Category\" o16, \"ENLocal_ADDONS_REFILLS\".\"CategoryLabel\" o17, \"ENLocal_ADDONS_REFILLS\".\"CategoryDescription\" o18, \"ENLocal_ADDONS_REFILLS\".\"IsAddOn\" o19, \"ENLocal_ADDONS_REFILLS\".\"IsRefill\" o20, \"ENLocal_ADDONS_REFILLS\".\"SubscriptionStart\" o21, \"ENLocal_ADDONS_REFILLS\".\"Icons\" o22, \"ENLocal_ADDONS_REFILLS\".\"CacheExpirationDate\" o23";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ADDONS_REFILLS\" \"ENLocal_ADDONS_REFILLS\"";
fromAndWhereSql += " WHERE (\"ENLocal_ADDONS_REFILLS\".\"Msisdn\" = :qpstMsisdn) AND (\"ENLocal_ADDONS_REFILLS\".\"IsRefill\" = 1)";
orderBySql += " ORDER BY \"ENLocal_ADDONS_REFILLS\".\"CacheExpirationDate\" ASC ";
argsList.add("qpstMsisdn", /*TEXT*/ 0, qpstMsisdn);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ADDONS_REFILLSRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ADDONS_REFILLSAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalRefillsByMsisdnVar.value;
});
};
return getLocalRefillsByMsisdnAggr();
}).then(function () {
// Execute Action: GetApplicationName_MBP
return WTF_MBPController.default.getApplicationName_MBP$Action(callContext).then(function (value) {
getApplicationName_MBPVar.value = value;
});
}).then(function () {
// Execute Action: GetAddonsAndRefills_BP
return controller.getAddonsAndRefills_BP$ServerAction(vars.value.associationIdInLocal, vars.value.serviceIdInLocal, getLocalACCESSTOKENINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr, getLocalUSERNOSINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, false, getApplicationName_MBPVar.value.valueOut, callContext).then(function (value) {
getAddonsAndRefills_BPVar.value = value;
});
}).then(function () {
// Any success?
return OS.Flow.executeSequence(function () {
if(((getAddonsAndRefills_BPVar.value.addOnsSuccessOut || getAddonsAndRefills_BPVar.value.refillsSuccessOut))) {
// AddOnsSuccess?
if((getAddonsAndRefills_BPVar.value.addOnsSuccessOut)) {
// Execute Action: ListAppendAll_NewAddons
OS.SystemActions.listAppendAll(vars.value.addOnsRefillsListVar, OS.DataTypes.JSConversions.typeConvertRecordList(getAddonsAndRefills_BPVar.value.addOnsListOut, new WTF_MBPModel.STR_ADDON_REFILLRecordList(), function (source, target) {
target = WTF_MBPModel.STR_ADDON_REFILLRecord.fromStructure(source);
return target;
}), callContext);
} else {
// Execute Action: ListAppendAll_ExistingAddons
OS.SystemActions.listAppendAll(vars.value.addOnsRefillsListVar, OS.DataTypes.JSConversions.typeConvertRecordList(getLocalAddonsByMsisdnVar.value.listOut, new WTF_MBPModel.STR_ADDON_REFILLRecordList(), function (source, target) {
target.sTR_ADDON_REFILLAttr.idAttr = OS.BuiltinFunctions.longIntegerToInteger(source.local_ADDONS_REFILLSAttr.idAttr);
target.sTR_ADDON_REFILLAttr.id_Addons_RefillsAttr = source.local_ADDONS_REFILLSAttr.id_Addons_RefillsAttr;
target.sTR_ADDON_REFILLAttr.costAttr = source.local_ADDONS_REFILLSAttr.costAttr;
target.sTR_ADDON_REFILLAttr.isSubscribedAttr = source.local_ADDONS_REFILLSAttr.isSubscribedAttr;
target.sTR_ADDON_REFILLAttr.statusLabelAttr = source.local_ADDONS_REFILLSAttr.statusLabelAttr;
target.sTR_ADDON_REFILLAttr.canSubscribeAttr = source.local_ADDONS_REFILLSAttr.canSubscribeAttr;
target.sTR_ADDON_REFILLAttr.isPendingAttr = source.local_ADDONS_REFILLSAttr.isPendingAttr;
target.sTR_ADDON_REFILLAttr.canUnsubscribeAttr = source.local_ADDONS_REFILLSAttr.canUnsubscribeAttr;
target.sTR_ADDON_REFILLAttr.expiryDateAttr = OS.BuiltinFunctions.textToDate(source.local_ADDONS_REFILLSAttr.expiryDateAttr);
target.sTR_ADDON_REFILLAttr.descriptionAttr = source.local_ADDONS_REFILLSAttr.descriptionAttr;
target.sTR_ADDON_REFILLAttr.addonIconClassIdAttr = source.local_ADDONS_REFILLSAttr.iconAttr;
target.sTR_ADDON_REFILLAttr.isAvailableAttr = source.local_ADDONS_REFILLSAttr.isAvailableAttr;
target.sTR_ADDON_REFILLAttr.msisdnAttr = source.local_ADDONS_REFILLSAttr.msisdnAttr;
target.sTR_ADDON_REFILLAttr.commercialDescriptionAttr = source.local_ADDONS_REFILLSAttr.commercialDescriptionAttr;
target.sTR_ADDON_REFILLAttr.packageGroupAttr = source.local_ADDONS_REFILLSAttr.packageGroupAttr;
target.sTR_ADDON_REFILLAttr.typeAttr = source.local_ADDONS_REFILLSAttr.typeAttr;
target.sTR_ADDON_REFILLAttr.categoryAttr = source.local_ADDONS_REFILLSAttr.categoryAttr;
target.sTR_ADDON_REFILLAttr.categoryLabelAttr = source.local_ADDONS_REFILLSAttr.categoryLabelAttr;
target.sTR_ADDON_REFILLAttr.categoryDescriptionAttr = source.local_ADDONS_REFILLSAttr.categoryDescriptionAttr;
target.sTR_ADDON_REFILLAttr.isAddOnAttr = source.local_ADDONS_REFILLSAttr.isAddOnAttr;
target.sTR_ADDON_REFILLAttr.isRefillAttr = source.local_ADDONS_REFILLSAttr.isRefillAttr;
target.sTR_ADDON_REFILLAttr.subscriptionStartAttr = OS.BuiltinFunctions.textToDate(source.local_ADDONS_REFILLSAttr.subscriptionStartAttr);
target.sTR_ADDON_REFILLAttr.iconsAttr = source.local_ADDONS_REFILLSAttr.iconsAttr;
return target;
}), callContext);
}

// RefillsSuccess?
if((getAddonsAndRefills_BPVar.value.refillsSuccessOut)) {
// Execute Action: ListAppendAll_NewRefills
OS.SystemActions.listAppendAll(vars.value.addOnsRefillsListVar, OS.DataTypes.JSConversions.typeConvertRecordList(getAddonsAndRefills_BPVar.value.refillsListOut, new WTF_MBPModel.STR_ADDON_REFILLRecordList(), function (source, target) {
target = WTF_MBPModel.STR_ADDON_REFILLRecord.fromStructure(source);
return target;
}), callContext);
} else {
// Execute Action: ListAppendAll_ExistingRefills
OS.SystemActions.listAppendAll(vars.value.addOnsRefillsListVar, OS.DataTypes.JSConversions.typeConvertRecordList(getLocalRefillsByMsisdnVar.value.listOut, new WTF_MBPModel.STR_ADDON_REFILLRecordList(), function (source, target) {
target.sTR_ADDON_REFILLAttr.idAttr = OS.BuiltinFunctions.longIntegerToInteger(source.local_ADDONS_REFILLSAttr.idAttr);
target.sTR_ADDON_REFILLAttr.id_Addons_RefillsAttr = source.local_ADDONS_REFILLSAttr.id_Addons_RefillsAttr;
target.sTR_ADDON_REFILLAttr.costAttr = source.local_ADDONS_REFILLSAttr.costAttr;
target.sTR_ADDON_REFILLAttr.isSubscribedAttr = source.local_ADDONS_REFILLSAttr.isSubscribedAttr;
target.sTR_ADDON_REFILLAttr.statusLabelAttr = source.local_ADDONS_REFILLSAttr.statusLabelAttr;
target.sTR_ADDON_REFILLAttr.canSubscribeAttr = source.local_ADDONS_REFILLSAttr.canSubscribeAttr;
target.sTR_ADDON_REFILLAttr.isPendingAttr = source.local_ADDONS_REFILLSAttr.isPendingAttr;
target.sTR_ADDON_REFILLAttr.canUnsubscribeAttr = source.local_ADDONS_REFILLSAttr.canUnsubscribeAttr;
target.sTR_ADDON_REFILLAttr.expiryDateAttr = OS.BuiltinFunctions.textToDate(source.local_ADDONS_REFILLSAttr.expiryDateAttr);
target.sTR_ADDON_REFILLAttr.descriptionAttr = source.local_ADDONS_REFILLSAttr.descriptionAttr;
target.sTR_ADDON_REFILLAttr.addonIconClassIdAttr = source.local_ADDONS_REFILLSAttr.iconAttr;
target.sTR_ADDON_REFILLAttr.isAvailableAttr = source.local_ADDONS_REFILLSAttr.isAvailableAttr;
target.sTR_ADDON_REFILLAttr.msisdnAttr = source.local_ADDONS_REFILLSAttr.msisdnAttr;
target.sTR_ADDON_REFILLAttr.commercialDescriptionAttr = source.local_ADDONS_REFILLSAttr.commercialDescriptionAttr;
target.sTR_ADDON_REFILLAttr.packageGroupAttr = source.local_ADDONS_REFILLSAttr.packageGroupAttr;
target.sTR_ADDON_REFILLAttr.typeAttr = source.local_ADDONS_REFILLSAttr.typeAttr;
target.sTR_ADDON_REFILLAttr.categoryAttr = source.local_ADDONS_REFILLSAttr.categoryAttr;
target.sTR_ADDON_REFILLAttr.categoryLabelAttr = source.local_ADDONS_REFILLSAttr.categoryLabelAttr;
target.sTR_ADDON_REFILLAttr.categoryDescriptionAttr = source.local_ADDONS_REFILLSAttr.categoryDescriptionAttr;
target.sTR_ADDON_REFILLAttr.isAddOnAttr = source.local_ADDONS_REFILLSAttr.isAddOnAttr;
target.sTR_ADDON_REFILLAttr.isRefillAttr = source.local_ADDONS_REFILLSAttr.isRefillAttr;
target.sTR_ADDON_REFILLAttr.subscriptionStartAttr = OS.BuiltinFunctions.textToDate(source.local_ADDONS_REFILLSAttr.subscriptionStartAttr);
target.sTR_ADDON_REFILLAttr.iconsAttr = source.local_ADDONS_REFILLSAttr.iconsAttr;
return target;
}), callContext);
}

return OS.Flow.executeSequence(function () {
if((!(vars.value.addOnsRefillsListVar.isEmpty))) {
// Success = True
outVars.value.successOut = true;
// AddOnsRefillsListLength = AddOnsRefillsList.Length
outVars.value.addOnsRefillsListLengthOut = vars.value.addOnsRefillsListVar.length;
// Execute Action: CreateOrUpdateLocal_ADDONS_REFILLS_Logic
return WTF_MBPController.default.createOrUpdateAllLocal_ADDONS_REFILLS_Logic$Action(OS.DataTypes.JSConversions.typeConvertRecordList(vars.value.addOnsRefillsListVar, new WTF_MBPModel.Local_ADDONS_REFILLSRecordList(), function (source, target) {
target.local_ADDONS_REFILLSAttr.idAttr = OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.nullIdentifier());
target.local_ADDONS_REFILLSAttr.id_Addons_RefillsAttr = source.sTR_ADDON_REFILLAttr.id_Addons_RefillsAttr;
target.local_ADDONS_REFILLSAttr.iconAttr = source.sTR_ADDON_REFILLAttr.addonIconClassIdAttr;
target.local_ADDONS_REFILLSAttr.costAttr = source.sTR_ADDON_REFILLAttr.costAttr;
target.local_ADDONS_REFILLSAttr.isSubscribedAttr = source.sTR_ADDON_REFILLAttr.isSubscribedAttr;
target.local_ADDONS_REFILLSAttr.statusLabelAttr = source.sTR_ADDON_REFILLAttr.statusLabelAttr;
target.local_ADDONS_REFILLSAttr.canSubscribeAttr = source.sTR_ADDON_REFILLAttr.canSubscribeAttr;
target.local_ADDONS_REFILLSAttr.isPendingAttr = source.sTR_ADDON_REFILLAttr.isPendingAttr;
target.local_ADDONS_REFILLSAttr.canUnsubscribeAttr = source.sTR_ADDON_REFILLAttr.canUnsubscribeAttr;
target.local_ADDONS_REFILLSAttr.expiryDateAttr = OS.BuiltinFunctions.dateToText(source.sTR_ADDON_REFILLAttr.expiryDateAttr);
target.local_ADDONS_REFILLSAttr.descriptionAttr = source.sTR_ADDON_REFILLAttr.descriptionAttr;
target.local_ADDONS_REFILLSAttr.isAvailableAttr = source.sTR_ADDON_REFILLAttr.isAvailableAttr;
target.local_ADDONS_REFILLSAttr.msisdnAttr = source.sTR_ADDON_REFILLAttr.msisdnAttr;
target.local_ADDONS_REFILLSAttr.commercialDescriptionAttr = source.sTR_ADDON_REFILLAttr.commercialDescriptionAttr;
target.local_ADDONS_REFILLSAttr.packageGroupAttr = source.sTR_ADDON_REFILLAttr.packageGroupAttr;
target.local_ADDONS_REFILLSAttr.typeAttr = source.sTR_ADDON_REFILLAttr.typeAttr;
target.local_ADDONS_REFILLSAttr.categoryAttr = source.sTR_ADDON_REFILLAttr.categoryAttr;
target.local_ADDONS_REFILLSAttr.categoryLabelAttr = source.sTR_ADDON_REFILLAttr.categoryLabelAttr;
target.local_ADDONS_REFILLSAttr.categoryDescriptionAttr = source.sTR_ADDON_REFILLAttr.categoryDescriptionAttr;
target.local_ADDONS_REFILLSAttr.isAddOnAttr = source.sTR_ADDON_REFILLAttr.isAddOnAttr;
target.local_ADDONS_REFILLSAttr.isRefillAttr = source.sTR_ADDON_REFILLAttr.isRefillAttr;
target.local_ADDONS_REFILLSAttr.subscriptionStartAttr = OS.BuiltinFunctions.dateToText(source.sTR_ADDON_REFILLAttr.subscriptionStartAttr);
target.local_ADDONS_REFILLSAttr.iconsAttr = source.sTR_ADDON_REFILLAttr.iconsAttr;
return target;
}), callContext).then(function (value) {
createOrUpdateLocal_ADDONS_REFILLS_LogicVar.value = value;
});
}

});
} else {
// Success = False
outVars.value.successOut = false;
}

});
});
}).catch(function (ex) {
OS.Logger.trace("API_Addons.GetAddOnsAndRefills", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_Addons.GetAddOnsAndRefills$vars", [{
name: "AssociationId",
attrName: "associationIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "ServiceId",
attrName: "serviceIdInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "AddOnsRefillsList",
attrName: "addOnsRefillsListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.STR_ADDON_REFILLRecordList();
},
complexType: WTF_MBPModel.STR_ADDON_REFILLRecordList
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_Addons.GetAddOnsAndRefills$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "AddOnsRefillsListLength",
attrName: "addOnsRefillsListLengthOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.clientActionProxies.getAddOnsAndRefills$Action = function (associationIdIn, serviceIdIn) {
associationIdIn = (associationIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : associationIdIn;
serviceIdIn = (serviceIdIn === undefined) ? "" : serviceIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getAddOnsAndRefills$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(associationIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(serviceIdIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
AddOnsRefillsListLength: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.addOnsRefillsListLengthOut, OS.Types.Integer, true)
};
});
};
});

define("WTF_MBP.controller$GetAllHistory", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_HistoryList", "WTF_MBP.controller$ServerAction.WalletHistory_GetAll", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getAllHistory$Action = function (callContext) {
callContext = controller.callContext(callContext);
var walletHistory_GetAllVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Wallet.GetAllHistory$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: WalletHistory_GetAll
return controller.walletHistory_GetAll$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, callContext).then(function (value) {
walletHistory_GetAllVar.value = value;
});
}).then(function () {
// App_History_Activities = WalletHistory_GetAll.App_History_Activities
outVars.value.app_History_ActivitiesOut = walletHistory_GetAllVar.value.app_History_ActivitiesOut;
// App_History_Plays = WalletHistory_GetAll.App_History_Plays
outVars.value.app_History_PlaysOut = walletHistory_GetAllVar.value.app_History_PlaysOut;
// Success = WalletHistory_GetAll.Success
outVars.value.successOut = walletHistory_GetAllVar.value.successOut;
// Message = WalletHistory_GetAll.Message
outVars.value.messageOut = walletHistory_GetAllVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Wallet.GetAllHistory$outVars", [{
name: "App_History_Activities",
attrName: "app_History_ActivitiesOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_HistoryList();
},
complexType: WTF_MBPModel.App_HistoryList
}, {
name: "App_History_Plays",
attrName: "app_History_PlaysOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_HistoryList();
},
complexType: WTF_MBPModel.App_HistoryList
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.getAllHistory$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.getAllHistory$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
App_History_Activities: actionResults.app_History_ActivitiesOut,
App_History_Plays: actionResults.app_History_PlaysOut,
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$GetAllLocalWalletItems", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_MBP.controller$GetConfigValueAsText_MBP", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_MBP.model$Local_WALLET_ITEMRecordList", "WTF_MBP.model$App_WalletCardList", "WTF_BP.model$App_WalletCardRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.model$Local_WALLET_ITEMRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getAllLocalWalletItems$Action = function (isOfflineModeIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Wallet.GetAllLocalWalletItems$vars"))());
vars.value.isOfflineModeInLocal = isOfflineModeIn;
var listFilterFilmesVar = new OS.DataTypes.VariableHolder();
var listFilterUberEatsVar = new OS.DataTypes.VariableHolder();
var forceRefreshStatusVar = new OS.DataTypes.VariableHolder();
var getWTFGenericLabelCardVar = new OS.DataTypes.VariableHolder();
var listFilterGoldenVar = new OS.DataTypes.VariableHolder();
var listFilterUberRidersVar = new OS.DataTypes.VariableHolder();
var listFilterCinemasVar = new OS.DataTypes.VariableHolder();
var listFilterGenericVar = new OS.DataTypes.VariableHolder();
var listFilterEquipmentsVar = new OS.DataTypes.VariableHolder();
var listFilterRevolutVar = new OS.DataTypes.VariableHolder();
var listFilterCommunicationsVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var getWalletItemsVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_WALLET_ITEMRecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Wallet.GetAllLocalWalletItems$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.doWhileAsync(function () {
return false;
}, function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Aggregate: GetWalletItems
var getWalletItemsAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_WALLET_ITEMRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}

var qpdaCurrDateTime = OS.BuiltinFunctions.currDateTime();
var qploUserWTFID = getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25";
} else {
selectSql += "\"ENLocal_WALLET_ITEM\".\"Id\" o0, \"ENLocal_WALLET_ITEM\".\"CategoryLabel\" o1, \"ENLocal_WALLET_ITEM\".\"Title\" o2, \"ENLocal_WALLET_ITEM\".\"Description\" o3, \"ENLocal_WALLET_ITEM\".\"OriginLabel\" o4, \"ENLocal_WALLET_ITEM\".\"VoucherCode\" o5, \"ENLocal_WALLET_ITEM\".\"VoucherTypeId\" o6, \"ENLocal_WALLET_ITEM\".\"VoucherTypeLabel\" o7, \"ENLocal_WALLET_ITEM\".\"VoucherExpirationDate\" o8, \"ENLocal_WALLET_ITEM\".\"PrizeAddressName\" o9, \"ENLocal_WALLET_ITEM\".\"PrizeAddressStreet\" o10, \"ENLocal_WALLET_ITEM\".\"PrizeAddressPostalCity\" o11, \"ENLocal_WALLET_ITEM\".\"PrizeAddressPostalCode\" o12, \"ENLocal_WALLET_ITEM\".\"PrizeAddressMSISDN\" o13, \"ENLocal_WALLET_ITEM\".\"PrizeAddressAuthorize\" o14, \"ENLocal_WALLET_ITEM\".\"PrizeRequiredAddress\" o15, \"ENLocal_WALLET_ITEM\".\"CreatedAt\" o16, \"ENLocal_WALLET_ITEM\".\"UserWTFID\" o17, \"ENLocal_WALLET_ITEM\".\"LocalPictureID\" o18, \"ENLocal_WALLET_ITEM\".\"WalletItemOriginId\" o19, \"ENLocal_WALLET_ITEM\".\"WalletItemStatusId\" o20, \"ENLocal_WALLET_ITEM\".\"AssetId\" o21, \"ENLocal_WALLET_ITEM\".\"StatusLabel\" o22, \"ENLocal_WALLET_ITEM\".\"ActionDateTime\" o23, \"ENLocal_WALLET_ITEM\".\"ExpireDateTime\" o24, \"ENLocal_WALLET_ITEM\".\"ItemTypeId\" o25";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_WALLET_ITEM\" \"ENLocal_WALLET_ITEM\"";
fromAndWhereSql += " WHERE ";
if (qploUserWTFID != 0) {
fromAndWhereSql += "((\"ENLocal_WALLET_ITEM\".\"UserWTFID\" = :qploUserWTFID) AND (\"ENLocal_WALLET_ITEM\".\"UserWTFID\" IS NOT NULL))";
argsList.add("qploUserWTFID", /*LONGINTEGER*/ 4, qploUserWTFID);
} else {
fromAndWhereSql += "(\"ENLocal_WALLET_ITEM\".\"UserWTFID\" IS NULL)";
}
fromAndWhereSql += " AND ((\"ENLocal_WALLET_ITEM\".\"ExpireDateTime\" >= :qpdaCurrDateTime) OR (\"ENLocal_WALLET_ITEM\".\"ExpireDateTime\" = DateTime((Date('1900-01-01')))))";
orderBySql += " ORDER BY \"ENLocal_WALLET_ITEM\".\"ActionDateTime\" DESC ";
argsList.add("qpdaCurrDateTime", /*DATE_TIME*/ 6, qpdaCurrDateTime);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_WALLET_ITEMRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_WALLET_ITEMAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getWalletItemsVar.value;
});
};
return getWalletItemsAggr();
}).then(function () {
// CheckWalletItems.Empty?
return OS.Flow.executeSequence(function () {
if((!(getWalletItemsVar.value.listOut.isEmpty))) {
// Execute Action: ForceRefreshStatus
forceRefreshStatusVar.value = OS.SystemActions.listFilter(getWalletItemsVar.value.listOut, function (p) {
return ((((p.local_WALLET_ITEMAttr.walletItemStatusIdAttr === WTF_MBPModel.staticEntities.wALLET_ITEM_STATUS.emAtribuicao) || (p.local_WALLET_ITEMAttr.walletItemStatusIdAttr === WTF_MBPModel.staticEntities.wALLET_ITEM_STATUS.emProcessamento)) || (p.local_WALLET_ITEMAttr.walletItemStatusIdAttr === WTF_MBPModel.staticEntities.wALLET_ITEM_STATUS.erro)) || (p.local_WALLET_ITEMAttr.walletItemStatusIdAttr === WTF_MBPModel.staticEntities.wALLET_ITEM_STATUS.pago));
}, callContext);

return OS.Flow.executeSequence(function () {
if(((forceRefreshStatusVar.value.filteredListOut.isEmpty || vars.value.isOfflineModeInLocal))) {
// Execute Action: ListFilterEquipments
listFilterEquipmentsVar.value = OS.SystemActions.listFilter(getWalletItemsVar.value.listOut, function (p) {
return (p.local_WALLET_ITEMAttr.categoryLabelAttr === "Equipamentos");
}, callContext);

// List_Equipments = ListFilterEquipments.FilteredList
outVars.value.list_EquipmentsOut = OS.DataTypes.JSConversions.typeConvertRecordList(listFilterEquipmentsVar.value.filteredListOut, new WTF_MBPModel.App_WalletCardList(), function (source, target) {
target.walletItemIdAttr = source.local_WALLET_ITEMAttr.idAttr;
target.categoryLabelAttr = source.local_WALLET_ITEMAttr.categoryLabelAttr;
target.itemTypeIdAttr = source.local_WALLET_ITEMAttr.itemTypeIdAttr;
target.walletItemOriginIdAttr = source.local_WALLET_ITEMAttr.walletItemOriginIdAttr;
target.walletItemOriginLabelAttr = source.local_WALLET_ITEMAttr.originLabelAttr;
target.walletItemStatusIdAttr = source.local_WALLET_ITEMAttr.walletItemStatusIdAttr;
target.titleAttr = source.local_WALLET_ITEMAttr.titleAttr;
target.descriptionAttr = source.local_WALLET_ITEMAttr.descriptionAttr;
target.app_PictureAttr.pictureIdAttr = source.local_WALLET_ITEMAttr.localPictureIDAttr;
target.actionDateTimeAttr = source.local_WALLET_ITEMAttr.actionDateTimeAttr;
target.expireDateTimeAttr = source.local_WALLET_ITEMAttr.expireDateTimeAttr;
target.assetIdAttr = source.local_WALLET_ITEMAttr.assetIdAttr;
target.app_UserWtfPrizeAddressAttr.nameAttr = source.local_WALLET_ITEMAttr.prizeAddressNameAttr;
target.app_UserWtfPrizeAddressAttr.addressStreetAttr = source.local_WALLET_ITEMAttr.prizeAddressStreetAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCityAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr;
target.app_UserWtfPrizeAddressAttr.msisdnAttr = source.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr;
target.app_UserWtfPrizeAddressAttr.authorizeAttr = source.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr;
target.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr = source.local_WALLET_ITEMAttr.prizeRequiredAddressAttr;
target.app_VoucherAttr.codeAttr = source.local_WALLET_ITEMAttr.voucherCodeAttr;
target.app_VoucherAttr.voucherTypeIdAttr = source.local_WALLET_ITEMAttr.voucherTypeIdAttr;
target.app_VoucherAttr.voucherTypeLabelAttr = source.local_WALLET_ITEMAttr.voucherTypeLabelAttr;
target.app_VoucherAttr.expiresDateAttr = source.local_WALLET_ITEMAttr.voucherExpirationDateAttr;
target.statusLabelAttr = source.local_WALLET_ITEMAttr.statusLabelAttr;
return target;
});
// Execute Action: ListFilterCommunications
listFilterCommunicationsVar.value = OS.SystemActions.listFilter(getWalletItemsVar.value.listOut, function (p) {
return (p.local_WALLET_ITEMAttr.categoryLabelAttr === "Comunicações");
}, callContext);

// List_Comunications = ListFilterCommunications.FilteredList
outVars.value.list_ComunicationsOut = OS.DataTypes.JSConversions.typeConvertRecordList(listFilterCommunicationsVar.value.filteredListOut, new WTF_MBPModel.App_WalletCardList(), function (source, target) {
target.walletItemIdAttr = source.local_WALLET_ITEMAttr.idAttr;
target.categoryLabelAttr = source.local_WALLET_ITEMAttr.categoryLabelAttr;
target.itemTypeIdAttr = source.local_WALLET_ITEMAttr.itemTypeIdAttr;
target.walletItemOriginIdAttr = source.local_WALLET_ITEMAttr.walletItemOriginIdAttr;
target.walletItemOriginLabelAttr = source.local_WALLET_ITEMAttr.originLabelAttr;
target.walletItemStatusIdAttr = source.local_WALLET_ITEMAttr.walletItemStatusIdAttr;
target.titleAttr = source.local_WALLET_ITEMAttr.titleAttr;
target.descriptionAttr = source.local_WALLET_ITEMAttr.descriptionAttr;
target.app_PictureAttr.pictureIdAttr = source.local_WALLET_ITEMAttr.localPictureIDAttr;
target.actionDateTimeAttr = source.local_WALLET_ITEMAttr.actionDateTimeAttr;
target.expireDateTimeAttr = source.local_WALLET_ITEMAttr.expireDateTimeAttr;
target.assetIdAttr = source.local_WALLET_ITEMAttr.assetIdAttr;
target.app_UserWtfPrizeAddressAttr.nameAttr = source.local_WALLET_ITEMAttr.prizeAddressNameAttr;
target.app_UserWtfPrizeAddressAttr.addressStreetAttr = source.local_WALLET_ITEMAttr.prizeAddressStreetAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCityAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr;
target.app_UserWtfPrizeAddressAttr.msisdnAttr = source.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr;
target.app_UserWtfPrizeAddressAttr.authorizeAttr = source.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr;
target.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr = source.local_WALLET_ITEMAttr.prizeRequiredAddressAttr;
target.app_VoucherAttr.codeAttr = source.local_WALLET_ITEMAttr.voucherCodeAttr;
target.app_VoucherAttr.voucherTypeIdAttr = source.local_WALLET_ITEMAttr.voucherTypeIdAttr;
target.app_VoucherAttr.voucherTypeLabelAttr = source.local_WALLET_ITEMAttr.voucherTypeLabelAttr;
target.app_VoucherAttr.expiresDateAttr = source.local_WALLET_ITEMAttr.voucherExpirationDateAttr;
target.statusLabelAttr = source.local_WALLET_ITEMAttr.statusLabelAttr;
return target;
});
// Execute Action: ListFilterGolden
listFilterGoldenVar.value = OS.SystemActions.listFilter(getWalletItemsVar.value.listOut, function (p) {
return (p.local_WALLET_ITEMAttr.categoryLabelAttr === "Golden");
}, callContext);

// List_Golden = ListFilterGolden.FilteredList
outVars.value.list_GoldenOut = OS.DataTypes.JSConversions.typeConvertRecordList(listFilterGoldenVar.value.filteredListOut, new WTF_MBPModel.App_WalletCardList(), function (source, target) {
target.walletItemIdAttr = source.local_WALLET_ITEMAttr.idAttr;
target.categoryLabelAttr = source.local_WALLET_ITEMAttr.categoryLabelAttr;
target.itemTypeIdAttr = source.local_WALLET_ITEMAttr.itemTypeIdAttr;
target.walletItemOriginIdAttr = source.local_WALLET_ITEMAttr.walletItemOriginIdAttr;
target.walletItemOriginLabelAttr = source.local_WALLET_ITEMAttr.originLabelAttr;
target.walletItemStatusIdAttr = source.local_WALLET_ITEMAttr.walletItemStatusIdAttr;
target.titleAttr = source.local_WALLET_ITEMAttr.titleAttr;
target.descriptionAttr = source.local_WALLET_ITEMAttr.descriptionAttr;
target.app_PictureAttr.pictureIdAttr = source.local_WALLET_ITEMAttr.localPictureIDAttr;
target.actionDateTimeAttr = source.local_WALLET_ITEMAttr.actionDateTimeAttr;
target.expireDateTimeAttr = source.local_WALLET_ITEMAttr.expireDateTimeAttr;
target.assetIdAttr = source.local_WALLET_ITEMAttr.assetIdAttr;
target.app_UserWtfPrizeAddressAttr.nameAttr = source.local_WALLET_ITEMAttr.prizeAddressNameAttr;
target.app_UserWtfPrizeAddressAttr.addressStreetAttr = source.local_WALLET_ITEMAttr.prizeAddressStreetAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCityAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr;
target.app_UserWtfPrizeAddressAttr.msisdnAttr = source.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr;
target.app_UserWtfPrizeAddressAttr.authorizeAttr = source.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr;
target.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr = source.local_WALLET_ITEMAttr.prizeRequiredAddressAttr;
target.app_VoucherAttr.codeAttr = source.local_WALLET_ITEMAttr.voucherCodeAttr;
target.app_VoucherAttr.voucherTypeIdAttr = source.local_WALLET_ITEMAttr.voucherTypeIdAttr;
target.app_VoucherAttr.voucherTypeLabelAttr = source.local_WALLET_ITEMAttr.voucherTypeLabelAttr;
target.app_VoucherAttr.expiresDateAttr = source.local_WALLET_ITEMAttr.voucherExpirationDateAttr;
target.statusLabelAttr = source.local_WALLET_ITEMAttr.statusLabelAttr;
return target;
});
// Execute Action: ListFilterFilmes
listFilterFilmesVar.value = OS.SystemActions.listFilter(getWalletItemsVar.value.listOut, function (p) {
return (p.local_WALLET_ITEMAttr.categoryLabelAttr === "Filmes");
}, callContext);

// List_FilmesVod = ListFilterFilmes.FilteredList
outVars.value.list_FilmesVodOut = OS.DataTypes.JSConversions.typeConvertRecordList(listFilterFilmesVar.value.filteredListOut, new WTF_MBPModel.App_WalletCardList(), function (source, target) {
target.walletItemIdAttr = source.local_WALLET_ITEMAttr.idAttr;
target.categoryLabelAttr = source.local_WALLET_ITEMAttr.categoryLabelAttr;
target.itemTypeIdAttr = source.local_WALLET_ITEMAttr.itemTypeIdAttr;
target.walletItemOriginIdAttr = source.local_WALLET_ITEMAttr.walletItemOriginIdAttr;
target.walletItemOriginLabelAttr = source.local_WALLET_ITEMAttr.originLabelAttr;
target.walletItemStatusIdAttr = source.local_WALLET_ITEMAttr.walletItemStatusIdAttr;
target.titleAttr = source.local_WALLET_ITEMAttr.titleAttr;
target.descriptionAttr = source.local_WALLET_ITEMAttr.descriptionAttr;
target.app_PictureAttr.pictureIdAttr = source.local_WALLET_ITEMAttr.localPictureIDAttr;
target.actionDateTimeAttr = source.local_WALLET_ITEMAttr.actionDateTimeAttr;
target.expireDateTimeAttr = source.local_WALLET_ITEMAttr.expireDateTimeAttr;
target.assetIdAttr = source.local_WALLET_ITEMAttr.assetIdAttr;
target.app_UserWtfPrizeAddressAttr.nameAttr = source.local_WALLET_ITEMAttr.prizeAddressNameAttr;
target.app_UserWtfPrizeAddressAttr.addressStreetAttr = source.local_WALLET_ITEMAttr.prizeAddressStreetAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCityAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr;
target.app_UserWtfPrizeAddressAttr.msisdnAttr = source.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr;
target.app_UserWtfPrizeAddressAttr.authorizeAttr = source.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr;
target.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr = source.local_WALLET_ITEMAttr.prizeRequiredAddressAttr;
target.app_VoucherAttr.codeAttr = source.local_WALLET_ITEMAttr.voucherCodeAttr;
target.app_VoucherAttr.voucherTypeIdAttr = source.local_WALLET_ITEMAttr.voucherTypeIdAttr;
target.app_VoucherAttr.voucherTypeLabelAttr = source.local_WALLET_ITEMAttr.voucherTypeLabelAttr;
target.app_VoucherAttr.expiresDateAttr = source.local_WALLET_ITEMAttr.voucherExpirationDateAttr;
target.statusLabelAttr = source.local_WALLET_ITEMAttr.statusLabelAttr;
return target;
});
// Execute Action: ListFilterUberEats
listFilterUberEatsVar.value = OS.SystemActions.listFilter(getWalletItemsVar.value.listOut, function (p) {
return (p.local_WALLET_ITEMAttr.categoryLabelAttr === "Uber Eats");
}, callContext);

// List_UberEats = ListFilterUberEats.FilteredList
outVars.value.list_UberEatsOut = OS.DataTypes.JSConversions.typeConvertRecordList(listFilterUberEatsVar.value.filteredListOut, new WTF_MBPModel.App_WalletCardList(), function (source, target) {
target.walletItemIdAttr = source.local_WALLET_ITEMAttr.idAttr;
target.categoryLabelAttr = source.local_WALLET_ITEMAttr.categoryLabelAttr;
target.itemTypeIdAttr = source.local_WALLET_ITEMAttr.itemTypeIdAttr;
target.walletItemOriginIdAttr = source.local_WALLET_ITEMAttr.walletItemOriginIdAttr;
target.walletItemOriginLabelAttr = source.local_WALLET_ITEMAttr.originLabelAttr;
target.walletItemStatusIdAttr = source.local_WALLET_ITEMAttr.walletItemStatusIdAttr;
target.titleAttr = source.local_WALLET_ITEMAttr.titleAttr;
target.descriptionAttr = source.local_WALLET_ITEMAttr.descriptionAttr;
target.app_PictureAttr.pictureIdAttr = source.local_WALLET_ITEMAttr.localPictureIDAttr;
target.actionDateTimeAttr = source.local_WALLET_ITEMAttr.actionDateTimeAttr;
target.expireDateTimeAttr = source.local_WALLET_ITEMAttr.expireDateTimeAttr;
target.assetIdAttr = source.local_WALLET_ITEMAttr.assetIdAttr;
target.app_UserWtfPrizeAddressAttr.nameAttr = source.local_WALLET_ITEMAttr.prizeAddressNameAttr;
target.app_UserWtfPrizeAddressAttr.addressStreetAttr = source.local_WALLET_ITEMAttr.prizeAddressStreetAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCityAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr;
target.app_UserWtfPrizeAddressAttr.msisdnAttr = source.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr;
target.app_UserWtfPrizeAddressAttr.authorizeAttr = source.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr;
target.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr = source.local_WALLET_ITEMAttr.prizeRequiredAddressAttr;
target.app_VoucherAttr.codeAttr = source.local_WALLET_ITEMAttr.voucherCodeAttr;
target.app_VoucherAttr.voucherTypeIdAttr = source.local_WALLET_ITEMAttr.voucherTypeIdAttr;
target.app_VoucherAttr.voucherTypeLabelAttr = source.local_WALLET_ITEMAttr.voucherTypeLabelAttr;
target.app_VoucherAttr.expiresDateAttr = source.local_WALLET_ITEMAttr.voucherExpirationDateAttr;
target.statusLabelAttr = source.local_WALLET_ITEMAttr.statusLabelAttr;
return target;
});
// Execute Action: ListFilterUberRiders
listFilterUberRidersVar.value = OS.SystemActions.listFilter(getWalletItemsVar.value.listOut, function (p) {
return (p.local_WALLET_ITEMAttr.categoryLabelAttr === "Uber Riders");
}, callContext);

// List_UberRiders = ListFilterUberRiders.FilteredList
outVars.value.list_UberRidersOut = OS.DataTypes.JSConversions.typeConvertRecordList(listFilterUberRidersVar.value.filteredListOut, new WTF_MBPModel.App_WalletCardList(), function (source, target) {
target.walletItemIdAttr = source.local_WALLET_ITEMAttr.idAttr;
target.categoryLabelAttr = source.local_WALLET_ITEMAttr.categoryLabelAttr;
target.itemTypeIdAttr = source.local_WALLET_ITEMAttr.itemTypeIdAttr;
target.walletItemOriginIdAttr = source.local_WALLET_ITEMAttr.walletItemOriginIdAttr;
target.walletItemOriginLabelAttr = source.local_WALLET_ITEMAttr.originLabelAttr;
target.walletItemStatusIdAttr = source.local_WALLET_ITEMAttr.walletItemStatusIdAttr;
target.titleAttr = source.local_WALLET_ITEMAttr.titleAttr;
target.descriptionAttr = source.local_WALLET_ITEMAttr.descriptionAttr;
target.app_PictureAttr.pictureIdAttr = source.local_WALLET_ITEMAttr.localPictureIDAttr;
target.actionDateTimeAttr = source.local_WALLET_ITEMAttr.actionDateTimeAttr;
target.expireDateTimeAttr = source.local_WALLET_ITEMAttr.expireDateTimeAttr;
target.assetIdAttr = source.local_WALLET_ITEMAttr.assetIdAttr;
target.app_UserWtfPrizeAddressAttr.nameAttr = source.local_WALLET_ITEMAttr.prizeAddressNameAttr;
target.app_UserWtfPrizeAddressAttr.addressStreetAttr = source.local_WALLET_ITEMAttr.prizeAddressStreetAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCityAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr;
target.app_UserWtfPrizeAddressAttr.msisdnAttr = source.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr;
target.app_UserWtfPrizeAddressAttr.authorizeAttr = source.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr;
target.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr = source.local_WALLET_ITEMAttr.prizeRequiredAddressAttr;
target.app_VoucherAttr.codeAttr = source.local_WALLET_ITEMAttr.voucherCodeAttr;
target.app_VoucherAttr.voucherTypeIdAttr = source.local_WALLET_ITEMAttr.voucherTypeIdAttr;
target.app_VoucherAttr.voucherTypeLabelAttr = source.local_WALLET_ITEMAttr.voucherTypeLabelAttr;
target.app_VoucherAttr.expiresDateAttr = source.local_WALLET_ITEMAttr.voucherExpirationDateAttr;
target.statusLabelAttr = source.local_WALLET_ITEMAttr.statusLabelAttr;
return target;
});
// Execute Action: ListFilterCinemas
listFilterCinemasVar.value = OS.SystemActions.listFilter(getWalletItemsVar.value.listOut, function (p) {
return (p.local_WALLET_ITEMAttr.categoryLabelAttr === "Cinemas");
}, callContext);

// List_Cinemas = ListFilterCinemas.FilteredList
outVars.value.list_CinemasOut = OS.DataTypes.JSConversions.typeConvertRecordList(listFilterCinemasVar.value.filteredListOut, new WTF_MBPModel.App_WalletCardList(), function (source, target) {
target.walletItemIdAttr = source.local_WALLET_ITEMAttr.idAttr;
target.categoryLabelAttr = source.local_WALLET_ITEMAttr.categoryLabelAttr;
target.itemTypeIdAttr = source.local_WALLET_ITEMAttr.itemTypeIdAttr;
target.walletItemOriginIdAttr = source.local_WALLET_ITEMAttr.walletItemOriginIdAttr;
target.walletItemOriginLabelAttr = source.local_WALLET_ITEMAttr.originLabelAttr;
target.walletItemStatusIdAttr = source.local_WALLET_ITEMAttr.walletItemStatusIdAttr;
target.titleAttr = source.local_WALLET_ITEMAttr.titleAttr;
target.descriptionAttr = source.local_WALLET_ITEMAttr.descriptionAttr;
target.app_PictureAttr.pictureIdAttr = source.local_WALLET_ITEMAttr.localPictureIDAttr;
target.actionDateTimeAttr = source.local_WALLET_ITEMAttr.actionDateTimeAttr;
target.expireDateTimeAttr = source.local_WALLET_ITEMAttr.expireDateTimeAttr;
target.assetIdAttr = source.local_WALLET_ITEMAttr.assetIdAttr;
target.app_UserWtfPrizeAddressAttr.nameAttr = source.local_WALLET_ITEMAttr.prizeAddressNameAttr;
target.app_UserWtfPrizeAddressAttr.addressStreetAttr = source.local_WALLET_ITEMAttr.prizeAddressStreetAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCityAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr;
target.app_UserWtfPrizeAddressAttr.msisdnAttr = source.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr;
target.app_UserWtfPrizeAddressAttr.authorizeAttr = source.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr;
target.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr = source.local_WALLET_ITEMAttr.prizeRequiredAddressAttr;
target.app_VoucherAttr.codeAttr = source.local_WALLET_ITEMAttr.voucherCodeAttr;
target.app_VoucherAttr.voucherTypeIdAttr = source.local_WALLET_ITEMAttr.voucherTypeIdAttr;
target.app_VoucherAttr.voucherTypeLabelAttr = source.local_WALLET_ITEMAttr.voucherTypeLabelAttr;
target.app_VoucherAttr.expiresDateAttr = source.local_WALLET_ITEMAttr.voucherExpirationDateAttr;
target.statusLabelAttr = source.local_WALLET_ITEMAttr.statusLabelAttr;
return target;
});
// Execute Action: ListFilterRevolut
listFilterRevolutVar.value = OS.SystemActions.listFilter(getWalletItemsVar.value.listOut, function (p) {
return (p.local_WALLET_ITEMAttr.categoryLabelAttr === "Revolut");
}, callContext);

// List_Revolut = ListFilterRevolut.FilteredList
outVars.value.list_RevolutOut = OS.DataTypes.JSConversions.typeConvertRecordList(listFilterRevolutVar.value.filteredListOut, new WTF_MBPModel.App_WalletCardList(), function (source, target) {
target.walletItemIdAttr = source.local_WALLET_ITEMAttr.idAttr;
target.categoryLabelAttr = source.local_WALLET_ITEMAttr.categoryLabelAttr;
target.itemTypeIdAttr = source.local_WALLET_ITEMAttr.itemTypeIdAttr;
target.walletItemOriginIdAttr = source.local_WALLET_ITEMAttr.walletItemOriginIdAttr;
target.walletItemOriginLabelAttr = source.local_WALLET_ITEMAttr.originLabelAttr;
target.walletItemStatusIdAttr = source.local_WALLET_ITEMAttr.walletItemStatusIdAttr;
target.titleAttr = source.local_WALLET_ITEMAttr.titleAttr;
target.descriptionAttr = source.local_WALLET_ITEMAttr.descriptionAttr;
target.app_PictureAttr.pictureIdAttr = source.local_WALLET_ITEMAttr.localPictureIDAttr;
target.actionDateTimeAttr = source.local_WALLET_ITEMAttr.actionDateTimeAttr;
target.expireDateTimeAttr = source.local_WALLET_ITEMAttr.expireDateTimeAttr;
target.assetIdAttr = source.local_WALLET_ITEMAttr.assetIdAttr;
target.app_UserWtfPrizeAddressAttr.nameAttr = source.local_WALLET_ITEMAttr.prizeAddressNameAttr;
target.app_UserWtfPrizeAddressAttr.addressStreetAttr = source.local_WALLET_ITEMAttr.prizeAddressStreetAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCityAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr;
target.app_UserWtfPrizeAddressAttr.msisdnAttr = source.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr;
target.app_UserWtfPrizeAddressAttr.authorizeAttr = source.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr;
target.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr = source.local_WALLET_ITEMAttr.prizeRequiredAddressAttr;
target.app_VoucherAttr.codeAttr = source.local_WALLET_ITEMAttr.voucherCodeAttr;
target.app_VoucherAttr.voucherTypeIdAttr = source.local_WALLET_ITEMAttr.voucherTypeIdAttr;
target.app_VoucherAttr.voucherTypeLabelAttr = source.local_WALLET_ITEMAttr.voucherTypeLabelAttr;
target.app_VoucherAttr.expiresDateAttr = source.local_WALLET_ITEMAttr.voucherExpirationDateAttr;
target.statusLabelAttr = source.local_WALLET_ITEMAttr.statusLabelAttr;
return target;
});
// Execute Action: GetWTFGenericLabelCard
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("WTFGenericLabelCard", callContext).then(function (value) {
getWTFGenericLabelCardVar.value = value;
}).then(function () {
// Execute Action: ListFilterGeneric
listFilterGenericVar.value = OS.SystemActions.listFilter(getWalletItemsVar.value.listOut, function (p) {
return (p.local_WALLET_ITEMAttr.categoryLabelAttr === getWTFGenericLabelCardVar.value.valueOut);
}, callContext);

// List_Generic = ListFilterGeneric.FilteredList
outVars.value.list_GenericOut = OS.DataTypes.JSConversions.typeConvertRecordList(listFilterGenericVar.value.filteredListOut, new WTF_MBPModel.App_WalletCardList(), function (source, target) {
target.walletItemIdAttr = source.local_WALLET_ITEMAttr.idAttr;
target.categoryLabelAttr = source.local_WALLET_ITEMAttr.categoryLabelAttr;
target.itemTypeIdAttr = source.local_WALLET_ITEMAttr.itemTypeIdAttr;
target.walletItemOriginIdAttr = source.local_WALLET_ITEMAttr.walletItemOriginIdAttr;
target.walletItemOriginLabelAttr = source.local_WALLET_ITEMAttr.originLabelAttr;
target.walletItemStatusIdAttr = source.local_WALLET_ITEMAttr.walletItemStatusIdAttr;
target.titleAttr = source.local_WALLET_ITEMAttr.titleAttr;
target.descriptionAttr = source.local_WALLET_ITEMAttr.descriptionAttr;
target.app_PictureAttr.pictureIdAttr = source.local_WALLET_ITEMAttr.localPictureIDAttr;
target.actionDateTimeAttr = source.local_WALLET_ITEMAttr.actionDateTimeAttr;
target.expireDateTimeAttr = source.local_WALLET_ITEMAttr.expireDateTimeAttr;
target.assetIdAttr = source.local_WALLET_ITEMAttr.assetIdAttr;
target.app_UserWtfPrizeAddressAttr.nameAttr = source.local_WALLET_ITEMAttr.prizeAddressNameAttr;
target.app_UserWtfPrizeAddressAttr.addressStreetAttr = source.local_WALLET_ITEMAttr.prizeAddressStreetAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCityAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr;
target.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr = source.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr;
target.app_UserWtfPrizeAddressAttr.msisdnAttr = source.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr;
target.app_UserWtfPrizeAddressAttr.authorizeAttr = source.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr;
target.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr = source.local_WALLET_ITEMAttr.prizeRequiredAddressAttr;
target.app_VoucherAttr.codeAttr = source.local_WALLET_ITEMAttr.voucherCodeAttr;
target.app_VoucherAttr.voucherTypeIdAttr = source.local_WALLET_ITEMAttr.voucherTypeIdAttr;
target.app_VoucherAttr.voucherTypeLabelAttr = source.local_WALLET_ITEMAttr.voucherTypeLabelAttr;
target.app_VoucherAttr.expiresDateAttr = source.local_WALLET_ITEMAttr.voucherExpirationDateAttr;
target.statusLabelAttr = source.local_WALLET_ITEMAttr.statusLabelAttr;
return target;
});
return OS.Flow.breakAsync();
});
}

});
}

});
}).then(function () {
// ForceRefresh = True
outVars.value.forceRefreshOut = true;
});
}).then(function () {
// CategoryLabel_UberEats
// AppWalletCard.CategoryLabel = "Uber Eats"
vars.value.appWalletCardVar.categoryLabelAttr = "Uber Eats";
// Execute Action: ListAppend
OS.SystemActions.listAppend(outVars.value.list_UberEatsEmptyOut, vars.value.appWalletCardVar, callContext);
// CategoryLabel_UberRiders
// AppWalletCard.CategoryLabel = "Uber Riders"
vars.value.appWalletCardVar.categoryLabelAttr = "Uber Riders";
// Execute Action: ListAppend2
OS.SystemActions.listAppend(outVars.value.list_UberRidersEmptyOut, vars.value.appWalletCardVar, callContext);
// CategoryLabel_Cinemas
// AppWalletCard.CategoryLabel = "Cinemas"
vars.value.appWalletCardVar.categoryLabelAttr = "Cinemas";
// Execute Action: ListAppend3
OS.SystemActions.listAppend(outVars.value.list_CinemasEmptyOut, vars.value.appWalletCardVar, callContext);
// CategoryLabel_Revolut
// AppWalletCard.CategoryLabel = "Revolut"
vars.value.appWalletCardVar.categoryLabelAttr = "Revolut";
// Execute Action: ListAppend4
OS.SystemActions.listAppend(outVars.value.list_RevolutEmptyOut, vars.value.appWalletCardVar, callContext);
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Wallet.GetAllLocalWalletItems$vars", [{
name: "IsOfflineMode",
attrName: "isOfflineModeInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "AppWalletCard",
attrName: "appWalletCardVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_WalletCardRec();
},
complexType: WTF_BPModel.App_WalletCardRec
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Wallet.GetAllLocalWalletItems$outVars", [{
name: "List_UberEatsEmpty",
attrName: "list_UberEatsEmptyOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_UberRidersEmpty",
attrName: "list_UberRidersEmptyOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_CinemasEmpty",
attrName: "list_CinemasEmptyOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_RevolutEmpty",
attrName: "list_RevolutEmptyOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Revolut",
attrName: "list_RevolutOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Comunications",
attrName: "list_ComunicationsOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_FilmesVod",
attrName: "list_FilmesVodOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_UberEats",
attrName: "list_UberEatsOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Cinemas",
attrName: "list_CinemasOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Equipments",
attrName: "list_EquipmentsOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Golden",
attrName: "list_GoldenOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_UberRiders",
attrName: "list_UberRidersOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Generic",
attrName: "list_GenericOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "ForceRefresh",
attrName: "forceRefreshOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.getAllLocalWalletItems$Action = function (isOfflineModeIn) {
isOfflineModeIn = (isOfflineModeIn === undefined) ? false : isOfflineModeIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getAllLocalWalletItems$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(isOfflineModeIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
List_UberEatsEmpty: actionResults.list_UberEatsEmptyOut,
List_UberRidersEmpty: actionResults.list_UberRidersEmptyOut,
List_CinemasEmpty: actionResults.list_CinemasEmptyOut,
List_RevolutEmpty: actionResults.list_RevolutEmptyOut,
List_Revolut: actionResults.list_RevolutOut,
List_Comunications: actionResults.list_ComunicationsOut,
List_FilmesVod: actionResults.list_FilmesVodOut,
List_UberEats: actionResults.list_UberEatsOut,
List_Cinemas: actionResults.list_CinemasOut,
List_Equipments: actionResults.list_EquipmentsOut,
List_Golden: actionResults.list_GoldenOut,
List_UberRiders: actionResults.list_UberRidersOut,
List_Generic: actionResults.list_GenericOut,
ForceRefresh: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.forceRefreshOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$GetAllMobileConfigs_MBP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_ConfigList", "WTF_MBP.controller$ServerAction.GetAllMobileConfigs_BP", "WTF_MBP.model$Local_APP_CONFIGRecordList", "WTF_MBP.controller$Cache_ValidationByService", "WTF_MBP.model$STR_CACHE_SERVICERec", "WTF_MBP.controller$GetCacheServiceID", "WTF_MBP.model$Local_APP_CONFIGRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getAllMobileConfigs_MBP$Action = function (forceRefreshIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.APP_Config.GetAllMobileConfigs_MBP$vars"))());
vars.value.forceRefreshInLocal = forceRefreshIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getAllMobileConfigValues_BPVar = new OS.DataTypes.VariableHolder();
var cache_ValidationByServiceVar = new OS.DataTypes.VariableHolder();
var getLocalAPPCONFIGSVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_APP_CONFIGRecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.APP_Config.GetAllMobileConfigs_MBP$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: Cache_ValidationByService
return WTF_MBPController.default.cache_ValidationByService$Action(WTF_MBPController.default.getCacheServiceID$Action(callContext.withoutIterationContext()).cacheServicesOut.appConfigAttr, false, false, OS.DataTypes.DateTime.defaultValue, callContext).then(function (value) {
cache_ValidationByServiceVar.value = value;
}).then(function () {
// ForceRefresh and Online?
return OS.Flow.executeSequence(function () {
if((!((vars.value.forceRefreshInLocal && cache_ValidationByServiceVar.value.isOnlineOut)))) {
// Offline or UseCache?
return OS.Flow.executeSequence(function () {
if(((!(cache_ValidationByServiceVar.value.isOnlineOut) || cache_ValidationByServiceVar.value.useCacheOut))) {
// Aggregate: GetLocalAPPCONFIGS
var getLocalAPPCONFIGSAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_APP_CONFIGRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1";
} else {
selectSql += "\"ENLocal_APP_CONFIG\".\"Key\" o0, \"ENLocal_APP_CONFIG\".\"Value\" o1";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_APP_CONFIG\" \"ENLocal_APP_CONFIG\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_APP_CONFIGRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_APP_CONFIGAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalAPPCONFIGSVar.value;
});
};
return getLocalAPPCONFIGSAggr().then(function () {
// No records
if((!(getLocalAPPCONFIGSVar.value.listOut.isEmpty))) {
return OS.Flow.returnAsync(outVars.value);

}

});
}

});
}

});
}).then(function () {
// Execute Action: GetAllMobileConfigValues_BP
return controller.getAllMobileConfigs_BP$ServerAction(callContext).then(function (value) {
getAllMobileConfigValues_BPVar.value = value;
}).then(function () {
// Execute Action: DeleteAllLocal_APP_CONFIG
return WTF_MBPModel.entities.Local_APP_CONFIG.deleteAll(callContext);
}).then(function () {
// Execute Action: CreateOrUpdateAllLocal_APP_CONFIG
return WTF_MBPModel.entities.Local_APP_CONFIG.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(getAllMobileConfigValues_BPVar.value.configListOut, new WTF_MBPModel.Local_APP_CONFIGRecordList(), function (source, target) {
target.local_APP_CONFIGAttr.keyAttr = OS.BuiltinFunctions.textToIdentifier(source.keyAttr);
target.local_APP_CONFIGAttr.valueAttr = source.valueAttr;
return target;
}), callContext);
});
});
}).catch(function (ex) {
OS.Logger.trace("APP_Config.GetAllMobileConfigs_MBP", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.APP_Config.GetAllMobileConfigs_MBP$vars", [{
name: "ForceRefresh",
attrName: "forceRefreshInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.APP_Config.GetAllMobileConfigs_MBP$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.getAllMobileConfigs_MBP$Action = function (forceRefreshIn) {
forceRefreshIn = (forceRefreshIn === undefined) ? false : forceRefreshIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getAllMobileConfigs_MBP$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(forceRefreshIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$GetAllWalletItems", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_WalletCardList", "WTF_MBP.controller$GetAllLocalWalletItems", "WTF_MBP.model$Local_WALLET_ITEMRecordList", "WTF_MBP.controller$Cache_ValidationByService", "WTF_MBP.controller$GetConfigValueAsText_MBP", "WTF_MBP.controller$ServerAction.Wallet_GetAll", "WTF_MBP.model$STR_CACHE_SERVICERec", "WTF_MBP.controller$GetCacheServiceID", "WTF_MBP.model$Local_WALLET_ITEMRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getAllWalletItems$Action = function (userWtfIdIn, refreshTokenIn, forceRefreshIn, isOfflineModeIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Wallet.GetAllWalletItems$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
vars.value.forceRefreshInLocal = forceRefreshIn;
vars.value.isOfflineModeInLocal = isOfflineModeIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var wallet_GetAllVar = new OS.DataTypes.VariableHolder();
var getAllLocalWalletItemsVar = new OS.DataTypes.VariableHolder();
var cache_ValidationByServiceVar = new OS.DataTypes.VariableHolder();
var getWTFGenericLabelCard2Var = new OS.DataTypes.VariableHolder();
var getWalletItemsVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_WALLET_ITEMRecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Wallet.GetAllWalletItems$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.doWhileAsync(function () {
return false;
}, function () {
// Execute Action: Cache_ValidationByService
return WTF_MBPController.default.cache_ValidationByService$Action(WTF_MBPController.default.getCacheServiceID$Action(callContext.withoutIterationContext()).cacheServicesOut.walletItemsAttr, false, false, OS.DataTypes.DateTime.defaultValue, callContext).then(function (value) {
cache_ValidationByServiceVar.value = value;
}).then(function () {
if((!(vars.value.isOfflineModeInLocal))) {
// ForceRefresh
if((vars.value.forceRefreshInLocal)) {
return OS.Flow.breakAsync();
} else {
// UseCache?
if((!(cache_ValidationByServiceVar.value.useCacheOut))) {
return OS.Flow.breakAsync();
}

}

}

// Execute Action: GetAllLocalWalletItems
return WTF_MBPController.default.getAllLocalWalletItems$Action(vars.value.isOfflineModeInLocal, callContext).then(function (value) {
getAllLocalWalletItemsVar.value = value;
});
}).then(function () {
// ForceRefresh and Online
if((!((getAllLocalWalletItemsVar.value.forceRefreshOut && !(vars.value.isOfflineModeInLocal))))) {
// SetOutput
// Success = True
outVars.value.successOut = true;
// List_Generic = GetAllLocalWalletItems.List_Generic
outVars.value.list_GenericOut = getAllLocalWalletItemsVar.value.list_GenericOut;
// List_UberEatsEmpty = GetAllLocalWalletItems.List_UberEatsEmpty
outVars.value.list_UberEatsEmptyOut = getAllLocalWalletItemsVar.value.list_UberEatsEmptyOut;
// List_UberRidersEmpty = GetAllLocalWalletItems.List_UberRidersEmpty
outVars.value.list_UberRidersEmptyOut = getAllLocalWalletItemsVar.value.list_UberRidersEmptyOut;
// List_CinemasEmpty = GetAllLocalWalletItems.List_CinemasEmpty
outVars.value.list_CinemasEmptyOut = getAllLocalWalletItemsVar.value.list_CinemasEmptyOut;
// List_Comunications = GetAllLocalWalletItems.List_Comunications
outVars.value.list_ComunicationsOut = getAllLocalWalletItemsVar.value.list_ComunicationsOut;
// List_FilmesVod = GetAllLocalWalletItems.List_FilmesVod
outVars.value.list_FilmesVodOut = getAllLocalWalletItemsVar.value.list_FilmesVodOut;
// List_UberEats = GetAllLocalWalletItems.List_UberEats
outVars.value.list_UberEatsOut = getAllLocalWalletItemsVar.value.list_UberEatsOut;
// List_Cinemas = GetAllLocalWalletItems.List_Cinemas
outVars.value.list_CinemasOut = getAllLocalWalletItemsVar.value.list_CinemasOut;
// List_Equipments = GetAllLocalWalletItems.List_Equipments
outVars.value.list_EquipmentsOut = getAllLocalWalletItemsVar.value.list_EquipmentsOut;
// List_Golden = GetAllLocalWalletItems.List_Golden
outVars.value.list_GoldenOut = getAllLocalWalletItemsVar.value.list_GoldenOut;
// List_UberRiders = GetAllLocalWalletItems.List_UberRiders
outVars.value.list_UberRidersOut = getAllLocalWalletItemsVar.value.list_UberRidersOut;
// List_RevolutEmpty = GetAllLocalWalletItems.List_RevolutEmpty
outVars.value.list_RevolutEmptyOut = getAllLocalWalletItemsVar.value.list_RevolutEmptyOut;
// List_Revolut = GetAllLocalWalletItems.List_Revolut
outVars.value.list_RevolutOut = getAllLocalWalletItemsVar.value.list_RevolutOut;
return OS.Flow.returnAsync(outVars.value);

}

});
}).then(function () {
// Execute Action: Wallet_GetAll
return controller.wallet_GetAll$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, callContext).then(function (value) {
wallet_GetAllVar.value = value;
});
}).then(function () {
// WalletGetAll.Success?
return OS.Flow.executeSequence(function () {
if((wallet_GetAllVar.value.successOut)) {
// Aggregate: GetWalletItems
var getWalletItemsAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_WALLET_ITEMRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}

var qploUserWTFID = vars.value.userWtfIdInLocal;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25";
} else {
selectSql += "\"ENLocal_WALLET_ITEM\".\"Id\" o0, \"ENLocal_WALLET_ITEM\".\"CategoryLabel\" o1, \"ENLocal_WALLET_ITEM\".\"Title\" o2, \"ENLocal_WALLET_ITEM\".\"Description\" o3, \"ENLocal_WALLET_ITEM\".\"OriginLabel\" o4, \"ENLocal_WALLET_ITEM\".\"VoucherCode\" o5, \"ENLocal_WALLET_ITEM\".\"VoucherTypeId\" o6, \"ENLocal_WALLET_ITEM\".\"VoucherTypeLabel\" o7, \"ENLocal_WALLET_ITEM\".\"VoucherExpirationDate\" o8, \"ENLocal_WALLET_ITEM\".\"PrizeAddressName\" o9, \"ENLocal_WALLET_ITEM\".\"PrizeAddressStreet\" o10, \"ENLocal_WALLET_ITEM\".\"PrizeAddressPostalCity\" o11, \"ENLocal_WALLET_ITEM\".\"PrizeAddressPostalCode\" o12, \"ENLocal_WALLET_ITEM\".\"PrizeAddressMSISDN\" o13, \"ENLocal_WALLET_ITEM\".\"PrizeAddressAuthorize\" o14, \"ENLocal_WALLET_ITEM\".\"PrizeRequiredAddress\" o15, \"ENLocal_WALLET_ITEM\".\"CreatedAt\" o16, \"ENLocal_WALLET_ITEM\".\"UserWTFID\" o17, \"ENLocal_WALLET_ITEM\".\"LocalPictureID\" o18, \"ENLocal_WALLET_ITEM\".\"WalletItemOriginId\" o19, \"ENLocal_WALLET_ITEM\".\"WalletItemStatusId\" o20, \"ENLocal_WALLET_ITEM\".\"AssetId\" o21, \"ENLocal_WALLET_ITEM\".\"StatusLabel\" o22, \"ENLocal_WALLET_ITEM\".\"ActionDateTime\" o23, \"ENLocal_WALLET_ITEM\".\"ExpireDateTime\" o24, \"ENLocal_WALLET_ITEM\".\"ItemTypeId\" o25";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_WALLET_ITEM\" \"ENLocal_WALLET_ITEM\"";
fromAndWhereSql += " WHERE (\"ENLocal_WALLET_ITEM\".\"UserWTFID\" = CAST((:qploUserWTFID) AS INTEGER))";
argsList.add("qploUserWTFID", /*LONGINTEGER*/ 4, qploUserWTFID);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_WALLET_ITEMRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_WALLET_ITEMAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getWalletItemsVar.value;
});
};
return getWalletItemsAggr().then(function () {
// GetWalletItems
// Foreach GetWalletItems.List
callContext.iterationContext.registerIterationStart(getWalletItemsVar.value.listOut);
}).then(function () {
return OS.Flow.tryFinally(function () {
var getWalletItemsIterator = callContext.iterationContext.getIterator(getWalletItemsVar.value.listOut);
var getWalletItemsIndexMax = getWalletItemsVar.value.listOut.length;
var getWalletItemsIndex = 0;
return OS.Flow.whileAsync(function () {
return (((getWalletItemsIndex < getWalletItemsVar.value.listOut.length)) && (getWalletItemsIndexMax > 0));
}, function () {
getWalletItemsIterator.currentRowNumber = getWalletItemsIndex;
// Execute Action: DeleteLocalWalletItem
return WTF_MBPModel.entities.Local_WALLET_ITEM.delete(getWalletItemsVar.value.listOut.getItem(getWalletItemsIndex.valueOf()).local_WALLET_ITEMAttr.idAttr, callContext).then(function () {
getWalletItemsIndexMax--;
getWalletItemsIndex++;
});
});
}, function () {
callContext.iterationContext.registerIterationEnd(getWalletItemsVar.value.listOut);
});
}).then(function () {
// Execute Action: CreateWalletItemsCommunications
return WTF_MBPModel.entities.Local_WALLET_ITEM.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(wallet_GetAllVar.value.list_ComunicationsOut, new WTF_MBPModel.Local_WALLET_ITEMRecordList(), function (source, target) {
target.local_WALLET_ITEMAttr.idAttr = OS.BuiltinFunctions.longIntegerToIdentifier(source.walletItemIdAttr);
target.local_WALLET_ITEMAttr.categoryLabelAttr = source.categoryLabelAttr;
target.local_WALLET_ITEMAttr.titleAttr = source.titleAttr;
target.local_WALLET_ITEMAttr.descriptionAttr = source.descriptionAttr;
target.local_WALLET_ITEMAttr.originLabelAttr = source.walletItemOriginLabelAttr;
target.local_WALLET_ITEMAttr.voucherCodeAttr = source.app_VoucherAttr.codeAttr;
target.local_WALLET_ITEMAttr.voucherTypeIdAttr = source.app_VoucherAttr.voucherTypeIdAttr;
target.local_WALLET_ITEMAttr.voucherTypeLabelAttr = source.app_VoucherAttr.voucherTypeLabelAttr;
target.local_WALLET_ITEMAttr.voucherExpirationDateAttr = source.app_VoucherAttr.expiresDateAttr;
target.local_WALLET_ITEMAttr.prizeAddressNameAttr = source.app_UserWtfPrizeAddressAttr.nameAttr;
target.local_WALLET_ITEMAttr.prizeAddressStreetAttr = source.app_UserWtfPrizeAddressAttr.addressStreetAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCityAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr;
target.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr = source.app_UserWtfPrizeAddressAttr.msisdnAttr;
target.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr = source.app_UserWtfPrizeAddressAttr.authorizeAttr;
target.local_WALLET_ITEMAttr.prizeRequiredAddressAttr = source.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr;
target.local_WALLET_ITEMAttr.createdAtAttr = OS.BuiltinFunctions.currDateTime();
target.local_WALLET_ITEMAttr.userWTFIDAttr = vars.value.userWtfIdInLocal;
target.local_WALLET_ITEMAttr.localPictureIDAttr = source.app_PictureAttr.pictureIdAttr;
target.local_WALLET_ITEMAttr.walletItemOriginIdAttr = source.walletItemOriginIdAttr;
target.local_WALLET_ITEMAttr.walletItemStatusIdAttr = source.walletItemStatusIdAttr;
target.local_WALLET_ITEMAttr.assetIdAttr = source.assetIdAttr;
target.local_WALLET_ITEMAttr.statusLabelAttr = source.statusLabelAttr;
target.local_WALLET_ITEMAttr.actionDateTimeAttr = source.actionDateTimeAttr;
target.local_WALLET_ITEMAttr.expireDateTimeAttr = source.expireDateTimeAttr;
target.local_WALLET_ITEMAttr.itemTypeIdAttr = source.itemTypeIdAttr;
return target;
}), callContext).then(function () {
// Execute Action: CreateWalletItemsFilmesVOD
return WTF_MBPModel.entities.Local_WALLET_ITEM.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(wallet_GetAllVar.value.list_FilmesVodOut, new WTF_MBPModel.Local_WALLET_ITEMRecordList(), function (source, target) {
target.local_WALLET_ITEMAttr.idAttr = OS.BuiltinFunctions.longIntegerToIdentifier(source.walletItemIdAttr);
target.local_WALLET_ITEMAttr.categoryLabelAttr = source.categoryLabelAttr;
target.local_WALLET_ITEMAttr.titleAttr = source.titleAttr;
target.local_WALLET_ITEMAttr.descriptionAttr = source.descriptionAttr;
target.local_WALLET_ITEMAttr.originLabelAttr = source.walletItemOriginLabelAttr;
target.local_WALLET_ITEMAttr.voucherCodeAttr = source.app_VoucherAttr.codeAttr;
target.local_WALLET_ITEMAttr.voucherTypeIdAttr = source.app_VoucherAttr.voucherTypeIdAttr;
target.local_WALLET_ITEMAttr.voucherTypeLabelAttr = source.app_VoucherAttr.voucherTypeLabelAttr;
target.local_WALLET_ITEMAttr.voucherExpirationDateAttr = source.app_VoucherAttr.expiresDateAttr;
target.local_WALLET_ITEMAttr.prizeAddressNameAttr = source.app_UserWtfPrizeAddressAttr.nameAttr;
target.local_WALLET_ITEMAttr.prizeAddressStreetAttr = source.app_UserWtfPrizeAddressAttr.addressStreetAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCityAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr;
target.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr = source.app_UserWtfPrizeAddressAttr.msisdnAttr;
target.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr = source.app_UserWtfPrizeAddressAttr.authorizeAttr;
target.local_WALLET_ITEMAttr.prizeRequiredAddressAttr = source.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr;
target.local_WALLET_ITEMAttr.createdAtAttr = OS.BuiltinFunctions.currDateTime();
target.local_WALLET_ITEMAttr.userWTFIDAttr = vars.value.userWtfIdInLocal;
target.local_WALLET_ITEMAttr.localPictureIDAttr = source.app_PictureAttr.pictureIdAttr;
target.local_WALLET_ITEMAttr.walletItemOriginIdAttr = source.walletItemOriginIdAttr;
target.local_WALLET_ITEMAttr.walletItemStatusIdAttr = source.walletItemStatusIdAttr;
target.local_WALLET_ITEMAttr.assetIdAttr = source.assetIdAttr;
target.local_WALLET_ITEMAttr.statusLabelAttr = source.statusLabelAttr;
target.local_WALLET_ITEMAttr.actionDateTimeAttr = source.actionDateTimeAttr;
target.local_WALLET_ITEMAttr.expireDateTimeAttr = source.expireDateTimeAttr;
target.local_WALLET_ITEMAttr.itemTypeIdAttr = source.itemTypeIdAttr;
return target;
}), callContext);
}).then(function () {
// Execute Action: CreateWalletItemsUberEats
return WTF_MBPModel.entities.Local_WALLET_ITEM.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(wallet_GetAllVar.value.list_UberEatsOut, new WTF_MBPModel.Local_WALLET_ITEMRecordList(), function (source, target) {
target.local_WALLET_ITEMAttr.idAttr = OS.BuiltinFunctions.longIntegerToIdentifier(source.walletItemIdAttr);
target.local_WALLET_ITEMAttr.categoryLabelAttr = source.categoryLabelAttr;
target.local_WALLET_ITEMAttr.titleAttr = source.titleAttr;
target.local_WALLET_ITEMAttr.descriptionAttr = source.descriptionAttr;
target.local_WALLET_ITEMAttr.originLabelAttr = source.walletItemOriginLabelAttr;
target.local_WALLET_ITEMAttr.voucherCodeAttr = source.app_VoucherAttr.codeAttr;
target.local_WALLET_ITEMAttr.voucherTypeIdAttr = source.app_VoucherAttr.voucherTypeIdAttr;
target.local_WALLET_ITEMAttr.voucherTypeLabelAttr = source.app_VoucherAttr.voucherTypeLabelAttr;
target.local_WALLET_ITEMAttr.voucherExpirationDateAttr = source.app_VoucherAttr.expiresDateAttr;
target.local_WALLET_ITEMAttr.prizeAddressNameAttr = source.app_UserWtfPrizeAddressAttr.nameAttr;
target.local_WALLET_ITEMAttr.prizeAddressStreetAttr = source.app_UserWtfPrizeAddressAttr.addressStreetAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCityAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr;
target.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr = source.app_UserWtfPrizeAddressAttr.msisdnAttr;
target.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr = source.app_UserWtfPrizeAddressAttr.authorizeAttr;
target.local_WALLET_ITEMAttr.prizeRequiredAddressAttr = source.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr;
target.local_WALLET_ITEMAttr.createdAtAttr = OS.BuiltinFunctions.currDateTime();
target.local_WALLET_ITEMAttr.userWTFIDAttr = vars.value.userWtfIdInLocal;
target.local_WALLET_ITEMAttr.localPictureIDAttr = source.app_PictureAttr.pictureIdAttr;
target.local_WALLET_ITEMAttr.walletItemOriginIdAttr = source.walletItemOriginIdAttr;
target.local_WALLET_ITEMAttr.walletItemStatusIdAttr = source.walletItemStatusIdAttr;
target.local_WALLET_ITEMAttr.assetIdAttr = source.assetIdAttr;
target.local_WALLET_ITEMAttr.statusLabelAttr = source.statusLabelAttr;
target.local_WALLET_ITEMAttr.actionDateTimeAttr = source.actionDateTimeAttr;
target.local_WALLET_ITEMAttr.expireDateTimeAttr = source.expireDateTimeAttr;
target.local_WALLET_ITEMAttr.itemTypeIdAttr = source.itemTypeIdAttr;
return target;
}), callContext);
}).then(function () {
// Execute Action: CreateWalletItemsUberRiders
return WTF_MBPModel.entities.Local_WALLET_ITEM.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(wallet_GetAllVar.value.list_UberRidersOut, new WTF_MBPModel.Local_WALLET_ITEMRecordList(), function (source, target) {
target.local_WALLET_ITEMAttr.idAttr = OS.BuiltinFunctions.longIntegerToIdentifier(source.walletItemIdAttr);
target.local_WALLET_ITEMAttr.categoryLabelAttr = source.categoryLabelAttr;
target.local_WALLET_ITEMAttr.titleAttr = source.titleAttr;
target.local_WALLET_ITEMAttr.descriptionAttr = source.descriptionAttr;
target.local_WALLET_ITEMAttr.originLabelAttr = source.walletItemOriginLabelAttr;
target.local_WALLET_ITEMAttr.voucherCodeAttr = source.app_VoucherAttr.codeAttr;
target.local_WALLET_ITEMAttr.voucherTypeIdAttr = source.app_VoucherAttr.voucherTypeIdAttr;
target.local_WALLET_ITEMAttr.voucherTypeLabelAttr = source.app_VoucherAttr.voucherTypeLabelAttr;
target.local_WALLET_ITEMAttr.voucherExpirationDateAttr = source.app_VoucherAttr.expiresDateAttr;
target.local_WALLET_ITEMAttr.prizeAddressNameAttr = source.app_UserWtfPrizeAddressAttr.nameAttr;
target.local_WALLET_ITEMAttr.prizeAddressStreetAttr = source.app_UserWtfPrizeAddressAttr.addressStreetAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCityAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr;
target.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr = source.app_UserWtfPrizeAddressAttr.msisdnAttr;
target.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr = source.app_UserWtfPrizeAddressAttr.authorizeAttr;
target.local_WALLET_ITEMAttr.prizeRequiredAddressAttr = source.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr;
target.local_WALLET_ITEMAttr.createdAtAttr = OS.BuiltinFunctions.currDateTime();
target.local_WALLET_ITEMAttr.userWTFIDAttr = vars.value.userWtfIdInLocal;
target.local_WALLET_ITEMAttr.localPictureIDAttr = source.app_PictureAttr.pictureIdAttr;
target.local_WALLET_ITEMAttr.walletItemOriginIdAttr = source.walletItemOriginIdAttr;
target.local_WALLET_ITEMAttr.walletItemStatusIdAttr = source.walletItemStatusIdAttr;
target.local_WALLET_ITEMAttr.assetIdAttr = source.assetIdAttr;
target.local_WALLET_ITEMAttr.statusLabelAttr = source.statusLabelAttr;
target.local_WALLET_ITEMAttr.actionDateTimeAttr = source.actionDateTimeAttr;
target.local_WALLET_ITEMAttr.expireDateTimeAttr = source.expireDateTimeAttr;
target.local_WALLET_ITEMAttr.itemTypeIdAttr = source.itemTypeIdAttr;
return target;
}), callContext);
}).then(function () {
// Execute Action: CreateWalletItemsCinemas
return WTF_MBPModel.entities.Local_WALLET_ITEM.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(wallet_GetAllVar.value.list_CinemasOut, new WTF_MBPModel.Local_WALLET_ITEMRecordList(), function (source, target) {
target.local_WALLET_ITEMAttr.idAttr = OS.BuiltinFunctions.longIntegerToIdentifier(source.walletItemIdAttr);
target.local_WALLET_ITEMAttr.categoryLabelAttr = source.categoryLabelAttr;
target.local_WALLET_ITEMAttr.titleAttr = source.titleAttr;
target.local_WALLET_ITEMAttr.descriptionAttr = source.descriptionAttr;
target.local_WALLET_ITEMAttr.originLabelAttr = source.walletItemOriginLabelAttr;
target.local_WALLET_ITEMAttr.voucherCodeAttr = source.app_VoucherAttr.codeAttr;
target.local_WALLET_ITEMAttr.voucherTypeIdAttr = source.app_VoucherAttr.voucherTypeIdAttr;
target.local_WALLET_ITEMAttr.voucherTypeLabelAttr = source.app_VoucherAttr.voucherTypeLabelAttr;
target.local_WALLET_ITEMAttr.voucherExpirationDateAttr = source.app_VoucherAttr.expiresDateAttr;
target.local_WALLET_ITEMAttr.prizeAddressNameAttr = source.app_UserWtfPrizeAddressAttr.nameAttr;
target.local_WALLET_ITEMAttr.prizeAddressStreetAttr = source.app_UserWtfPrizeAddressAttr.addressStreetAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCityAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr;
target.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr = source.app_UserWtfPrizeAddressAttr.msisdnAttr;
target.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr = source.app_UserWtfPrizeAddressAttr.authorizeAttr;
target.local_WALLET_ITEMAttr.prizeRequiredAddressAttr = source.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr;
target.local_WALLET_ITEMAttr.createdAtAttr = OS.BuiltinFunctions.currDateTime();
target.local_WALLET_ITEMAttr.userWTFIDAttr = vars.value.userWtfIdInLocal;
target.local_WALLET_ITEMAttr.localPictureIDAttr = source.app_PictureAttr.pictureIdAttr;
target.local_WALLET_ITEMAttr.walletItemOriginIdAttr = source.walletItemOriginIdAttr;
target.local_WALLET_ITEMAttr.walletItemStatusIdAttr = source.walletItemStatusIdAttr;
target.local_WALLET_ITEMAttr.assetIdAttr = source.assetIdAttr;
target.local_WALLET_ITEMAttr.statusLabelAttr = source.statusLabelAttr;
target.local_WALLET_ITEMAttr.actionDateTimeAttr = source.actionDateTimeAttr;
target.local_WALLET_ITEMAttr.expireDateTimeAttr = source.expireDateTimeAttr;
target.local_WALLET_ITEMAttr.itemTypeIdAttr = source.itemTypeIdAttr;
return target;
}), callContext);
}).then(function () {
// Execute Action: CreateWalletItemsRevolut
return WTF_MBPModel.entities.Local_WALLET_ITEM.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(wallet_GetAllVar.value.list_RevolutOut, new WTF_MBPModel.Local_WALLET_ITEMRecordList(), function (source, target) {
target.local_WALLET_ITEMAttr.idAttr = OS.BuiltinFunctions.longIntegerToIdentifier(source.walletItemIdAttr);
target.local_WALLET_ITEMAttr.categoryLabelAttr = source.categoryLabelAttr;
target.local_WALLET_ITEMAttr.titleAttr = source.titleAttr;
target.local_WALLET_ITEMAttr.descriptionAttr = source.descriptionAttr;
target.local_WALLET_ITEMAttr.originLabelAttr = source.walletItemOriginLabelAttr;
target.local_WALLET_ITEMAttr.voucherCodeAttr = source.app_VoucherAttr.codeAttr;
target.local_WALLET_ITEMAttr.voucherTypeIdAttr = source.app_VoucherAttr.voucherTypeIdAttr;
target.local_WALLET_ITEMAttr.voucherTypeLabelAttr = source.app_VoucherAttr.voucherTypeLabelAttr;
target.local_WALLET_ITEMAttr.voucherExpirationDateAttr = source.app_VoucherAttr.expiresDateAttr;
target.local_WALLET_ITEMAttr.prizeAddressNameAttr = source.app_UserWtfPrizeAddressAttr.nameAttr;
target.local_WALLET_ITEMAttr.prizeAddressStreetAttr = source.app_UserWtfPrizeAddressAttr.addressStreetAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCityAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr;
target.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr = source.app_UserWtfPrizeAddressAttr.msisdnAttr;
target.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr = source.app_UserWtfPrizeAddressAttr.authorizeAttr;
target.local_WALLET_ITEMAttr.prizeRequiredAddressAttr = source.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr;
target.local_WALLET_ITEMAttr.createdAtAttr = OS.BuiltinFunctions.currDateTime();
target.local_WALLET_ITEMAttr.userWTFIDAttr = vars.value.userWtfIdInLocal;
target.local_WALLET_ITEMAttr.localPictureIDAttr = source.app_PictureAttr.pictureIdAttr;
target.local_WALLET_ITEMAttr.walletItemOriginIdAttr = source.walletItemOriginIdAttr;
target.local_WALLET_ITEMAttr.walletItemStatusIdAttr = source.walletItemStatusIdAttr;
target.local_WALLET_ITEMAttr.assetIdAttr = source.assetIdAttr;
target.local_WALLET_ITEMAttr.statusLabelAttr = source.statusLabelAttr;
target.local_WALLET_ITEMAttr.actionDateTimeAttr = source.actionDateTimeAttr;
target.local_WALLET_ITEMAttr.expireDateTimeAttr = source.expireDateTimeAttr;
target.local_WALLET_ITEMAttr.itemTypeIdAttr = source.itemTypeIdAttr;
return target;
}), callContext);
}).then(function () {
// Execute Action: CreateWalletItemsEquipments
return WTF_MBPModel.entities.Local_WALLET_ITEM.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(wallet_GetAllVar.value.list_EquipamentsOut, new WTF_MBPModel.Local_WALLET_ITEMRecordList(), function (source, target) {
target.local_WALLET_ITEMAttr.idAttr = OS.BuiltinFunctions.longIntegerToIdentifier(source.walletItemIdAttr);
target.local_WALLET_ITEMAttr.categoryLabelAttr = source.categoryLabelAttr;
target.local_WALLET_ITEMAttr.titleAttr = source.titleAttr;
target.local_WALLET_ITEMAttr.descriptionAttr = source.descriptionAttr;
target.local_WALLET_ITEMAttr.originLabelAttr = source.walletItemOriginLabelAttr;
target.local_WALLET_ITEMAttr.voucherCodeAttr = source.app_VoucherAttr.codeAttr;
target.local_WALLET_ITEMAttr.voucherTypeIdAttr = source.app_VoucherAttr.voucherTypeIdAttr;
target.local_WALLET_ITEMAttr.voucherTypeLabelAttr = source.app_VoucherAttr.voucherTypeLabelAttr;
target.local_WALLET_ITEMAttr.voucherExpirationDateAttr = source.app_VoucherAttr.expiresDateAttr;
target.local_WALLET_ITEMAttr.prizeAddressNameAttr = source.app_UserWtfPrizeAddressAttr.nameAttr;
target.local_WALLET_ITEMAttr.prizeAddressStreetAttr = source.app_UserWtfPrizeAddressAttr.addressStreetAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCityAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr;
target.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr = source.app_UserWtfPrizeAddressAttr.msisdnAttr;
target.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr = source.app_UserWtfPrizeAddressAttr.authorizeAttr;
target.local_WALLET_ITEMAttr.prizeRequiredAddressAttr = source.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr;
target.local_WALLET_ITEMAttr.createdAtAttr = OS.BuiltinFunctions.currDateTime();
target.local_WALLET_ITEMAttr.userWTFIDAttr = vars.value.userWtfIdInLocal;
target.local_WALLET_ITEMAttr.localPictureIDAttr = source.app_PictureAttr.pictureIdAttr;
target.local_WALLET_ITEMAttr.walletItemOriginIdAttr = source.walletItemOriginIdAttr;
target.local_WALLET_ITEMAttr.walletItemStatusIdAttr = source.walletItemStatusIdAttr;
target.local_WALLET_ITEMAttr.assetIdAttr = source.assetIdAttr;
target.local_WALLET_ITEMAttr.statusLabelAttr = source.statusLabelAttr;
target.local_WALLET_ITEMAttr.actionDateTimeAttr = source.actionDateTimeAttr;
target.local_WALLET_ITEMAttr.expireDateTimeAttr = source.expireDateTimeAttr;
target.local_WALLET_ITEMAttr.itemTypeIdAttr = source.itemTypeIdAttr;
return target;
}), callContext);
}).then(function () {
// Execute Action: CreateWalletItemsGolden
return WTF_MBPModel.entities.Local_WALLET_ITEM.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(wallet_GetAllVar.value.list_GoldenOut, new WTF_MBPModel.Local_WALLET_ITEMRecordList(), function (source, target) {
target.local_WALLET_ITEMAttr.idAttr = OS.BuiltinFunctions.longIntegerToIdentifier(source.walletItemIdAttr);
target.local_WALLET_ITEMAttr.categoryLabelAttr = source.categoryLabelAttr;
target.local_WALLET_ITEMAttr.titleAttr = source.titleAttr;
target.local_WALLET_ITEMAttr.descriptionAttr = source.descriptionAttr;
target.local_WALLET_ITEMAttr.originLabelAttr = source.walletItemOriginLabelAttr;
target.local_WALLET_ITEMAttr.voucherCodeAttr = source.app_VoucherAttr.codeAttr;
target.local_WALLET_ITEMAttr.voucherTypeIdAttr = source.app_VoucherAttr.voucherTypeIdAttr;
target.local_WALLET_ITEMAttr.voucherTypeLabelAttr = source.app_VoucherAttr.voucherTypeLabelAttr;
target.local_WALLET_ITEMAttr.voucherExpirationDateAttr = source.app_VoucherAttr.expiresDateAttr;
target.local_WALLET_ITEMAttr.prizeAddressNameAttr = source.app_UserWtfPrizeAddressAttr.nameAttr;
target.local_WALLET_ITEMAttr.prizeAddressStreetAttr = source.app_UserWtfPrizeAddressAttr.addressStreetAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCityAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr;
target.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr = source.app_UserWtfPrizeAddressAttr.msisdnAttr;
target.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr = source.app_UserWtfPrizeAddressAttr.authorizeAttr;
target.local_WALLET_ITEMAttr.prizeRequiredAddressAttr = source.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr;
target.local_WALLET_ITEMAttr.createdAtAttr = OS.BuiltinFunctions.currDateTime();
target.local_WALLET_ITEMAttr.userWTFIDAttr = vars.value.userWtfIdInLocal;
target.local_WALLET_ITEMAttr.localPictureIDAttr = source.app_PictureAttr.pictureIdAttr;
target.local_WALLET_ITEMAttr.walletItemOriginIdAttr = source.walletItemOriginIdAttr;
target.local_WALLET_ITEMAttr.walletItemStatusIdAttr = source.walletItemStatusIdAttr;
target.local_WALLET_ITEMAttr.assetIdAttr = source.assetIdAttr;
target.local_WALLET_ITEMAttr.statusLabelAttr = source.statusLabelAttr;
target.local_WALLET_ITEMAttr.actionDateTimeAttr = source.actionDateTimeAttr;
target.local_WALLET_ITEMAttr.expireDateTimeAttr = source.expireDateTimeAttr;
target.local_WALLET_ITEMAttr.itemTypeIdAttr = source.itemTypeIdAttr;
return target;
}), callContext);
}).then(function () {
// Execute Action: GetWTFGenericLabelCard2
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("WTFGenericLabelCard", callContext).then(function (value) {
getWTFGenericLabelCard2Var.value = value;
});
}).then(function () {
// Execute Action: CreateWalletItemsGeneric
return WTF_MBPModel.entities.Local_WALLET_ITEM.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(wallet_GetAllVar.value.list_GenericOut, new WTF_MBPModel.Local_WALLET_ITEMRecordList(), function (source, target) {
target.local_WALLET_ITEMAttr.idAttr = OS.BuiltinFunctions.longIntegerToIdentifier(source.walletItemIdAttr);
target.local_WALLET_ITEMAttr.categoryLabelAttr = getWTFGenericLabelCard2Var.value.valueOut;
target.local_WALLET_ITEMAttr.titleAttr = source.titleAttr;
target.local_WALLET_ITEMAttr.descriptionAttr = source.descriptionAttr;
target.local_WALLET_ITEMAttr.originLabelAttr = source.walletItemOriginLabelAttr;
target.local_WALLET_ITEMAttr.voucherCodeAttr = source.app_VoucherAttr.codeAttr;
target.local_WALLET_ITEMAttr.voucherTypeIdAttr = source.app_VoucherAttr.voucherTypeIdAttr;
target.local_WALLET_ITEMAttr.voucherTypeLabelAttr = source.app_VoucherAttr.voucherTypeLabelAttr;
target.local_WALLET_ITEMAttr.voucherExpirationDateAttr = source.app_VoucherAttr.expiresDateAttr;
target.local_WALLET_ITEMAttr.prizeAddressNameAttr = source.app_UserWtfPrizeAddressAttr.nameAttr;
target.local_WALLET_ITEMAttr.prizeAddressStreetAttr = source.app_UserWtfPrizeAddressAttr.addressStreetAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCityAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCityAttr;
target.local_WALLET_ITEMAttr.prizeAddressPostalCodeAttr = source.app_UserWtfPrizeAddressAttr.addressPostalCodeAttr;
target.local_WALLET_ITEMAttr.prizeAddressMSISDNAttr = source.app_UserWtfPrizeAddressAttr.msisdnAttr;
target.local_WALLET_ITEMAttr.prizeAddressAuthorizeAttr = source.app_UserWtfPrizeAddressAttr.authorizeAttr;
target.local_WALLET_ITEMAttr.prizeRequiredAddressAttr = source.app_UserWtfPrizeAddressAttr.prizeRequiredAddressAttr;
target.local_WALLET_ITEMAttr.createdAtAttr = OS.BuiltinFunctions.currDateTime();
target.local_WALLET_ITEMAttr.userWTFIDAttr = vars.value.userWtfIdInLocal;
target.local_WALLET_ITEMAttr.localPictureIDAttr = source.app_PictureAttr.pictureIdAttr;
target.local_WALLET_ITEMAttr.walletItemOriginIdAttr = source.walletItemOriginIdAttr;
target.local_WALLET_ITEMAttr.walletItemStatusIdAttr = source.walletItemStatusIdAttr;
target.local_WALLET_ITEMAttr.assetIdAttr = source.assetIdAttr;
target.local_WALLET_ITEMAttr.statusLabelAttr = source.statusLabelAttr;
target.local_WALLET_ITEMAttr.actionDateTimeAttr = source.actionDateTimeAttr;
target.local_WALLET_ITEMAttr.expireDateTimeAttr = source.expireDateTimeAttr;
target.local_WALLET_ITEMAttr.itemTypeIdAttr = source.itemTypeIdAttr;
return target;
}), callContext);
}).then(function () {
// SetOutput
// Success = True
outVars.value.successOut = true;
// List_Generic = Wallet_GetAll.List_Generic
outVars.value.list_GenericOut = wallet_GetAllVar.value.list_GenericOut;
// List_UberEatsEmpty = Wallet_GetAll.List_UberEatsEmpty
outVars.value.list_UberEatsEmptyOut = wallet_GetAllVar.value.list_UberEatsEmptyOut;
// List_UberRidersEmpty = Wallet_GetAll.List_UberRidersEmpty
outVars.value.list_UberRidersEmptyOut = wallet_GetAllVar.value.list_UberRidersEmptyOut;
// List_CinemasEmpty = Wallet_GetAll.List_CinemasEmpty
outVars.value.list_CinemasEmptyOut = wallet_GetAllVar.value.list_CinemasEmptyOut;
// List_Comunications = Wallet_GetAll.List_Comunications
outVars.value.list_ComunicationsOut = wallet_GetAllVar.value.list_ComunicationsOut;
// List_FilmesVod = Wallet_GetAll.List_FilmesVod
outVars.value.list_FilmesVodOut = wallet_GetAllVar.value.list_FilmesVodOut;
// List_UberEats = Wallet_GetAll.List_UberEats
outVars.value.list_UberEatsOut = wallet_GetAllVar.value.list_UberEatsOut;
// List_Cinemas = Wallet_GetAll.List_Cinemas
outVars.value.list_CinemasOut = wallet_GetAllVar.value.list_CinemasOut;
// List_Equipments = Wallet_GetAll.List_Equipaments
outVars.value.list_EquipmentsOut = wallet_GetAllVar.value.list_EquipamentsOut;
// List_Golden = Wallet_GetAll.List_Golden
outVars.value.list_GoldenOut = wallet_GetAllVar.value.list_GoldenOut;
// List_UberRiders = Wallet_GetAll.List_UberRiders
outVars.value.list_UberRidersOut = wallet_GetAllVar.value.list_UberRidersOut;
// List_Revolut = Wallet_GetAll.List_Revolut
outVars.value.list_RevolutOut = wallet_GetAllVar.value.list_RevolutOut;
// List_RevolutEmpty = Wallet_GetAll.List_RevolutEmpty
outVars.value.list_RevolutEmptyOut = wallet_GetAllVar.value.list_RevolutEmptyOut;
});
});
} else {
// Success = False
outVars.value.successOut = false;
// Message = "Ocorreu um erro. Por favor tente novamente"
outVars.value.messageOut = "Ocorreu um erro. Por favor tente novamente";
}

});
});
}).catch(function (ex) {
OS.Logger.trace("Wallet.GetAllWalletItems", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// SetOutput
// Success = False
outVars.value.successOut = false;
// Message = "Não foi possível obter os itens de wallet do utilizador."
outVars.value.messageOut = "Não foi possível obter os itens de wallet do utilizador.";
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Wallet.GetAllWalletItems$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ForceRefresh",
attrName: "forceRefreshInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "IsOfflineMode",
attrName: "isOfflineModeInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Wallet.GetAllWalletItems$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "List_UberEatsEmpty",
attrName: "list_UberEatsEmptyOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_UberRidersEmpty",
attrName: "list_UberRidersEmptyOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_CinemasEmpty",
attrName: "list_CinemasEmptyOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Comunications",
attrName: "list_ComunicationsOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_FilmesVod",
attrName: "list_FilmesVodOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_UberEats",
attrName: "list_UberEatsOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Cinemas",
attrName: "list_CinemasOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Equipments",
attrName: "list_EquipmentsOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Golden",
attrName: "list_GoldenOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_UberRiders",
attrName: "list_UberRidersOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Generic",
attrName: "list_GenericOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_RevolutEmpty",
attrName: "list_RevolutEmptyOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Revolut",
attrName: "list_RevolutOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}]);
WTF_MBPController.default.clientActionProxies.getAllWalletItems$Action = function (userWtfIdIn, refreshTokenIn, forceRefreshIn, isOfflineModeIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
forceRefreshIn = (forceRefreshIn === undefined) ? false : forceRefreshIn;
isOfflineModeIn = (isOfflineModeIn === undefined) ? false : isOfflineModeIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getAllWalletItems$Action.bind(controller, userWtfIdIn, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(forceRefreshIn, OS.Types.Boolean), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(isOfflineModeIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
List_UberEatsEmpty: actionResults.list_UberEatsEmptyOut,
List_UberRidersEmpty: actionResults.list_UberRidersEmptyOut,
List_CinemasEmpty: actionResults.list_CinemasEmptyOut,
List_Comunications: actionResults.list_ComunicationsOut,
List_FilmesVod: actionResults.list_FilmesVodOut,
List_UberEats: actionResults.list_UberEatsOut,
List_Cinemas: actionResults.list_CinemasOut,
List_Equipments: actionResults.list_EquipmentsOut,
List_Golden: actionResults.list_GoldenOut,
List_UberRiders: actionResults.list_UberRidersOut,
List_Generic: actionResults.list_GenericOut,
List_RevolutEmpty: actionResults.list_RevolutEmptyOut,
List_Revolut: actionResults.list_RevolutOut
};
});
};
});

define("WTF_MBP.controller$GetAndSyncLocalPictureById", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_MBP.model$Local_PICTURERecord", "WTF_BP.model$App_PictureRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.GetPictureById", "WTF_MBP.model$Local_PICTURERec", "WTF_MBP.model$Local_PICTURERecordList", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getAndSyncLocalPictureById$Action = function (pictureIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.OfflineDataSync.GetAndSyncLocalPictureById$vars"))());
vars.value.pictureIdInLocal = pictureIdIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getPictureByIdVar = new OS.DataTypes.VariableHolder();
var createLocal_PICTUREVar = new OS.DataTypes.VariableHolder();
var getLocalPICTUREByIdVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_PICTURERecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.OfflineDataSync.GetAndSyncLocalPictureById$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalPICTUREById
var getLocalPICTUREByIdAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_PICTURERecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}

var qploId = vars.value.pictureIdInLocal;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2";
} else {
selectSql += "\"ENLocal_PICTURE\".\"Id\" o0, \"ENLocal_PICTURE\".\"Content\" o1, \"ENLocal_PICTURE\".\"Filename\" o2";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_PICTURE\" \"ENLocal_PICTURE\"";
fromAndWhereSql += " WHERE ";
if (qploId != 0) {
fromAndWhereSql += "((\"ENLocal_PICTURE\".\"Id\" = :qploId) AND (\"ENLocal_PICTURE\".\"Id\" IS NOT NULL))";
argsList.add("qploId", /*LONGINTEGER*/ 4, qploId);
} else {
fromAndWhereSql += "(\"ENLocal_PICTURE\".\"Id\" IS NULL)";
}
orderBySql += " ORDER BY \"ENLocal_PICTURE\".\"Filename\" ASC ";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_PICTURERecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_PICTUREAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalPICTUREByIdVar.value;
});
};
return getLocalPICTUREByIdAggr().then(function () {
return OS.Flow.executeSequence(function () {
if(((getLocalPICTUREByIdVar.value.listOut.isEmpty && !(vars.value.pictureIdInLocal.equals(OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.nullIdentifier())))))) {
// Execute Action: GetPictureById
return controller.getPictureById$ServerAction(vars.value.pictureIdInLocal, callContext).then(function (value) {
getPictureByIdVar.value = value;
}).then(function () {
return OS.Flow.executeSequence(function () {
if((!(getPictureByIdVar.value.app_PictureOut.pictureIdAttr.equals(OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.nullIdentifier()))))) {
// Picture = GetPictureById.App_Picture
outVars.value.pictureOut = OS.DataTypes.JSConversions.typeConvertRecord(getPictureByIdVar.value.app_PictureOut, new WTF_MBPModel.Local_PICTURERec(), function (source, target) {
target.idAttr = source.pictureIdAttr;
target.contentAttr = source.contentAttr;
target.filenameAttr = source.filenameAttr;
return target;
});
// Execute Action: CreateLocal_PICTURE
return WTF_MBPModel.entities.Local_PICTURE.create(WTF_MBPModel.Local_PICTURERecord.fromStructure(outVars.value.pictureOut), callContext).then(function (value) {
createLocal_PICTUREVar.value = value;
});
}

});
});
} else {
// Picture = GetLocalPICTUREById.List.Current.Local_PICTURE
outVars.value.pictureOut = getLocalPICTUREByIdVar.value.listOut.getCurrent(callContext.iterationContext).local_PICTUREAttr;
}

});
});
}).catch(function (ex) {
OS.Logger.trace("OfflineDataSync.GetAndSyncLocalPictureById", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.OfflineDataSync.GetAndSyncLocalPictureById$vars", [{
name: "PictureId",
attrName: "pictureIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.OfflineDataSync.GetAndSyncLocalPictureById$outVars", [{
name: "Picture",
attrName: "pictureOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.Local_PICTURERec();
},
complexType: WTF_MBPModel.Local_PICTURERec
}]);
WTF_MBPController.default.clientActionProxies.getAndSyncLocalPictureById$Action = function (pictureIdIn) {
pictureIdIn = (pictureIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : pictureIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getAndSyncLocalPictureById$Action.bind(controller, pictureIdIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Picture: actionResults.pictureOut
};
});
};
});

define("WTF_MBP.controller$GetAppFAQs", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$Cache_ValidationByService", "WTF_MBP.model$Local_APP_FAQSRecordList", "WTF_MBP.model$FAQConfig_AppList", "WTF_MBP.controller$ServerAction.GetAppFAQs", "WTF_MBP.model$STR_CACHE_SERVICERec", "WTF_MBP.controller$GetCacheServiceID", "WTF_MBP.model$Local_APP_FAQSRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getAppFAQs$Action = function (callContext) {
callContext = controller.callContext(callContext);
var getAppFAQsVar = new OS.DataTypes.VariableHolder();
var cache_ValidationByServiceVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.GetAppFAQs$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: Cache_ValidationByService
return WTF_MBPController.default.cache_ValidationByService$Action(WTF_MBPController.default.getCacheServiceID$Action(callContext.withoutIterationContext()).cacheServicesOut.faqsAttr, false, false, OS.DataTypes.DateTime.defaultValue, callContext).then(function (value) {
cache_ValidationByServiceVar.value = value;
}).then(function () {
// UseCache?
return OS.Flow.executeSequence(function () {
if((cache_ValidationByServiceVar.value.useCacheOut)) {
// SetOutput
// Success = True
outVars.value.successOut = true;
} else {
// Execute Action: GetAppFAQs
return controller.getAppFAQs$ServerAction(callContext).then(function (value) {
getAppFAQsVar.value = value;
}).then(function () {
// GetAppFAQs.Success?
return OS.Flow.executeSequence(function () {
if((getAppFAQsVar.value.successOut)) {
// Execute Action: DeleteAllLocal_APP_FAQS
return WTF_MBPModel.entities.Local_APP_FAQS.deleteAll(callContext).then(function () {
// Execute Action: CreateOrUpdateAllLocal_APP_FAQS
return WTF_MBPModel.entities.Local_APP_FAQS.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(getAppFAQsVar.value.fAQOut, new WTF_MBPModel.Local_APP_FAQSRecordList(), function (source, target) {
target.local_APP_FAQSAttr.idAttr = OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.nullIdentifier());
target.local_APP_FAQSAttr.questionAttr = source.questionAttr;
target.local_APP_FAQSAttr.answerAttr = source.answerAttr;
target.local_APP_FAQSAttr.orderAttr = source.orderAttr;
return target;
}), callContext);
}).then(function () {
// Success = True
outVars.value.successOut = true;
});
} else {
// Success = False
outVars.value.successOut = false;
}

});
});
}

});
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.GetAppFAQs$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.getAppFAQs$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.getAppFAQs$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$GetAppIdentifiers", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_IdentifierRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.GetAppIdentifiers_Public", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getAppIdentifiers$Action = function (callContext) {
callContext = controller.callContext(callContext);
var getAppIdentifiers_PublicVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.PushReview.GetAppIdentifiers$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: GetAppIdentifiers_Public
return controller.getAppIdentifiers_Public$ServerAction(OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.integerToIdentifier(OS.BuiltinFunctions.longIntegerToInteger(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr))), getActiveUserWTFVar.value.refreshTokenOut, callContext).then(function (value) {
getAppIdentifiers_PublicVar.value = value;
});
}).then(function () {
// App_Identifier = GetAppIdentifiers_Public.App_Identifier
outVars.value.app_IdentifierOut = getAppIdentifiers_PublicVar.value.app_IdentifierOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.PushReview.GetAppIdentifiers$outVars", [{
name: "App_Identifier",
attrName: "app_IdentifierOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_IdentifierRec();
},
complexType: WTF_BPModel.App_IdentifierRec
}]);
WTF_MBPController.default.clientActionProxies.getAppIdentifiers$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.getAppIdentifiers$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
App_Identifier: actionResults.app_IdentifierOut
};
});
};
});

define("WTF_MBP.controller$GetApplicationName_MBP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$GetConfigValueAsText_MBP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getApplicationName_MBP$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getConfigValueAsText_MBPVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.APP_Config.GetApplicationName_MBP$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetConfigValueAsText_MBP
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("APPLICATION_NAME", callContext).then(function (value) {
getConfigValueAsText_MBPVar.value = value;
}).then(function () {
// SetValue
// Value = GetConfigValueAsText_MBP.Value
outVars.value.valueOut = getConfigValueAsText_MBPVar.value.valueOut;
});
}).catch(function (ex) {
OS.Logger.trace("APP_Config.GetApplicationName_MBP", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.APP_Config.GetApplicationName_MBP$outVars", [{
name: "Value",
attrName: "valueOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.getApplicationName_MBP$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.getApplicationName_MBP$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Value: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.valueOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$GetBenefitRevolutNewUser", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_WalletCardRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.GetBenefitRevolutNewUser"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getBenefitRevolutNewUser$Action = function (userWtfIdIn, refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Revolut.GetBenefitRevolutNewUser$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
var getBenefitRevolutNewUserVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Revolut.GetBenefitRevolutNewUser$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetBenefitRevolutNewUser
return controller.getBenefitRevolutNewUser$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, callContext).then(function (value) {
getBenefitRevolutNewUserVar.value = value;
}).then(function () {
// Success = GetBenefitRevolutNewUser.Success
outVars.value.successOut = getBenefitRevolutNewUserVar.value.successOut;
// Message = GetBenefitRevolutNewUser.Message
outVars.value.messageOut = getBenefitRevolutNewUserVar.value.messageOut;
// WalletCard = GetBenefitRevolutNewUser.WalletCard
outVars.value.walletCardOut = getBenefitRevolutNewUserVar.value.walletCardOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Revolut.GetBenefitRevolutNewUser$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Revolut.GetBenefitRevolutNewUser$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "WalletCard",
attrName: "walletCardOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_WalletCardRec();
},
complexType: WTF_BPModel.App_WalletCardRec
}]);
WTF_MBPController.default.clientActionProxies.getBenefitRevolutNewUser$Action = function (userWtfIdIn, refreshTokenIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getBenefitRevolutNewUser$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
WalletCard: actionResults.walletCardOut
};
});
};
});

define("WTF_MBP.controller$GetCacheServiceID", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$STR_CACHE_SERVICERec"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getCacheServiceID$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Cache_Control.GetCacheServiceID$outVars"))());
try {// SetOutput
// CacheServices.AppConfig = "getAPPConfig"
outVars.value.cacheServicesOut.appConfigAttr = "getAPPConfig";
// CacheServices.Associations = "getAssociations"
outVars.value.cacheServicesOut.associationsAttr = "getAssociations";
// CacheServices.PINPUK = "getPINPUK"
outVars.value.cacheServicesOut.pINPUKAttr = "getPINPUK";
// CacheServices.BalanceConfig = "getBalanceConfig"
outVars.value.cacheServicesOut.balanceConfigAttr = "getBalanceConfig";
// CacheServices.BalanceInfo = "getBalanceInfo"
outVars.value.cacheServicesOut.balanceInfoAttr = "getBalanceInfo";
// CacheServices.HomepageBalanceInfo = "getHomepageBalanceInfo"
outVars.value.cacheServicesOut.homepageBalanceInfoAttr = "getHomepageBalanceInfo";
// CacheServices.ScratchRules = "getScratchRegulation"
outVars.value.cacheServicesOut.scratchRulesAttr = "getScratchRegulation";
// CacheServices.WalletItems = "getWalletItems"
outVars.value.cacheServicesOut.walletItemsAttr = "getWalletItems";
// CacheServices.Faqs = "getFaqs"
outVars.value.cacheServicesOut.faqsAttr = "getFaqs";
} catch (ex) {
(function () {
OS.Logger.trace("Cache_Control.GetCacheServiceID", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return outVars.value;

}

throw ex;
})();
}

return outVars.value;
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Cache_Control.GetCacheServiceID$outVars", [{
name: "CacheServices",
attrName: "cacheServicesOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.STR_CACHE_SERVICERec();
},
complexType: WTF_MBPModel.STR_CACHE_SERVICERec
}]);
WTF_MBPController.default.clientActionProxies.getCacheServiceID$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.getCacheServiceID$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
CacheServices: actionResults.cacheServicesOut
};
});
};
});

define("WTF_MBP.controller$GetCacheValidationInterval", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_APP_CONFIGRecordList", "WTF_MBP.model$Local_APP_CONFIGRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getCacheValidationInterval$Action = function (callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Cache_Control.GetCacheValidationInterval$vars"))());
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getLocalAPPCONFIGByKeyVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_APP_CONFIGRecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Cache_Control.GetCacheValidationInterval$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalAPPCONFIGByKey
var getLocalAPPCONFIGByKeyAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_APP_CONFIGRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}

var qpstKey = vars.value.keyVar;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1";
} else {
selectSql += "\"ENLocal_APP_CONFIG\".\"Key\" o0, \"ENLocal_APP_CONFIG\".\"Value\" o1";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_APP_CONFIG\" \"ENLocal_APP_CONFIG\"";
fromAndWhereSql += " WHERE (\"ENLocal_APP_CONFIG\".\"Key\" = (:qpstKey))";
orderBySql += " ORDER BY \"ENLocal_APP_CONFIG\".\"Value\" ASC ";
argsList.add("qpstKey", /*TEXT*/ 0, qpstKey);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_APP_CONFIGRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_APP_CONFIGAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalAPPCONFIGByKeyVar.value;
});
};
return getLocalAPPCONFIGByKeyAggr().then(function () {
// Value = TextToInteger
outVars.value.valueOut = OS.BuiltinFunctions.textToInteger(getLocalAPPCONFIGByKeyVar.value.listOut.getCurrent(callContext.iterationContext).local_APP_CONFIGAttr.valueAttr);
});
}).catch(function (ex) {
OS.Logger.trace("Cache_Control.GetCacheValidationInterval", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: LogMessage
OS.SystemActions.logMessage((((("Key: " + vars.value.keyVar) + "\r\n") + " Message: ") + (outVars.value.valueOut).toString()), "APP_CONFIG", callContext);
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Cache_Control.GetCacheValidationInterval$vars", [{
name: "Key",
attrName: "keyVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "CACHE_VALIDATION_INTERVAL";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Cache_Control.GetCacheValidationInterval$outVars", [{
name: "Value",
attrName: "valueOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.clientActionProxies.getCacheValidationInterval$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.getCacheValidationInterval$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Value: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.valueOut, OS.Types.Integer, true)
};
});
};
});

define("WTF_MBP.controller$GetChangeRatePlanInfoAll_BP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_TmcodeChangeList", "WTF_MBP.controller$ServerAction.GetChangeRatePlanInfoAll_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getChangeRatePlanInfoAll_BP$Action = function (userWtfIdIn, refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_BSCS.GetChangeRatePlanInfoAll_BP$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
var getChangeRatePlanInfoAll_BPVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_BSCS.GetChangeRatePlanInfoAll_BP$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetChangeRatePlanInfoAll_BP
return controller.getChangeRatePlanInfoAll_BP$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, callContext).then(function (value) {
getChangeRatePlanInfoAll_BPVar.value = value;
}).then(function () {
// Success = GetChangeRatePlanInfoAll_BP.Success
outVars.value.successOut = getChangeRatePlanInfoAll_BPVar.value.successOut;
// Message = GetChangeRatePlanInfoAll_BP.Message
outVars.value.messageOut = getChangeRatePlanInfoAll_BPVar.value.messageOut;
// App_TmcodeChange = GetChangeRatePlanInfoAll_BP.App_TmcodeChange
outVars.value.app_TmcodeChangeOut = getChangeRatePlanInfoAll_BPVar.value.app_TmcodeChangeOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_BSCS.GetChangeRatePlanInfoAll_BP$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_BSCS.GetChangeRatePlanInfoAll_BP$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_TmcodeChange",
attrName: "app_TmcodeChangeOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_TmcodeChangeList();
},
complexType: WTF_MBPModel.App_TmcodeChangeList
}]);
WTF_MBPController.default.clientActionProxies.getChangeRatePlanInfoAll_BP$Action = function (userWtfIdIn, refreshTokenIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getChangeRatePlanInfoAll_BP$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
App_TmcodeChange: actionResults.app_TmcodeChangeOut
};
});
};
});

define("WTF_MBP.controller$GetClientInfo", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_SERVICELocal_ASSOCIATIONRecordList", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORecordList", "WTF_MBP.model$Local_USER_WTFRecordList", "WTF_MBP.model$Local_SERVICERec", "WTF_MBP.model$Local_ASSOCIATIONRec", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORec", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getClientInfo$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getServiceByIDVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_SERVICELocal_ASSOCIATIONRecordList))());
var getAccessTokenInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList))());
var getLocalUSERWTFSVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_WTFRecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.GetClientInfo$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalUSERWTFS
var getLocalUSERWTFSAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_WTFRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4";
} else {
selectSql += "\"ENLocal_USER_WTF\".\"Id\" o0, \"ENLocal_USER_WTF\".\"Msisdn\" o1, \"ENLocal_USER_WTF\".\"CodeMember\" o2, \"ENLocal_USER_WTF\".\"Tmcode_label\" o3, \"ENLocal_USER_WTF\".\"Is_MonthlyRenewal\" o4";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_WTF\" \"ENLocal_USER_WTF\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_WTFRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_WTFAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalUSERWTFSVar.value;
});
};
return getLocalUSERWTFSAggr().then(function () {
// ContractDN = GetLocalUSERWTFS.List.Current.Local_USER_WTF.Msisdn
outVars.value.contractDNOut = (getLocalUSERWTFSVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_WTFAttr.msisdnAttr).toString();
// Aggregate: GetAccessTokenInfo
var getAccessTokenInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_ACCESS_TOKEN_INFO\".\"Id\" o0, \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" o1, \"ENLocal_ACCESS_TOKEN_INFO\".\"Access_token\" o2, \"ENLocal_ACCESS_TOKEN_INFO\".\"IsUserRegistered\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ACCESS_TOKEN_INFO\" \"ENLocal_ACCESS_TOKEN_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ACCESS_TOKEN_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getAccessTokenInfoVar.value;
});
};
return getAccessTokenInfoAggr();
}).then(function () {
// RefreshToken = GetAccessTokenInfo.List.Current.Local_ACCESS_TOKEN_INFO.Refresh_token
outVars.value.refreshTokenOut = getAccessTokenInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr;
// Aggregate: GetServiceByID
var getServiceByIDAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_SERVICELocal_ASSOCIATIONRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}

var qpinLocal_SERVICE_ServiceId = getLocalUSERWTFSVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_WTFAttr.msisdnAttr;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24";
} else {
selectSql += "\"ENLocal_ASSOCIATION\".\"Id\" o0, \"ENLocal_ASSOCIATION\".\"DisplayValue\" o1, \"ENLocal_ASSOCIATION\".\"FriendlyName\" o2, \"ENLocal_ASSOCIATION\".\"RoleName\" o3, \"ENLocal_ASSOCIATION\".\"Key\" o4, \"ENLocal_ASSOCIATION\".\"Value\" o5, \"ENLocal_ASSOCIATION\".\"Master\" o6, \"ENLocal_ASSOCIATION\".\"ContractDN\" o7, \"ENLocal_ASSOCIATION\".\"AccountOwner\" o8, \"ENLocal_ASSOCIATION\".\"AccountOwnerNIF\" o9, \"ENLocal_ASSOCIATION\".\"AccountOwnerEmail\" o10, \"ENLocal_ASSOCIATION\".\"AccountOwnerPhoneNr\" o11, \"ENLocal_ASSOCIATION\".\"CustCode_ClientNumber\" o12, \"ENLocal_ASSOCIATION\".\"PersonId\" o13, \"ENLocal_ASSOCIATION\".\"IsPending\" o14, \"ENLocal_ASSOCIATION\".\"UA\" o15, \"ENLocal_SERVICE\".\"Id\" o16, \"ENLocal_SERVICE\".\"ServiceId\" o17, \"ENLocal_SERVICE\".\"AssociationID\" o18, \"ENLocal_SERVICE\".\"Name\" o19, \"ENLocal_SERVICE\".\"ServiceAccount\" o20, \"ENLocal_SERVICE\".\"UiLabel\" o21, \"ENLocal_SERVICE\".\"Plan\" o22, \"ENLocal_SERVICE\".\"TMCodeID\" o23, \"ENLocal_SERVICE\".\"TMCodeDesc\" o24";
}
fromAndWhereSql += " FROM (\"MAIN\".\"OSUSR_p9g_Local_SERVICE\" \"ENLocal_SERVICE\" Inner JOIN \"MAIN\".\"OSUSR_p9g_Local_ASSOCIATION\" \"ENLocal_ASSOCIATION\" ON (\"ENLocal_SERVICE\".\"AssociationID\" = \"ENLocal_ASSOCIATION\".\"Id\")) ";
fromAndWhereSql += " WHERE (\"ENLocal_SERVICE\".\"ServiceId\" = CAST(:qpinLocal_SERVICE_ServiceId AS TEXT))";
argsList.add("qpinLocal_SERVICE_ServiceId", /*INTEGER*/ 3, qpinLocal_SERVICE_ServiceId);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_SERVICELocal_ASSOCIATIONRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ASSOCIATIONAttr",
"local_SERVICEAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getServiceByIDVar.value;
});
};
return getServiceByIDAggr();
}).then(function () {
// AccountOwnerNIF = GetServiceByID.List.Current.Local_ASSOCIATION.AccountOwnerNIF
outVars.value.accountOwnerNIFOut = getServiceByIDVar.value.listOut.getCurrent(callContext.iterationContext).local_ASSOCIATIONAttr.accountOwnerNIFAttr;
// CustCode_ClientNumber = GetServiceByID.List.Current.Local_ASSOCIATION.CustCode_ClientNumber
outVars.value.custCode_ClientNumberOut = getServiceByIDVar.value.listOut.getCurrent(callContext.iterationContext).local_ASSOCIATIONAttr.custCode_ClientNumberAttr;
// AccountOwnerPhoneNr = GetServiceByID.List.Current.Local_ASSOCIATION.AccountOwnerPhoneNr
outVars.value.accountOwnerPhoneNrOut = getServiceByIDVar.value.listOut.getCurrent(callContext.iterationContext).local_ASSOCIATIONAttr.accountOwnerPhoneNrAttr;
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.GetClientInfo", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.GetClientInfo$outVars", [{
name: "ContractDN",
attrName: "contractDNOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "RefreshToken",
attrName: "refreshTokenOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "AccountOwnerNIF",
attrName: "accountOwnerNIFOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "CustCode_ClientNumber",
attrName: "custCode_ClientNumberOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "AccountOwnerPhoneNr",
attrName: "accountOwnerPhoneNrOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.getClientInfo$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.getClientInfo$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
ContractDN: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.contractDNOut, OS.Types.Text, true),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.refreshTokenOut, OS.Types.Text, true),
AccountOwnerNIF: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.accountOwnerNIFOut, OS.Types.Text, true),
CustCode_ClientNumber: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.custCode_ClientNumberOut, OS.Types.Text, true),
AccountOwnerPhoneNr: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.accountOwnerPhoneNrOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$GetConfigurationsChargePhone", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$GetConfigValueAsText_MBP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getConfigurationsChargePhone$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getNumberOfOptionsVar = new OS.DataTypes.VariableHolder();
var getStepValueVar = new OS.DataTypes.VariableHolder();
var getDefaultChargeValueVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.APP_Config.GetConfigurationsChargePhone$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetStepValue
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("CHARGE_STEP_VALUE", callContext).then(function (value) {
getStepValueVar.value = value;
}).then(function () {
// StepValue = TextToInteger
outVars.value.stepValueOut = OS.BuiltinFunctions.textToInteger(getStepValueVar.value.valueOut);
// Execute Action: GetNumberOfOptions
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("CHARGE_NUMBER_PAYMENT_OPTIONS", callContext).then(function (value) {
getNumberOfOptionsVar.value = value;
});
}).then(function () {
// NumberOfOptions = TextToInteger
outVars.value.numberOfOptionsOut = OS.BuiltinFunctions.textToInteger(getNumberOfOptionsVar.value.valueOut);
// Execute Action: GetDefaultChargeValue
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("CHARGE_DEFAULT_VALUE", callContext).then(function (value) {
getDefaultChargeValueVar.value = value;
});
}).then(function () {
// DefaultChargeValue = TextToDecimal
outVars.value.defaultChargeValueOut = OS.BuiltinFunctions.textToDecimal(getDefaultChargeValueVar.value.valueOut);
});
}).catch(function (ex) {
OS.Logger.trace("APP_Config.GetConfigurationsChargePhone", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.APP_Config.GetConfigurationsChargePhone$outVars", [{
name: "StepValue",
attrName: "stepValueOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "DefaultChargeValue",
attrName: "defaultChargeValueOut",
mandatory: false,
dataType: OS.Types.Decimal,
defaultValue: function () {
return OS.DataTypes.Decimal.defaultValue;
}
}, {
name: "NumberOfOptions",
attrName: "numberOfOptionsOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.clientActionProxies.getConfigurationsChargePhone$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.getConfigurationsChargePhone$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
StepValue: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.stepValueOut, OS.Types.Integer, true),
DefaultChargeValue: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.defaultChargeValueOut, OS.Types.Decimal, true),
NumberOfOptions: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.numberOfOptionsOut, OS.Types.Integer, true)
};
});
};
});

define("WTF_MBP.controller$GetConfigValueAsText_MBP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$GetAllMobileConfigs_MBP", "WTF_MBP.controller$Cache_ValidationByService", "WTF_MBP.model$STR_CACHE_SERVICERec", "WTF_MBP.controller$GetCacheServiceID", "WTF_MBP.model$Local_APP_CONFIGRecordList", "WTF_MBP.model$Local_APP_CONFIGRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getConfigValueAsText_MBP$Action = function (keyIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.APP_Config.GetConfigValueAsText_MBP$vars"))());
vars.value.keyInLocal = keyIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getAllMobileConfigs_MBPVar = new OS.DataTypes.VariableHolder();
var cache_ValidationByServiceVar = new OS.DataTypes.VariableHolder();
var getLocalAPPCONFIGByKeyVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_APP_CONFIGRecordList))());
var getLocalAPPCONFIGByKey2Var = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_APP_CONFIGRecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.APP_Config.GetConfigValueAsText_MBP$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalAPPCONFIGByKey
var getLocalAPPCONFIGByKeyAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_APP_CONFIGRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}

var qpstKey = vars.value.keyInLocal;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1";
} else {
selectSql += "\"ENLocal_APP_CONFIG\".\"Key\" o0, \"ENLocal_APP_CONFIG\".\"Value\" o1";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_APP_CONFIG\" \"ENLocal_APP_CONFIG\"";
fromAndWhereSql += " WHERE (\"ENLocal_APP_CONFIG\".\"Key\" = (:qpstKey))";
argsList.add("qpstKey", /*TEXT*/ 0, qpstKey);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_APP_CONFIGRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_APP_CONFIGAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalAPPCONFIGByKeyVar.value;
});
};
return getLocalAPPCONFIGByKeyAggr().then(function () {
// APP_Config not found?
return OS.Flow.executeSequence(function () {
if((!(getLocalAPPCONFIGByKeyVar.value.listOut.isEmpty))) {
// Execute Action: Cache_ValidationByService
return WTF_MBPController.default.cache_ValidationByService$Action(WTF_MBPController.default.getCacheServiceID$Action(callContext.withoutIterationContext()).cacheServicesOut.appConfigAttr, false, false, OS.DataTypes.DateTime.defaultValue, callContext).then(function (value) {
cache_ValidationByServiceVar.value = value;
}).then(function () {
// UseCache?
if((cache_ValidationByServiceVar.value.useCacheOut)) {
// Value = GetLocalAPPCONFIGByKey.List.Current.Local_APP_CONFIG.Value
outVars.value.valueOut = getLocalAPPCONFIGByKeyVar.value.listOut.getCurrent(callContext.iterationContext).local_APP_CONFIGAttr.valueAttr;
return OS.Flow.returnAsync(outVars.value);

}

});
}

});
}).then(function () {
// Execute Action: GetAllMobileConfigs_MBP
return WTF_MBPController.default.getAllMobileConfigs_MBP$Action(true, callContext).then(function (value) {
getAllMobileConfigs_MBPVar.value = value;
}).then(function () {
// Aggregate: GetLocalAPPCONFIGByKey2
var getLocalAPPCONFIGByKey2Aggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_APP_CONFIGRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}

var qpstKey = vars.value.keyInLocal;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1";
} else {
selectSql += "\"ENLocal_APP_CONFIG\".\"Key\" o0, \"ENLocal_APP_CONFIG\".\"Value\" o1";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_APP_CONFIG\" \"ENLocal_APP_CONFIG\"";
fromAndWhereSql += " WHERE (\"ENLocal_APP_CONFIG\".\"Key\" = (:qpstKey))";
argsList.add("qpstKey", /*TEXT*/ 0, qpstKey);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_APP_CONFIGRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_APP_CONFIGAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalAPPCONFIGByKey2Var.value;
});
};
return getLocalAPPCONFIGByKey2Aggr();
}).then(function () {
// Value = GetLocalAPPCONFIGByKey2.List.Current.Local_APP_CONFIG.Value
outVars.value.valueOut = getLocalAPPCONFIGByKey2Var.value.listOut.getCurrent(callContext.iterationContext).local_APP_CONFIGAttr.valueAttr;
});
});
}).catch(function (ex) {
OS.Logger.trace("APP_Config.GetConfigValueAsText_MBP", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.APP_Config.GetConfigValueAsText_MBP$vars", [{
name: "Key",
attrName: "keyInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.APP_Config.GetConfigValueAsText_MBP$outVars", [{
name: "Value",
attrName: "valueOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.getConfigValueAsText_MBP$Action = function (keyIn) {
keyIn = (keyIn === undefined) ? "" : keyIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getConfigValueAsText_MBP$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(keyIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Value: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.valueOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$GetDeepLinkUrl", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$GetConfigValueAsText_MBP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getDeepLinkUrl$Action = function (screenNameIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Deeplink.GetDeepLinkUrl$vars"))());
vars.value.screenNameInLocal = screenNameIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getConfigValueAsText_MBPVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Deeplink.GetDeepLinkUrl$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetConfigValueAsText_MBP
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("FrontendModuleName", callContext).then(function (value) {
getConfigValueAsText_MBPVar.value = value;
}).then(function () {
// Deeplink = GetConfigValueAsText_MBP.Value + "/" + ScreenName
outVars.value.deeplinkOut = ((getConfigValueAsText_MBPVar.value.valueOut + "/") + vars.value.screenNameInLocal);
});
}).catch(function (ex) {
OS.Logger.trace("Deeplink.GetDeepLinkUrl", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Deeplink.GetDeepLinkUrl$vars", [{
name: "ScreenName",
attrName: "screenNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Deeplink.GetDeepLinkUrl$outVars", [{
name: "Deeplink",
attrName: "deeplinkOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.getDeepLinkUrl$Action = function (screenNameIn) {
screenNameIn = (screenNameIn === undefined) ? "" : screenNameIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getDeepLinkUrl$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(screenNameIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Deeplink: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.deeplinkOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$GetInfoMGM", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_MBP.controller$ServerAction.GetInfoMGM"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getInfoMGM$Action = function (callContext) {
callContext = controller.callContext(callContext);
var getInfoMGMVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.MGM.GetInfoMGM$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: GetInfoMGM
return controller.getInfoMGM$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, callContext).then(function (value) {
getInfoMGMVar.value = value;
});
}).then(function () {
// Success = GetInfoMGM.Success
outVars.value.successOut = getInfoMGMVar.value.successOut;
// Message = GetInfoMGM.Message
outVars.value.messageOut = getInfoMGMVar.value.messageOut;
// NumberFriendsInvited = GetInfoMGM.NumberFriendsInvited
outVars.value.numberFriendsInvitedOut = getInfoMGMVar.value.numberFriendsInvitedOut;
// NumberMaxOfFriends = GetInfoMGM.NumberMaxOfFriends
outVars.value.numberMaxOfFriendsOut = getInfoMGMVar.value.numberMaxOfFriendsOut;
// NumberDiamondsHost = GetInfoMGM.NumberDiamondsHost
outVars.value.numberDiamondsHostOut = getInfoMGMVar.value.numberDiamondsHostOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.MGM.GetInfoMGM$outVars", [{
name: "NumberFriendsInvited",
attrName: "numberFriendsInvitedOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "NumberMaxOfFriends",
attrName: "numberMaxOfFriendsOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "NumberDiamondsHost",
attrName: "numberDiamondsHostOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.clientActionProxies.getInfoMGM$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.getInfoMGM$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
NumberFriendsInvited: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.numberFriendsInvitedOut, OS.Types.Integer, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
NumberMaxOfFriends: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.numberMaxOfFriendsOut, OS.Types.Integer, true),
NumberDiamondsHost: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.numberDiamondsHostOut, OS.Types.Integer, true)
};
});
};
});

define("WTF_MBP.controller$GetLastURL", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$GetLayoutLevelsAppConfigs", "WTF_MBP.model$Local_LAST_PAGERecordList", "WTF_MBP.model$Local_LAYOUT_LEVELSRecordList", "WTF_MBP.model$Local_LAST_PAGERec", "WTF_MBP.model$Local_LAYOUT_LEVELSRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getLastURL$Action = function (layoutLevelIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.PageRedirection.GetLastURL$vars"))());
vars.value.layoutLevelIdInLocal = layoutLevelIdIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getLayoutLevelsAppConfigsVar = new OS.DataTypes.VariableHolder();
var getLocalLASTPAGESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_LAST_PAGERecordList))());
var getLocalLAYOUTLEVEL3Var = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_LAYOUT_LEVELSRecordList))());
var getLocalLASTPAGES2Var = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_LAST_PAGERecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.PageRedirection.GetLastURL$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetLayoutLevelsAppConfigs
return WTF_MBPController.default.getLayoutLevelsAppConfigs$Action(callContext).then(function (value) {
getLayoutLevelsAppConfigsVar.value = value;
}).then(function () {
// Aggregate: GetLocalLAYOUTLEVEL3
var getLocalLAYOUTLEVEL3Aggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_LAYOUT_LEVELSRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}

var qpstLevel = getLayoutLevelsAppConfigsVar.value.lvl3Out;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2";
} else {
selectSql += "\"ENLocal_LAYOUT_LEVELS\".\"Id\" o0, \"ENLocal_LAYOUT_LEVELS\".\"Label\" o1, \"ENLocal_LAYOUT_LEVELS\".\"Level\" o2";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_LAYOUT_LEVELS\" \"ENLocal_LAYOUT_LEVELS\"";
fromAndWhereSql += " WHERE (\"ENLocal_LAYOUT_LEVELS\".\"Level\" = :qpstLevel)";
argsList.add("qpstLevel", /*TEXT*/ 0, qpstLevel);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_LAYOUT_LEVELSRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_LAYOUT_LEVELSAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalLAYOUTLEVEL3Var.value;
});
};
return getLocalLAYOUTLEVEL3Aggr();
}).then(function () {
// Is Layout Lvl3?
return OS.Flow.executeSequence(function () {
if((!(vars.value.layoutLevelIdInLocal.equals(getLocalLAYOUTLEVEL3Var.value.listOut.getCurrent(callContext.iterationContext).local_LAYOUT_LEVELSAttr.idAttr)))) {
// Aggregate: GetLocalLASTPAGES
var getLocalLASTPAGESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_LAST_PAGERecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_LAST_PAGE\".\"Id\" o0, \"ENLocal_LAST_PAGE\".\"URL\" o1, \"ENLocal_LAST_PAGE\".\"LayoutLevelID\" o2, \"ENLocal_LAST_PAGE\".\"Step\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_LAST_PAGE\" \"ENLocal_LAST_PAGE\"";
orderBySql += " ORDER BY \"ENLocal_LAST_PAGE\".\"Step\" DESC ";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_LAST_PAGERecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_LAST_PAGEAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalLASTPAGESVar.value;
});
};
return getLocalLASTPAGESAggr().then(function () {
// Execute Action: DeleteLocal_LAST_PAGE
return WTF_MBPModel.entities.Local_LAST_PAGE.delete(getLocalLASTPAGESVar.value.listOut.getCurrent(callContext.iterationContext).local_LAST_PAGEAttr.idAttr, callContext);
});
}

});
}).then(function () {
// Aggregate: GetLocalLASTPAGES2
var getLocalLASTPAGES2Aggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_LAST_PAGERecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_LAST_PAGE\".\"Id\" o0, \"ENLocal_LAST_PAGE\".\"URL\" o1, \"ENLocal_LAST_PAGE\".\"LayoutLevelID\" o2, \"ENLocal_LAST_PAGE\".\"Step\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_LAST_PAGE\" \"ENLocal_LAST_PAGE\"";
orderBySql += " ORDER BY \"ENLocal_LAST_PAGE\".\"Step\" DESC ";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_LAST_PAGERecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_LAST_PAGEAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalLASTPAGES2Var.value;
});
};
return getLocalLASTPAGES2Aggr().then(function () {
// SetOutput
// URL = GetLocalLASTPAGES2.List.Current.Local_LAST_PAGE.URL
outVars.value.uRLOut = getLocalLASTPAGES2Var.value.listOut.getCurrent(callContext.iterationContext).local_LAST_PAGEAttr.uRLAttr;
});
});
}).catch(function (ex) {
OS.Logger.trace("PageRedirection.GetLastURL", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// SetOutput
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.PageRedirection.GetLastURL$vars", [{
name: "LayoutLevelId",
attrName: "layoutLevelIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.PageRedirection.GetLastURL$outVars", [{
name: "URL",
attrName: "uRLOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.getLastURL$Action = function (layoutLevelIdIn) {
layoutLevelIdIn = (layoutLevelIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : layoutLevelIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getLastURL$Action.bind(controller, layoutLevelIdIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
URL: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.uRLOut, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$GetLayoutLevelsAppConfigs", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$GetConfigValueAsText_MBP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getLayoutLevelsAppConfigs$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getLayoutLvl3Var = new OS.DataTypes.VariableHolder();
var getLayoutLvl2Var = new OS.DataTypes.VariableHolder();
var getLayoutLvl4Var = new OS.DataTypes.VariableHolder();
var getLayoutLvl1Var = new OS.DataTypes.VariableHolder();
var getLayoutBlankVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.PageRedirection.GetLayoutLevelsAppConfigs$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetLayoutBlank
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("LAYOUT_BLANK", callContext).then(function (value) {
getLayoutBlankVar.value = value;
}).then(function () {
// Execute Action: GetLayoutLvl1
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("LAYOUT_LEVEL1", callContext).then(function (value) {
getLayoutLvl1Var.value = value;
});
}).then(function () {
// Execute Action: GetLayoutLvl2
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("LAYOUT_LEVEL2", callContext).then(function (value) {
getLayoutLvl2Var.value = value;
});
}).then(function () {
// Execute Action: GetLayoutLvl3
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("LAYOUT_LEVEL3", callContext).then(function (value) {
getLayoutLvl3Var.value = value;
});
}).then(function () {
// Execute Action: GetLayoutLvl4
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("LAYOUT_LEVEL4", callContext).then(function (value) {
getLayoutLvl4Var.value = value;
});
}).then(function () {
// blank = GetLayoutBlank.Value
outVars.value.blankOut = getLayoutBlankVar.value.valueOut;
// lvl1 = GetLayoutLvl1.Value
outVars.value.lvl1Out = getLayoutLvl1Var.value.valueOut;
// lvl2 = GetLayoutLvl2.Value
outVars.value.lvl2Out = getLayoutLvl2Var.value.valueOut;
// lvl3 = GetLayoutLvl3.Value
outVars.value.lvl3Out = getLayoutLvl3Var.value.valueOut;
// lvl4 = GetLayoutLvl4.Value
outVars.value.lvl4Out = getLayoutLvl4Var.value.valueOut;
});
}).catch(function (ex) {
OS.Logger.trace("PageRedirection.GetLayoutLevelsAppConfigs", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// SetOutput
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.PageRedirection.GetLayoutLevelsAppConfigs$outVars", [{
name: "lvl1",
attrName: "lvl1Out",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "lvl2",
attrName: "lvl2Out",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "lvl3",
attrName: "lvl3Out",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "lvl4",
attrName: "lvl4Out",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "blank",
attrName: "blankOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.getLayoutLevelsAppConfigs$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.getLayoutLevelsAppConfigs$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
lvl1: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.lvl1Out, OS.Types.Text, true),
lvl2: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.lvl2Out, OS.Types.Text, true),
lvl3: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.lvl3Out, OS.Types.Text, true),
lvl4: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.lvl4Out, OS.Types.Text, true),
blank: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.blankOut, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$GetPaymentMethodAppConfigs", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$GetConfigValueAsText_MBP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getPaymentMethodAppConfigs$Action = function (callContext) {
callContext = controller.callContext(callContext);
var getMbwayConfigValueVar = new OS.DataTypes.VariableHolder();
var getVisaConfigValueVar = new OS.DataTypes.VariableHolder();
var getMastercardConfigValueVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Paygate.GetPaymentMethodAppConfigs$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetMastercardConfigValue
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("CHARGE_PAYMENTMETHOD_MASTERCARD", callContext).then(function (value) {
getMastercardConfigValueVar.value = value;
}).then(function () {
// Execute Action: GetMbwayConfigValue
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("CHARGE_PAYMENTMETHOD_MBWAY", callContext).then(function (value) {
getMbwayConfigValueVar.value = value;
});
}).then(function () {
// Execute Action: GetVisaConfigValue
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("CHARGE_PAYMENTMETHOD_VISA", callContext).then(function (value) {
getVisaConfigValueVar.value = value;
});
}).then(function () {
// Output Variables
// VisaConfigValue = GetVisaConfigValue.Value
outVars.value.visaConfigValueOut = getVisaConfigValueVar.value.valueOut;
// MastercardConfigValue = GetMastercardConfigValue.Value
outVars.value.mastercardConfigValueOut = getMastercardConfigValueVar.value.valueOut;
// MbwayConfigValue = GetMbwayConfigValue.Value
outVars.value.mbwayConfigValueOut = getMbwayConfigValueVar.value.valueOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Paygate.GetPaymentMethodAppConfigs$outVars", [{
name: "VisaConfigValue",
attrName: "visaConfigValueOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "MastercardConfigValue",
attrName: "mastercardConfigValueOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "MbwayConfigValue",
attrName: "mbwayConfigValueOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.getPaymentMethodAppConfigs$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.getPaymentMethodAppConfigs$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
VisaConfigValue: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.visaConfigValueOut, OS.Types.Text, true),
MastercardConfigValue: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.mastercardConfigValueOut, OS.Types.Text, true),
MbwayConfigValue: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.mbwayConfigValueOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$GetPrizeById", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_PrizeListRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.GetPrizeById", "WTF_MBP.model$Local_PRIZERecord", "WTF_MBP.model$Local_PRIZERec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getPrizeById$Action = function (prizeIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Prizes.GetPrizeById$vars"))());
vars.value.prizeIdInLocal = prizeIdIn;
var getPrizeByIdVar = new OS.DataTypes.VariableHolder();
var createLocal_PRIZEVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Prizes.GetPrizeById$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetPrizeById
return controller.getPrizeById$ServerAction(vars.value.prizeIdInLocal, callContext).then(function (value) {
getPrizeByIdVar.value = value;
}).then(function () {
// Local_PRIZES = GetPrizeById.App_Prizes
outVars.value.local_PRIZESOut = OS.DataTypes.JSConversions.typeConvertRecord(getPrizeByIdVar.value.app_PrizesOut, new WTF_MBPModel.Local_PRIZERec(), function (source, target) {
target.idAttr = source.prizeIdAttr;
target.itemTypesIdAttr = source.itemTypeIdAttr;
target.pictureIdAttr = source.app_PictureAttr.pictureIdAttr;
target.nameAttr = source.nameAttr;
target.descriptionAttr = source.descriptionAttr;
target.copyForScratchAttr = source.copyForScratchAttr;
return target;
});
// Execute Action: CreateLocal_PRIZE
return WTF_MBPModel.entities.Local_PRIZE.create(WTF_MBPModel.Local_PRIZERecord.fromStructure(outVars.value.local_PRIZESOut), callContext).then(function (value) {
createLocal_PRIZEVar.value = value;
});
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Prizes.GetPrizeById$vars", [{
name: "PrizeId",
attrName: "prizeIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Prizes.GetPrizeById$outVars", [{
name: "Local_PRIZES",
attrName: "local_PRIZESOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.Local_PRIZERec();
},
complexType: WTF_MBPModel.Local_PRIZERec
}]);
WTF_MBPController.default.clientActionProxies.getPrizeById$Action = function (prizeIdIn) {
prizeIdIn = (prizeIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : prizeIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getPrizeById$Action.bind(controller, prizeIdIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Local_PRIZES: actionResults.local_PRIZESOut
};
});
};
});

define("WTF_MBP.controller$GetProductMaximumAutoRefill", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "BALANCE_MBP.controller", "WTF_MBP.controller$GetApplicationName_MBP", "WTF_MBP.controller$ServerAction.GetProductMaximumAutoRefill_BP", "BALANCE_MBP.controller$ManageRefills", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$BALANCE_MBP", "WTF_MBP.model$STR_REFILLSList", "WTF_MBP.model$STR_REFILLSRec", "WTF_MBP.model$STR_EXTRA_INTERNETRec", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORecordList", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, BALANCE_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getProductMaximumAutoRefill$Action = function (associationIdIn, mSISDNIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_Billing.GetProductMaximumAutoRefill$vars"))());
vars.value.associationIdInLocal = associationIdIn;
vars.value.mSISDNInLocal = mSISDNIn;
var getProductMaximumAutoRefill_BPVar = new OS.DataTypes.VariableHolder();
var getApplicationName_MBPVar = new OS.DataTypes.VariableHolder();
var manageRefillsVar = new OS.DataTypes.VariableHolder();
var getLocalACCESSTOKENINFOES2Var = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_Billing.GetProductMaximumAutoRefill$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalACCESSTOKENINFOES2
var getLocalACCESSTOKENINFOES2Aggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_ACCESS_TOKEN_INFO\".\"Id\" o0, \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" o1, \"ENLocal_ACCESS_TOKEN_INFO\".\"Access_token\" o2, \"ENLocal_ACCESS_TOKEN_INFO\".\"IsUserRegistered\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ACCESS_TOKEN_INFO\" \"ENLocal_ACCESS_TOKEN_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ACCESS_TOKEN_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalACCESSTOKENINFOES2Var.value;
});
};
return getLocalACCESSTOKENINFOES2Aggr().then(function () {
// Execute Action: GetProductMaximumAutoRefill_BP
return controller.getProductMaximumAutoRefill_BP$ServerAction(getLocalACCESSTOKENINFOES2Var.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr, vars.value.associationIdInLocal, vars.value.mSISDNInLocal, callContext).then(function (value) {
getProductMaximumAutoRefill_BPVar.value = value;
});
}).then(function () {
return OS.Flow.executeSequence(function () {
if((getProductMaximumAutoRefill_BPVar.value.successOut)) {
// Execute Action: GetApplicationName_MBP
return WTF_MBPController.default.getApplicationName_MBP$Action(callContext).then(function (value) {
getApplicationName_MBPVar.value = value;
}).then(function () {
// Execute Action: ManageRefills
return BALANCE_MBPController.default.manageRefills$Action(getApplicationName_MBPVar.value.valueOut, getLocalACCESSTOKENINFOES2Var.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr, vars.value.associationIdInLocal, vars.value.mSISDNInLocal, "ManageRefills", callContext).then(function (value) {
manageRefillsVar.value = value;
});
}).then(function () {
if((manageRefillsVar.value.successOut)) {
// OutputData
// RefillVariables.RefillCost = ManageRefills.RefillCost
vars.value.refillVariablesVar.refillCostAttr = manageRefillsVar.value.refillCostOut;
// RefillVariables.RefillVolume = ManageRefills.RefillVolume
vars.value.refillVariablesVar.refillVolumeAttr = manageRefillsVar.value.refillVolumeOut;
// RefillVariables.MaxRefill = ManageRefills.RefillMax
vars.value.refillVariablesVar.maxRefillAttr = manageRefillsVar.value.refillMaxOut;
// RefillVariables.CurrentValueRefill = GetProductMaximumAutoRefill_BP.CurrentValue
vars.value.refillVariablesVar.currentValueRefillAttr = getProductMaximumAutoRefill_BPVar.value.currentValueOut;
// RefillVariables.MaximumAllowed = GetProductMaximumAutoRefill_BP.MaximumAllowed
vars.value.refillVariablesVar.maximumAllowedAttr = getProductMaximumAutoRefill_BPVar.value.maximumAllowedOut;
// RefillVariables.CurrRefill = ManageRefills.CurrRefill
vars.value.refillVariablesVar.currRefillAttr = manageRefillsVar.value.currRefillOut;
// CurrentValue
// CurrentValue = 0
vars.value.currentValueVar = 0;
while (((OS.BuiltinFunctions.textToInteger(vars.value.refillVariablesVar.maximumAllowedAttr) >= vars.value.currentValueVar))) {
if(((vars.value.currentValueVar === 0))) {
// RefillPackage.Value = CurrentValue
vars.value.refillPackageVar.valueAttr = (vars.value.currentValueVar).toString();
// RefillPackage.Volume = 0
vars.value.refillPackageVar.volumeAttr = 0;
} else {
// RefillPackage.Value = CurrentValue
vars.value.refillPackageVar.valueAttr = (vars.value.currentValueVar).toString();
// RefillPackage.Volume = RefillPackage.Volume + TextToInteger
vars.value.refillPackageVar.volumeAttr = (vars.value.refillPackageVar.volumeAttr + OS.BuiltinFunctions.textToInteger(vars.value.refillVariablesVar.refillVolumeAttr));
}

// Execute Action: ListAppend
OS.SystemActions.listAppend(outVars.value.refillPackageListOut, vars.value.refillPackageVar, callContext);
// CurrentValue = CurrentValue + 1
vars.value.currentValueVar = (vars.value.currentValueVar + 1);
}

// Success = True
outVars.value.successOut = true;
// OutputRefill = RefillVariables
outVars.value.outputRefillOut = vars.value.refillVariablesVar;
} else {
// Success = False
outVars.value.successOut = false;
}

});
} else {
// Success = False
outVars.value.successOut = false;
}

});
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_Billing.GetProductMaximumAutoRefill$vars", [{
name: "AssociationId",
attrName: "associationIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "MSISDN",
attrName: "mSISDNInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "RefillPackage",
attrName: "refillPackageVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.STR_REFILLSRec();
},
complexType: WTF_MBPModel.STR_REFILLSRec
}, {
name: "CurrentValue",
attrName: "currentValueVar",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "RefillVariables",
attrName: "refillVariablesVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.STR_EXTRA_INTERNETRec();
},
complexType: WTF_MBPModel.STR_EXTRA_INTERNETRec
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_Billing.GetProductMaximumAutoRefill$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "RefillPackageList",
attrName: "refillPackageListOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.STR_REFILLSList();
},
complexType: WTF_MBPModel.STR_REFILLSList
}, {
name: "OutputRefill",
attrName: "outputRefillOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.STR_EXTRA_INTERNETRec();
},
complexType: WTF_MBPModel.STR_EXTRA_INTERNETRec
}]);
WTF_MBPController.default.clientActionProxies.getProductMaximumAutoRefill$Action = function (associationIdIn, mSISDNIn) {
associationIdIn = (associationIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : associationIdIn;
mSISDNIn = (mSISDNIn === undefined) ? "" : mSISDNIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getProductMaximumAutoRefill$Action.bind(controller, associationIdIn, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(mSISDNIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
RefillPackageList: actionResults.refillPackageListOut,
OutputRefill: actionResults.outputRefillOut
};
});
};
});

define("WTF_MBP.controller$GetPromotionsAndHotDealsActive", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_PromotionsList", "WTF_MBP.model$App_HotDealsList", "WTF_MBP.controller$ServerAction.GetPromotionsAndHotDealsActive", "WTF_MBP.model$App_PromotionsMBPList", "WTF_MBP.model$App_HotDealsMBPList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getPromotionsAndHotDealsActive$Action = function (userWtfIdIn, refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Saucy.GetPromotionsAndHotDealsActive$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
var getPromotionsAndHotDealsActiveVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Saucy.GetPromotionsAndHotDealsActive$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetPromotionsAndHotDealsActive
return controller.getPromotionsAndHotDealsActive$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, callContext).then(function (value) {
getPromotionsAndHotDealsActiveVar.value = value;
}).then(function () {
// HotDeals = GetPromotionsAndHotDealsActive.HotDeals
outVars.value.hotDealsOut = OS.DataTypes.JSConversions.typeConvertRecordList(getPromotionsAndHotDealsActiveVar.value.hotDealsOut, new WTF_MBPModel.App_HotDealsMBPList(), function (source, target) {
target.identifierAttr = source.identifierAttr;
target.fillRequiredAddressAttr = source.fillRequiredAddressAttr;
target.nameAttr = source.nameAttr;
target.descriptionAttr = source.descriptionAttr;
target.priceMarketAttr = source.priceMarketAttr;
target.priceHotDealAttr = source.priceHotDealAttr;
target.startDateTimeAttr = source.startDateTimeAttr;
target.expirationDateTimeAttr = source.expirationDateTimeAttr;
target.stockAttr = source.stockAttr;
target.hasStockAttr = source.hasStockAttr;
target.numberAlertStockAttr = source.numberAlertStockAttr;
target.hasMessageAlertStockAttr = source.hasMessageAlertStockAttr;
target.messageAlertStockAttr = source.messageAlertStockAttr;
target.requiredAddressAttr = source.requiredAddressAttr;
target.promoDateTimeAttr = source.promoDateTimeAttr;
target.pictureAttr.idAttr = source.app_PictureAttr.pictureIdAttr;
return target;
});
// Promotions = GetPromotionsAndHotDealsActive.Promotions
outVars.value.promotionsOut = OS.DataTypes.JSConversions.typeConvertRecordList(getPromotionsAndHotDealsActiveVar.value.promotionsOut, new WTF_MBPModel.App_PromotionsMBPList(), function (source, target) {
target.nameAttr = source.nameAttr;
target.descriptionAttr = source.descriptionAttr;
target.pictureAttr.idAttr = source.app_PictureAttr.pictureIdAttr;
target.pictureAttr.contentAttr = source.app_PictureAttr.contentAttr;
target.pictureAttr.filenameAttr = source.app_PictureAttr.filenameAttr;
target.categoryAttr = source.categoryAttr;
target.startDateTimeAttr = source.startDateTimeAttr;
target.expirationDateTimeAttr = source.expirationDateTimeAttr;
target.hasCountdownAttr = source.hasCountdownAttr;
target.callToAction_ActiveAttr = source.callToAction_ActiveAttr;
target.callToActionLabelAttr = source.callToActionLabelAttr;
target.callToActionUrlAttr = source.callToActionUrlAttr;
target.callToActionInAppAttr = source.callToActionInAppAttr;
return target;
});
// Success = GetPromotionsAndHotDealsActive.Success
outVars.value.successOut = getPromotionsAndHotDealsActiveVar.value.successOut;
// Message = GetPromotionsAndHotDealsActive.Message
outVars.value.messageOut = getPromotionsAndHotDealsActiveVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Saucy.GetPromotionsAndHotDealsActive$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Saucy.GetPromotionsAndHotDealsActive$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Promotions",
attrName: "promotionsOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_PromotionsMBPList();
},
complexType: WTF_MBPModel.App_PromotionsMBPList
}, {
name: "HotDeals",
attrName: "hotDealsOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_HotDealsMBPList();
},
complexType: WTF_MBPModel.App_HotDealsMBPList
}]);
WTF_MBPController.default.clientActionProxies.getPromotionsAndHotDealsActive$Action = function (userWtfIdIn, refreshTokenIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getPromotionsAndHotDealsActive$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
Promotions: actionResults.promotionsOut,
HotDeals: actionResults.hotDealsOut
};
});
};
});

define("WTF_MBP.controller$GetRevolutVoucher", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_WalletCardRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.GetRevolutVoucher", "WTF_MBP.controller$LogEventFacebook_MBP", "WTF_MBP.controller$setActivityLog_RequestRevolut"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getRevolutVoucher$Action = function (userWtfIdIn, refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Revolut.GetRevolutVoucher$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
var getRevolutVoucherVar = new OS.DataTypes.VariableHolder();
var logEventFacebookVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Revolut.GetRevolutVoucher$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetRevolutVoucher
return controller.getRevolutVoucher$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, callContext).then(function (value) {
getRevolutVoucherVar.value = value;
}).then(function () {
// Success = GetRevolutVoucher.Success
outVars.value.successOut = getRevolutVoucherVar.value.successOut;
// Message = GetRevolutVoucher.Message
outVars.value.messageOut = getRevolutVoucherVar.value.messageOut;
// WalletCard = GetRevolutVoucher.WalletCard
outVars.value.walletCardOut = getRevolutVoucherVar.value.walletCardOut;
// UserWithoutBenefit = GetRevolutVoucher.UserWithoutBenefit
outVars.value.userWithoutBenefitOut = getRevolutVoucherVar.value.userWithoutBenefitOut;
// MessageForUserWithoutBenefit = GetRevolutVoucher.MessageForUserWithoutBenefit
outVars.value.messageForUserWithoutBenefitOut = getRevolutVoucherVar.value.messageForUserWithoutBenefitOut;
// Execute Action: LogEventFacebook
logEventFacebookVar.value = WTF_MBPController.default.logEventFacebook_MBP$Action("ASSIGN_REVOLUT", callContext);

// Execute Action: setActivityLog_RequestRevolut
return WTF_MBPController.default.setActivityLog_RequestRevolut$Action("", callContext);
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Revolut.GetRevolutVoucher$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Revolut.GetRevolutVoucher$outVars", [{
name: "UserWithoutBenefit",
attrName: "userWithoutBenefitOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "MessageForUserWithoutBenefit",
attrName: "messageForUserWithoutBenefitOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "WalletCard",
attrName: "walletCardOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_WalletCardRec();
},
complexType: WTF_BPModel.App_WalletCardRec
}]);
WTF_MBPController.default.clientActionProxies.getRevolutVoucher$Action = function (userWtfIdIn, refreshTokenIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getRevolutVoucher$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
UserWithoutBenefit: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.userWithoutBenefitOut, OS.Types.Boolean, true),
MessageForUserWithoutBenefit: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageForUserWithoutBenefitOut, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
WalletCard: actionResults.walletCardOut
};
});
};
});

define("WTF_MBP.controller$GetScratchRules", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_RegulationRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.GetScratchRules", "WTF_MBP.model$STR_SCRATCH_RULESRec"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getScratchRules$Action = function (userWtfIdIn, refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Scratch.GetScratchRules$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
var getScratchRulesVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Scratch.GetScratchRules$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetScratchRules
return controller.getScratchRules$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, callContext).then(function (value) {
getScratchRulesVar.value = value;
}).then(function () {
// ScratchRules = GetScratchRules.App_Regulation
outVars.value.scratchRulesOut = OS.DataTypes.JSConversions.typeConvertRecord(getScratchRulesVar.value.app_RegulationOut, new WTF_MBPModel.STR_SCRATCH_RULESRec(), function (source, target) {
target.titleAttr = source.titleAttr;
target.bodyAttr = source.bodyAttr;
return target;
});
// Success = GetScratchRules.Success
outVars.value.successOut = getScratchRulesVar.value.successOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Scratch.GetScratchRules$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Scratch.GetScratchRules$outVars", [{
name: "ScratchRules",
attrName: "scratchRulesOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.STR_SCRATCH_RULESRec();
},
complexType: WTF_MBPModel.STR_SCRATCH_RULESRec
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.getScratchRules$Action = function (userWtfIdIn, refreshTokenIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getScratchRules$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
ScratchRules: actionResults.scratchRulesOut,
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$GetScratchRulesLocal", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$STR_REGULATIONRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.GetLastVersionRegulation", "WTF_MBP.controller$Cache_ValidationByService", "WTF_MBP.model$Local_SCRATCH_REGULATIONRecord", "WTF_MBP.controller$GetApplicationName_MBP", "WTF_MBP.model$STR_CACHE_SERVICERec", "WTF_MBP.controller$GetCacheServiceID", "WTF_MBP.model$Local_SCRATCH_REGULATIONRec", "WTF_MBP.model$STR_SCRATCH_RULESRec", "WTF_MBP.model$Local_SCRATCH_REGULATIONRecordList", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getScratchRulesLocal$Action = function (callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Scratch.GetScratchRulesLocal$vars"))());
var getLastVersionRegulationVar = new OS.DataTypes.VariableHolder();
var cache_ValidationByServiceVar = new OS.DataTypes.VariableHolder();
var createLocalScratchRegulationVar = new OS.DataTypes.VariableHolder();
var getApplicationName_MBPVar = new OS.DataTypes.VariableHolder();
var getScratchRegulationsVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_SCRATCH_REGULATIONRecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Scratch.GetScratchRulesLocal$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetScratchRegulations
var getScratchRegulationsAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_SCRATCH_REGULATIONRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_SCRATCH_REGULATION\".\"Id\" o0, \"ENLocal_SCRATCH_REGULATION\".\"Title\" o1, \"ENLocal_SCRATCH_REGULATION\".\"Body\" o2, \"ENLocal_SCRATCH_REGULATION\".\"DateTime\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_SCRATCH_REGULATION\" \"ENLocal_SCRATCH_REGULATION\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_SCRATCH_REGULATIONRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_SCRATCH_REGULATIONAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getScratchRegulationsVar.value;
});
};
return getScratchRegulationsAggr().then(function () {
// Execute Action: Cache_ValidationByService
return WTF_MBPController.default.cache_ValidationByService$Action(WTF_MBPController.default.getCacheServiceID$Action(callContext.withoutIterationContext()).cacheServicesOut.scratchRulesAttr, false, false, OS.DataTypes.DateTime.defaultValue, callContext).then(function (value) {
cache_ValidationByServiceVar.value = value;
});
}).then(function () {
// GetScratchRegulations.Empty?
return OS.Flow.executeSequence(function () {
if(((getScratchRegulationsVar.value.listOut.isEmpty || !(cache_ValidationByServiceVar.value.useCacheOut)))) {
// Execute Action: GetApplicationName_MBP
return WTF_MBPController.default.getApplicationName_MBP$Action(callContext).then(function (value) {
getApplicationName_MBPVar.value = value;
}).then(function () {
// Execute Action: GetLastVersionRegulation
return controller.getLastVersionRegulation$ServerAction(getApplicationName_MBPVar.value.valueOut, "Scratch", callContext).then(function (value) {
getLastVersionRegulationVar.value = value;
});
}).then(function () {
return OS.Flow.executeSequence(function () {
if((getLastVersionRegulationVar.value.successOut)) {
// TempScratchRegulation.Title = GetLastVersionRegulation.Regulation.Title
vars.value.tempScratchRegulationVar.titleAttr = getLastVersionRegulationVar.value.regulationOut.titleAttr;
// TempScratchRegulation.Body = GetLastVersionRegulation.Regulation.Body
vars.value.tempScratchRegulationVar.bodyAttr = getLastVersionRegulationVar.value.regulationOut.bodyAttr;
// TempScratchRegulation.DateTime = CurrDateTime
vars.value.tempScratchRegulationVar.dateTimeAttr = OS.BuiltinFunctions.currDateTime();
// TempScratchRegulation.Id = GetScratchRegulations.List.Current.Local_SCRATCH_REGULATION.Id
vars.value.tempScratchRegulationVar.idAttr = getScratchRegulationsVar.value.listOut.getCurrent(callContext.iterationContext).local_SCRATCH_REGULATIONAttr.idAttr;
// Execute Action: CreateLocalScratchRegulation
return WTF_MBPModel.entities.Local_SCRATCH_REGULATION.createOrUpdate(WTF_MBPModel.Local_SCRATCH_REGULATIONRecord.fromStructure(vars.value.tempScratchRegulationVar), callContext).then(function (value) {
createLocalScratchRegulationVar.value = value;
}).then(function () {
// SetScratchRules
// ScratchRules = GetLastVersionRegulation.Regulation
outVars.value.scratchRulesOut = OS.DataTypes.JSConversions.typeConvertRecord(getLastVersionRegulationVar.value.regulationOut, new WTF_MBPModel.STR_SCRATCH_RULESRec(), function (source, target) {
target.titleAttr = source.titleAttr;
target.bodyAttr = source.bodyAttr;
return target;
});
});
} else {
// Success = False
outVars.value.successOut = false;
}

});
});
} else {
// SetScratchRules
// ScratchRules.Title = GetScratchRegulations.List.Current.Local_SCRATCH_REGULATION.Title
outVars.value.scratchRulesOut.titleAttr = getScratchRegulationsVar.value.listOut.getCurrent(callContext.iterationContext).local_SCRATCH_REGULATIONAttr.titleAttr;
// ScratchRules.Body = GetScratchRegulations.List.Current.Local_SCRATCH_REGULATION.Body
outVars.value.scratchRulesOut.bodyAttr = getScratchRegulationsVar.value.listOut.getCurrent(callContext.iterationContext).local_SCRATCH_REGULATIONAttr.bodyAttr;
}

});
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Scratch.GetScratchRulesLocal$vars", [{
name: "TempScratchRegulation",
attrName: "tempScratchRegulationVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.Local_SCRATCH_REGULATIONRec();
},
complexType: WTF_MBPModel.Local_SCRATCH_REGULATIONRec
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Scratch.GetScratchRulesLocal$outVars", [{
name: "ScratchRules",
attrName: "scratchRulesOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.STR_SCRATCH_RULESRec();
},
complexType: WTF_MBPModel.STR_SCRATCH_RULESRec
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.getScratchRulesLocal$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.getScratchRulesLocal$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
ScratchRules: actionResults.scratchRulesOut,
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$GetServices", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_MBP.model$STR_ASSOCIATION_FULL_BPList", "WTF_MBP.controller$ServerAction.GetAssociationsFullInfo_BP", "WTF_MBP.controller$Cache_ValidationByService", "WTF_MBP.model$Local_ASSOCIATIONRecordList", "WTF_MBP.model$Local_SERVICERecord", "WTF_MBP.model$STR_CACHE_SERVICERec", "WTF_MBP.controller$GetCacheServiceID", "WTF_MBP.model$Local_SERVICERecordList", "WTF_MBP.model$Local_SERVICERec", "WTF_MBP.model$App_UserAssociationsList", "WTF_MBP.model$STR_SERVICES_BPList", "WTF_BP.model$STR_SERVICES_BPRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_BP.model$App_TmcodeRec", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORecordList", "WTF_MBP.model$Local_ASSOCIATIONRec", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getServices$Action = function (isForceCacheRefreshIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_Selfcare.GetServices$vars"))());
vars.value.isForceCacheRefreshInLocal = isForceCacheRefreshIn;
var getAssociationsFullInfo_BPVar = new OS.DataTypes.VariableHolder();
var cache_ValidationByServiceVar = new OS.DataTypes.VariableHolder();
var createOrUpdateLocal_SERVICEVar = new OS.DataTypes.VariableHolder();
var getAssociationByIDVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ASSOCIATIONRecordList))());
var getServiceByIDVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_SERVICERecordList))());
var getAssociationsVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ASSOCIATIONRecordList))());
var getServicesByAssociationVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_SERVICERecordList))());
var getTokenInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_Selfcare.GetServices$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetAssociations
var getAssociationsAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ASSOCIATIONRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15";
} else {
selectSql += "\"ENLocal_ASSOCIATION\".\"Id\" o0, \"ENLocal_ASSOCIATION\".\"DisplayValue\" o1, \"ENLocal_ASSOCIATION\".\"FriendlyName\" o2, \"ENLocal_ASSOCIATION\".\"RoleName\" o3, \"ENLocal_ASSOCIATION\".\"Key\" o4, \"ENLocal_ASSOCIATION\".\"Value\" o5, \"ENLocal_ASSOCIATION\".\"Master\" o6, \"ENLocal_ASSOCIATION\".\"ContractDN\" o7, \"ENLocal_ASSOCIATION\".\"AccountOwner\" o8, \"ENLocal_ASSOCIATION\".\"AccountOwnerNIF\" o9, \"ENLocal_ASSOCIATION\".\"AccountOwnerEmail\" o10, \"ENLocal_ASSOCIATION\".\"AccountOwnerPhoneNr\" o11, \"ENLocal_ASSOCIATION\".\"CustCode_ClientNumber\" o12, \"ENLocal_ASSOCIATION\".\"PersonId\" o13, \"ENLocal_ASSOCIATION\".\"IsPending\" o14, \"ENLocal_ASSOCIATION\".\"UA\" o15";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ASSOCIATION\" \"ENLocal_ASSOCIATION\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ASSOCIATIONRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ASSOCIATIONAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getAssociationsVar.value;
});
};
return getAssociationsAggr().then(function () {
// Execute Action: Cache_ValidationByService
return WTF_MBPController.default.cache_ValidationByService$Action(WTF_MBPController.default.getCacheServiceID$Action(callContext.withoutIterationContext()).cacheServicesOut.associationsAttr, false, false, OS.DataTypes.DateTime.defaultValue, callContext).then(function (value) {
cache_ValidationByServiceVar.value = value;
});
}).then(function () {
// ForceRefresh or EmptyAssociations?
return OS.Flow.executeSequence(function () {
if((((vars.value.isForceCacheRefreshInLocal || !(cache_ValidationByServiceVar.value.useCacheOut)) || getAssociationsVar.value.listOut.isEmpty))) {
// Aggregate: GetTokenInfo
var getTokenInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_ACCESS_TOKEN_INFO\".\"Id\" o0, \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" o1, \"ENLocal_ACCESS_TOKEN_INFO\".\"Access_token\" o2, \"ENLocal_ACCESS_TOKEN_INFO\".\"IsUserRegistered\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ACCESS_TOKEN_INFO\" \"ENLocal_ACCESS_TOKEN_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ACCESS_TOKEN_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getTokenInfoVar.value;
});
};
return getTokenInfoAggr().then(function () {
// EmtpyToken?
return OS.Flow.executeSequence(function () {
if(((getTokenInfoVar.value.listOut.isEmpty || (OS.BuiltinFunctions.trim(getTokenInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr) === "")))) {
// SetOutput
// Success = False
outVars.value.successOut = false;
} else {
// Execute Action: GetAssociationsFullInfo_BP
return controller.getAssociationsFullInfo_BP$ServerAction(getTokenInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr, callContext).then(function (value) {
getAssociationsFullInfo_BPVar.value = value;
}).then(function () {
// GetAssociations.Success?
return OS.Flow.executeSequence(function () {
if((getAssociationsFullInfo_BPVar.value.successOut)) {
// Execute Action: DeleteAllServices
return WTF_MBPModel.entities.Local_SERVICE.deleteAll(callContext).then(function () {
// Execute Action: DeleteAllAssociations
return WTF_MBPModel.entities.Local_ASSOCIATION.deleteAll(callContext);
}).then(function () {
// Execute Action: CreateAllAssociations
return WTF_MBPModel.entities.Local_ASSOCIATION.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(getAssociationsFullInfo_BPVar.value.associationListFullOut, new WTF_MBPModel.Local_ASSOCIATIONRecordList(), function (source, target) {
target.local_ASSOCIATIONAttr.idAttr = OS.BuiltinFunctions.longIntegerToIdentifier(source.idAttr);
target.local_ASSOCIATIONAttr.displayValueAttr = source.displayValueAttr;
target.local_ASSOCIATIONAttr.friendlyNameAttr = source.friendlyNameAttr;
target.local_ASSOCIATIONAttr.roleNameAttr = source.roleNameAttr;
target.local_ASSOCIATIONAttr.keyAttr = source.keyAttr;
target.local_ASSOCIATIONAttr.valueAttr = source.valueAttr;
target.local_ASSOCIATIONAttr.masterAttr = source.masterAttr;
target.local_ASSOCIATIONAttr.accountOwnerAttr = source.ownerNameAttr;
target.local_ASSOCIATIONAttr.accountOwnerNIFAttr = source.ownerNIFAttr;
target.local_ASSOCIATIONAttr.accountOwnerEmailAttr = source.ownerEmailAttr;
target.local_ASSOCIATIONAttr.accountOwnerPhoneNrAttr = source.ownerPhonenumberAttr;
target.local_ASSOCIATIONAttr.custCode_ClientNumberAttr = source.custCodeAttr;
target.local_ASSOCIATIONAttr.personIdAttr = source.personIdAttr;
target.local_ASSOCIATIONAttr.isPendingAttr = source.hasPendingAssociationsAttr;
target.local_ASSOCIATIONAttr.uAAttr = source.unitAddressAttr;
return target;
}), callContext);
}).then(function () {
// Associations
// Foreach GetAssociationsFullInfo_BP.AssociationListFull
callContext.iterationContext.registerIterationStart(getAssociationsFullInfo_BPVar.value.associationListFullOut);
}).then(function () {
return OS.Flow.tryFinally(function () {
var associationListFullIterator = callContext.iterationContext.getIterator(getAssociationsFullInfo_BPVar.value.associationListFullOut);
var associationListFullIndexMax = getAssociationsFullInfo_BPVar.value.associationListFullOut.length;
var associationListFullIndex = 0;
return OS.Flow.whileAsync(function () {
return (((associationListFullIndex < getAssociationsFullInfo_BPVar.value.associationListFullOut.length)) && (associationListFullIndexMax > 0));
}, function () {
associationListFullIterator.currentRowNumber = associationListFullIndex;
// Aggregate: GetAssociationByID
var getAssociationByIDAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ASSOCIATIONRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}

var qploId = getAssociationsFullInfo_BPVar.value.associationListFullOut.getItem(associationListFullIndex.valueOf()).idAttr;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15";
} else {
selectSql += "\"ENLocal_ASSOCIATION\".\"Id\" o0, \"ENLocal_ASSOCIATION\".\"DisplayValue\" o1, \"ENLocal_ASSOCIATION\".\"FriendlyName\" o2, \"ENLocal_ASSOCIATION\".\"RoleName\" o3, \"ENLocal_ASSOCIATION\".\"Key\" o4, \"ENLocal_ASSOCIATION\".\"Value\" o5, \"ENLocal_ASSOCIATION\".\"Master\" o6, \"ENLocal_ASSOCIATION\".\"ContractDN\" o7, \"ENLocal_ASSOCIATION\".\"AccountOwner\" o8, \"ENLocal_ASSOCIATION\".\"AccountOwnerNIF\" o9, \"ENLocal_ASSOCIATION\".\"AccountOwnerEmail\" o10, \"ENLocal_ASSOCIATION\".\"AccountOwnerPhoneNr\" o11, \"ENLocal_ASSOCIATION\".\"CustCode_ClientNumber\" o12, \"ENLocal_ASSOCIATION\".\"PersonId\" o13, \"ENLocal_ASSOCIATION\".\"IsPending\" o14, \"ENLocal_ASSOCIATION\".\"UA\" o15";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ASSOCIATION\" \"ENLocal_ASSOCIATION\"";
fromAndWhereSql += " WHERE (\"ENLocal_ASSOCIATION\".\"Id\" = CAST((:qploId) AS INTEGER))";
argsList.add("qploId", /*LONGINTEGER*/ 4, qploId);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ASSOCIATIONRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ASSOCIATIONAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getAssociationByIDVar.value;
});
};
return getAssociationByIDAggr().then(function () {
// GetAssociationByID.Empty?
return OS.Flow.executeSequence(function () {
if((!(getAssociationByIDVar.value.listOut.isEmpty))) {
// Services
// Foreach GetAssociationsFullInfo_BP.AssociationListFull.Current.Services
callContext.iterationContext.registerIterationStart(getAssociationsFullInfo_BPVar.value.associationListFullOut.getItem(associationListFullIndex.valueOf()).servicesAttr);
return OS.Flow.tryFinally(function () {
var servicesIterator = callContext.iterationContext.getIterator(getAssociationsFullInfo_BPVar.value.associationListFullOut.getItem(associationListFullIndex.valueOf()).servicesAttr);
var servicesIndexMax = getAssociationsFullInfo_BPVar.value.associationListFullOut.getItem(associationListFullIndex.valueOf()).servicesAttr.length;
var servicesIndex = 0;
return OS.Flow.whileAsync(function () {
return (((servicesIndex < getAssociationsFullInfo_BPVar.value.associationListFullOut.getItem(associationListFullIndex.valueOf()).servicesAttr.length)) && (servicesIndexMax > 0));
}, function () {
servicesIterator.currentRowNumber = servicesIndex;
// Aggregate: GetServiceByID
var getServiceByIDAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_SERVICERecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}

var qpstServiceId = getAssociationsFullInfo_BPVar.value.associationListFullOut.getItem(associationListFullIndex.valueOf()).servicesAttr.getItem(servicesIndex.valueOf()).idAttr;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8";
} else {
selectSql += "\"ENLocal_SERVICE\".\"Id\" o0, \"ENLocal_SERVICE\".\"ServiceId\" o1, \"ENLocal_SERVICE\".\"AssociationID\" o2, \"ENLocal_SERVICE\".\"Name\" o3, \"ENLocal_SERVICE\".\"ServiceAccount\" o4, \"ENLocal_SERVICE\".\"UiLabel\" o5, \"ENLocal_SERVICE\".\"Plan\" o6, \"ENLocal_SERVICE\".\"TMCodeID\" o7, \"ENLocal_SERVICE\".\"TMCodeDesc\" o8";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_SERVICE\" \"ENLocal_SERVICE\"";
fromAndWhereSql += " WHERE (\"ENLocal_SERVICE\".\"ServiceId\" = :qpstServiceId)";
argsList.add("qpstServiceId", /*TEXT*/ 0, qpstServiceId);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_SERVICERecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_SERVICEAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getServiceByIDVar.value;
});
};
return getServiceByIDAggr().then(function () {
// GetServiceByID.Empty?
return OS.Flow.executeSequence(function () {
if((getServiceByIDVar.value.listOut.isEmpty)) {
// TempService = GetAssociationsFullInfo_BP.AssociationListFull.Current.Services.Current
vars.value.tempServiceVar = OS.DataTypes.JSConversions.typeConvertRecord(getAssociationsFullInfo_BPVar.value.associationListFullOut.getItem(associationListFullIndex.valueOf()).servicesAttr.getItem(servicesIndex.valueOf()), new WTF_MBPModel.Local_SERVICERec(), function (source, target) {
target.idAttr = OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.nullIdentifier());
target.serviceIdAttr = source.idAttr;
target.associationIDAttr = OS.BuiltinFunctions.longIntegerToIdentifier(getAssociationsFullInfo_BPVar.value.associationListFullOut.getItem(associationListFullIndex.valueOf()).idAttr);
target.nameAttr = source.nameAttr;
target.serviceAccountAttr = source.serviceAccountAttr;
target.uiLabelAttr = source.uiLabelAttr;
target.planAttr = source.planAttr;
target.tMCodeIDAttr = OS.BuiltinFunctions.longIntegerToText(source.app_TmcodeAttr.tmcodeIdAttr);
target.tMCodeDescAttr = source.app_TmcodeAttr.descAttr;
return target;
});
// Execute Action: CreateOrUpdateLocal_SERVICE
return WTF_MBPModel.entities.Local_SERVICE.createOrUpdate(WTF_MBPModel.Local_SERVICERecord.fromStructure(vars.value.tempServiceVar), callContext).then(function (value) {
createOrUpdateLocal_SERVICEVar.value = value;
});
}

});
}).then(function () {
servicesIndexMax--;
servicesIndex++;
});
});
}, function () {
callContext.iterationContext.registerIterationEnd(getAssociationsFullInfo_BPVar.value.associationListFullOut.getItem(associationListFullIndex.valueOf()).servicesAttr);
});
}

});
}).then(function () {
associationListFullIndexMax--;
associationListFullIndex++;
});
});
}, function () {
callContext.iterationContext.registerIterationEnd(getAssociationsFullInfo_BPVar.value.associationListFullOut);
});
}).then(function () {
// Associations
// Foreach GetAssociationsFullInfo_BP.AssociationListFull
callContext.iterationContext.registerIterationStart(getAssociationsFullInfo_BPVar.value.associationListFullOut);
try {var associationListFullIterator = callContext.iterationContext.getIterator(getAssociationsFullInfo_BPVar.value.associationListFullOut);
var associationListFullIndexMax = getAssociationsFullInfo_BPVar.value.associationListFullOut.length;
var associationListFullIndex = 0;
while ((((associationListFullIndex < getAssociationsFullInfo_BPVar.value.associationListFullOut.length)) && (associationListFullIndexMax > 0))) {
associationListFullIterator.currentRowNumber = associationListFullIndex;
// SetID
// TempID = GetAssociationsFullInfo_BP.AssociationListFull.Current.Id
vars.value.tempIDVar = getAssociationsFullInfo_BPVar.value.associationListFullOut.getItem(associationListFullIndex.valueOf()).idAttr;
// Services
// Foreach GetAssociationsFullInfo_BP.AssociationListFull.Current.Services
callContext.iterationContext.registerIterationStart(getAssociationsFullInfo_BPVar.value.associationListFullOut.getItem(associationListFullIndex.valueOf()).servicesAttr);
try {var servicesIterator = callContext.iterationContext.getIterator(getAssociationsFullInfo_BPVar.value.associationListFullOut.getItem(associationListFullIndex.valueOf()).servicesAttr);
var servicesIndexMax = getAssociationsFullInfo_BPVar.value.associationListFullOut.getItem(associationListFullIndex.valueOf()).servicesAttr.length;
var servicesIndex = 0;
while ((((servicesIndex < getAssociationsFullInfo_BPVar.value.associationListFullOut.getItem(associationListFullIndex.valueOf()).servicesAttr.length)) && (servicesIndexMax > 0))) {
servicesIterator.currentRowNumber = servicesIndex;
// Execute Action: ListAppend
OS.SystemActions.listAppend(outVars.value.app_UserAssociationsWithServicesOut, OS.DataTypes.JSConversions.typeConvertRecord(getAssociationsFullInfo_BPVar.value.associationListFullOut.getItem(associationListFullIndex.valueOf()).servicesAttr.getItem(servicesIndex.valueOf()), new WTF_BPModel.App_UserAssociationsRec(), function (source, target) {
target.msisdnAttr = source.serviceNumberAttr;
target.associationIdAttr = source.idAttr;
target.app_TmcodeAttr = source.app_TmcodeAttr;
return target;
}), callContext);
servicesIndexMax--;
servicesIndex++;
}

} finally {
callContext.iterationContext.registerIterationEnd(getAssociationsFullInfo_BPVar.value.associationListFullOut.getItem(associationListFullIndex.valueOf()).servicesAttr);
}

associationListFullIndexMax--;
associationListFullIndex++;
}

} finally {
callContext.iterationContext.registerIterationEnd(getAssociationsFullInfo_BPVar.value.associationListFullOut);
}

});
} else {
// SetOutput
// Success = False
outVars.value.successOut = false;
}

});
});
}

});
});
} else {
// Associations
// Foreach GetAssociations.List
callContext.iterationContext.registerIterationStart(getAssociationsVar.value.listOut);
return OS.Flow.tryFinally(function () {
var getAssociationsIterator = callContext.iterationContext.getIterator(getAssociationsVar.value.listOut);
var getAssociationsIndexMax = getAssociationsVar.value.listOut.length;
var getAssociationsIndex = 0;
return OS.Flow.whileAsync(function () {
return (((getAssociationsIndex < getAssociationsVar.value.listOut.length)) && (getAssociationsIndexMax > 0));
}, function () {
getAssociationsIterator.currentRowNumber = getAssociationsIndex;
// SetID
// TempID = GetAssociations.List.Current.Local_ASSOCIATION.Id
vars.value.tempIDVar = getAssociationsVar.value.listOut.getItem(getAssociationsIndex.valueOf()).local_ASSOCIATIONAttr.idAttr;
// Aggregate: GetServicesByAssociation
var getServicesByAssociationAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_SERVICERecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}

var qploAssociationID = getAssociationsVar.value.listOut.getItem(getAssociationsIndex.valueOf()).local_ASSOCIATIONAttr.idAttr;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8";
} else {
selectSql += "\"ENLocal_SERVICE\".\"Id\" o0, \"ENLocal_SERVICE\".\"ServiceId\" o1, \"ENLocal_SERVICE\".\"AssociationID\" o2, \"ENLocal_SERVICE\".\"Name\" o3, \"ENLocal_SERVICE\".\"ServiceAccount\" o4, \"ENLocal_SERVICE\".\"UiLabel\" o5, \"ENLocal_SERVICE\".\"Plan\" o6, \"ENLocal_SERVICE\".\"TMCodeID\" o7, \"ENLocal_SERVICE\".\"TMCodeDesc\" o8";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_SERVICE\" \"ENLocal_SERVICE\"";
fromAndWhereSql += " WHERE ";
if (qploAssociationID != 0) {
fromAndWhereSql += "((\"ENLocal_SERVICE\".\"AssociationID\" = :qploAssociationID) AND (\"ENLocal_SERVICE\".\"AssociationID\" IS NOT NULL))";
argsList.add("qploAssociationID", /*LONGINTEGER*/ 4, qploAssociationID);
} else {
fromAndWhereSql += "(\"ENLocal_SERVICE\".\"AssociationID\" IS NULL)";
}
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_SERVICERecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_SERVICEAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getServicesByAssociationVar.value;
});
};
return getServicesByAssociationAggr().then(function () {
// Services
// Foreach GetServicesByAssociation.List
callContext.iterationContext.registerIterationStart(getServicesByAssociationVar.value.listOut);
}).then(function () {
try {var getServicesByAssociationIterator = callContext.iterationContext.getIterator(getServicesByAssociationVar.value.listOut);
var getServicesByAssociationIndexMax = getServicesByAssociationVar.value.listOut.length;
var getServicesByAssociationIndex = 0;
while ((((getServicesByAssociationIndex < getServicesByAssociationVar.value.listOut.length)) && (getServicesByAssociationIndexMax > 0))) {
getServicesByAssociationIterator.currentRowNumber = getServicesByAssociationIndex;
// Execute Action: ListAppendService
OS.SystemActions.listAppend(outVars.value.app_UserAssociationsWithServicesOut, OS.DataTypes.JSConversions.typeConvertRecord(getServicesByAssociationVar.value.listOut.getItem(getServicesByAssociationIndex.valueOf()).local_SERVICEAttr, new WTF_BPModel.App_UserAssociationsRec(), function (source, target) {
target.msisdnAttr = source.serviceIdAttr;
target.associationIdAttr = source.serviceIdAttr;
target.app_TmcodeAttr.tmcodeIdAttr = OS.BuiltinFunctions.textToLongInteger(source.tMCodeIDAttr);
target.app_TmcodeAttr.descAttr = source.tMCodeDescAttr;
return target;
}), callContext);
getServicesByAssociationIndexMax--;
getServicesByAssociationIndex++;
}

} finally {
callContext.iterationContext.registerIterationEnd(getServicesByAssociationVar.value.listOut);
}

}).then(function () {
getAssociationsIndexMax--;
getAssociationsIndex++;
});
});
}, function () {
callContext.iterationContext.registerIterationEnd(getAssociationsVar.value.listOut);
});
}

});
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_Selfcare.GetServices$vars", [{
name: "IsForceCacheRefresh",
attrName: "isForceCacheRefreshInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "TempID",
attrName: "tempIDVar",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "TempService",
attrName: "tempServiceVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.Local_SERVICERec();
},
complexType: WTF_MBPModel.Local_SERVICERec
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_Selfcare.GetServices$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "App_UserAssociationsWithServices",
attrName: "app_UserAssociationsWithServicesOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_UserAssociationsList();
},
complexType: WTF_MBPModel.App_UserAssociationsList
}]);
WTF_MBPController.default.clientActionProxies.getServices$Action = function (isForceCacheRefreshIn) {
isForceCacheRefreshIn = (isForceCacheRefreshIn === undefined) ? false : isForceCacheRefreshIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getServices$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(isForceCacheRefreshIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
App_UserAssociationsWithServices: actionResults.app_UserAssociationsWithServicesOut
};
});
};
});

define("WTF_MBP.controller$GetTermsApp", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_BP.model$App_RegulationRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.GetTermsApp"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getTermsApp$Action = function (callContext) {
callContext = controller.callContext(callContext);
var getTermsAppVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Regulation.GetTermsApp$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: GetTermsApp
return controller.getTermsApp$ServerAction(callContext).then(function (value) {
getTermsAppVar.value = value;
});
}).then(function () {
// App_Regulation = GetTermsApp.App_Regulation
outVars.value.app_RegulationOut = getTermsAppVar.value.app_RegulationOut;
// Success = GetTermsApp.Success
outVars.value.successOut = getTermsAppVar.value.successOut;
// Message = GetTermsApp.Message
outVars.value.messageOut = getTermsAppVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Regulation.GetTermsApp$outVars", [{
name: "App_Regulation",
attrName: "app_RegulationOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_RegulationRec();
},
complexType: WTF_BPModel.App_RegulationRec
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.getTermsApp$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.getTermsApp$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
App_Regulation: actionResults.app_RegulationOut,
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$GetTokenCinema", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_WalletCardRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.GetToken", "WTF_MBP.controller$LogEventFacebook_MBP", "WTF_MBP.controller$setActivityLog_RequestTokenCinema"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getTokenCinema$Action = function (userWtfIdIn, refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Cinemas.GetTokenCinema$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
var getTokenVar = new OS.DataTypes.VariableHolder();
var logEventFacebook_MBPVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Cinemas.GetTokenCinema$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetToken
return controller.getToken$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, callContext).then(function (value) {
getTokenVar.value = value;
}).then(function () {
// WalletCard = GetToken.WalletCard
outVars.value.walletCardOut = getTokenVar.value.walletCardOut;
// Success = GetToken.Success
outVars.value.successOut = getTokenVar.value.successOut;
// Message = GetToken.Message
outVars.value.messageOut = getTokenVar.value.messageOut;
}).then(function () {
return OS.Flow.executeSequence(function () {
if((getTokenVar.value.successOut)) {
// Execute Action: setActivityLog_RequestTokenCinema
return WTF_MBPController.default.setActivityLog_RequestTokenCinema$Action("", callContext).then(function () {
// Execute Action: LogEventFacebook_MBP
logEventFacebook_MBPVar.value = WTF_MBPController.default.logEventFacebook_MBP$Action("ASSIGN_TOKEN_CINEMAS", callContext);

});
}

});
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Cinemas.GetTokenCinema$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Cinemas.GetTokenCinema$outVars", [{
name: "WalletCard",
attrName: "walletCardOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_WalletCardRec();
},
complexType: WTF_BPModel.App_WalletCardRec
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.getTokenCinema$Action = function (userWtfIdIn, refreshTokenIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getTokenCinema$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
WalletCard: actionResults.walletCardOut,
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$GetUberVoucher", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_MBP.controller$LogEventFacebook_MBP", "WTF_MBP.controller$setActivityLog_RequestUberEatsVoucher", "WTF_BP.model$App_WalletCardRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.GetUberVoucher", "WTF_MBP.controller$setActivityLog_RequestUberVoucher"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getUberVoucher$Action = function (userWtfIdIn, refreshTokenIn, uberVoucherTypeIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Uber.GetUberVoucher$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
vars.value.uberVoucherTypeIdInLocal = uberVoucherTypeIdIn;
var getUberVoucherVar = new OS.DataTypes.VariableHolder();
var logEventFacebookUberVoucherVar = new OS.DataTypes.VariableHolder();
var logEventFacebookUberEatsVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Uber.GetUberVoucher$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetUberVoucher
return controller.getUberVoucher$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, vars.value.uberVoucherTypeIdInLocal, WTF_MBPModel.staticEntities.vOUCHERS_REQUEST_ORIGIN.clientApp, callContext).then(function (value) {
getUberVoucherVar.value = value;
}).then(function () {
// Success = GetUberVoucher.Success
outVars.value.successOut = getUberVoucherVar.value.successOut;
// Message = GetUberVoucher.Message
outVars.value.messageOut = getUberVoucherVar.value.messageOut;
// WalletCard = GetUberVoucher.WalletCard
outVars.value.walletCardOut = getUberVoucherVar.value.walletCardOut;
// WillChangeFlag = GetUberVoucher.WillChangeFlag
outVars.value.willChangeFlagOut = getUberVoucherVar.value.willChangeFlagOut;
// WillChangeMessage = GetUberVoucher.WillChangeMessage
outVars.value.willChangeMessageOut = getUberVoucherVar.value.willChangeMessageOut;
}).then(function () {
return OS.Flow.executeSequence(function () {
if(((((vars.value.uberVoucherTypeIdInLocal === WTF_MBPModel.staticEntities.vOUCHERS_TYPE.eatsClienteAtual) || (vars.value.uberVoucherTypeIdInLocal === WTF_MBPModel.staticEntities.vOUCHERS_TYPE.eatsNovoCliente)) && outVars.value.successOut))) {
// Execute Action: LogEventFacebookUberEats
logEventFacebookUberEatsVar.value = WTF_MBPController.default.logEventFacebook_MBP$Action("ASSIGN_UBER_EATS_VOUCHER", callContext);

// Execute Action: setActivityLog_RequestUberEatsVoucher
return WTF_MBPController.default.setActivityLog_RequestUberEatsVoucher$Action("", callContext);
} else {
return OS.Flow.executeSequence(function () {
if((((vars.value.uberVoucherTypeIdInLocal === WTF_MBPModel.staticEntities.vOUCHERS_TYPE.ridersNovoCliente) || (vars.value.uberVoucherTypeIdInLocal === WTF_MBPModel.staticEntities.vOUCHERS_TYPE.ridersClienteAtual)) && outVars.value.successOut)) {
// Execute Action: LogEventFacebookUberVoucher
logEventFacebookUberVoucherVar.value = WTF_MBPController.default.logEventFacebook_MBP$Action("ASSIGN_UBER_VOUCHER", callContext);

// Execute Action: setActivityLog_RequestUberVoucher
return WTF_MBPController.default.setActivityLog_RequestUberVoucher$Action("", callContext);
}

});
}

});
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Uber.GetUberVoucher$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "UberVoucherTypeId",
attrName: "uberVoucherTypeIdInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Uber.GetUberVoucher$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "WalletCard",
attrName: "walletCardOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_WalletCardRec();
},
complexType: WTF_BPModel.App_WalletCardRec
}, {
name: "WillChangeFlag",
attrName: "willChangeFlagOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "WillChangeMessage",
attrName: "willChangeMessageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.getUberVoucher$Action = function (userWtfIdIn, refreshTokenIn, uberVoucherTypeIdIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
uberVoucherTypeIdIn = (uberVoucherTypeIdIn === undefined) ? 0 : uberVoucherTypeIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getUberVoucher$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text), uberVoucherTypeIdIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
WalletCard: actionResults.walletCardOut,
WillChangeFlag: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.willChangeFlagOut, OS.Types.Boolean, true),
WillChangeMessage: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.willChangeMessageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$GetUrl_AuthorizeUser", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.GetUrl_AuthorizeUser"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getUrl_AuthorizeUser$Action = function (callBackURLIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SessionUserNOSToken.GetUrl_AuthorizeUser$vars"))());
vars.value.callBackURLInLocal = callBackURLIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getUrl_AuthorizeUserVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SessionUserNOSToken.GetUrl_AuthorizeUser$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetUrl_AuthorizeUser
return controller.getUrl_AuthorizeUser$ServerAction(vars.value.callBackURLInLocal, callContext).then(function (value) {
getUrl_AuthorizeUserVar.value = value;
}).then(function () {
// CodeVerifier = GetUrl_AuthorizeUser.CodeVerifier
outVars.value.codeVerifierOut = getUrl_AuthorizeUserVar.value.codeVerifierOut;
// URL = GetUrl_AuthorizeUser.URL
outVars.value.uRLOut = getUrl_AuthorizeUserVar.value.uRLOut;
// Parameters = GetUrl_AuthorizeUser.Parameters
outVars.value.parametersOut = getUrl_AuthorizeUserVar.value.parametersOut;
});
}).catch(function (ex) {
OS.Logger.trace("SessionUserNOSToken.GetUrl_AuthorizeUser", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SessionUserNOSToken.GetUrl_AuthorizeUser$vars", [{
name: "CallBackURL",
attrName: "callBackURLInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SessionUserNOSToken.GetUrl_AuthorizeUser$outVars", [{
name: "CodeVerifier",
attrName: "codeVerifierOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "URL",
attrName: "uRLOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameters",
attrName: "parametersOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.getUrl_AuthorizeUser$Action = function (callBackURLIn) {
callBackURLIn = (callBackURLIn === undefined) ? "" : callBackURLIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getUrl_AuthorizeUser$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(callBackURLIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
CodeVerifier: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.codeVerifierOut, OS.Types.Text, true),
URL: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.uRLOut, OS.Types.Text, true),
Parameters: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.parametersOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$GetUrl_RegistrationUser", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.GetUrl_RegistrationUser"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getUrl_RegistrationUser$Action = function (useOpenIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Login.GetUrl_RegistrationUser$vars"))());
vars.value.useOpenIdInLocal = useOpenIdIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getUrl_RegistrationUserVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Login.GetUrl_RegistrationUser$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetUrl_RegistrationUser
return controller.getUrl_RegistrationUser$ServerAction(vars.value.useOpenIdInLocal, callContext).then(function (value) {
getUrl_RegistrationUserVar.value = value;
}).then(function () {
// URL
// URL = GetUrl_RegistrationUser.URL
outVars.value.uRLOut = getUrl_RegistrationUserVar.value.uRLOut;
});
}).catch(function (ex) {
OS.Logger.trace("Login.GetUrl_RegistrationUser", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Login.GetUrl_RegistrationUser$vars", [{
name: "UseOpenId",
attrName: "useOpenIdInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Login.GetUrl_RegistrationUser$outVars", [{
name: "URL",
attrName: "uRLOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.getUrl_RegistrationUser$Action = function (useOpenIdIn) {
useOpenIdIn = (useOpenIdIn === undefined) ? false : useOpenIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getUrl_RegistrationUser$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(useOpenIdIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
URL: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.uRLOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$GetUserAssociationAndCreateUserWtfActive", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_MBP.model$Local_USER_WTFRecord", "WTF_BP.model$App_UserWtfRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.GetUserAssociationAndCreateOrUpdateUserWtfActive", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORecordList", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getUserAssociationAndCreateUserWtfActive$Action = function (user_AssociationIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.GetUserAssociationAndCreateUserWtfActive$vars"))());
vars.value.user_AssociationIdInLocal = user_AssociationIdIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getUserAssociationAndCreateOrUpdateUserWtfActiveVar = new OS.DataTypes.VariableHolder();
var createLocal_USER_WTFVar = new OS.DataTypes.VariableHolder();
var getLocalACCESSTOKENINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.GetUserAssociationAndCreateUserWtfActive$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalACCESSTOKENINFOES
var getLocalACCESSTOKENINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_ACCESS_TOKEN_INFO\".\"Id\" o0, \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" o1, \"ENLocal_ACCESS_TOKEN_INFO\".\"Access_token\" o2, \"ENLocal_ACCESS_TOKEN_INFO\".\"IsUserRegistered\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ACCESS_TOKEN_INFO\" \"ENLocal_ACCESS_TOKEN_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ACCESS_TOKEN_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalACCESSTOKENINFOESVar.value;
});
};
return getLocalACCESSTOKENINFOESAggr().then(function () {
return OS.Flow.executeSequence(function () {
if((getLocalACCESSTOKENINFOESVar.value.listOut.isEmpty)) {
// Success = False
outVars.value.successOut = false;
// Message = "Sessão inválida"
outVars.value.messageOut = "Sessão inválida";
} else {
// Execute Action: GetUserAssociationAndCreateOrUpdateUserWtfActive
return controller.getUserAssociationAndCreateOrUpdateUserWtfActive$ServerAction(vars.value.user_AssociationIdInLocal, getLocalACCESSTOKENINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr, callContext).then(function (value) {
getUserAssociationAndCreateOrUpdateUserWtfActiveVar.value = value;
}).then(function () {
return OS.Flow.executeSequence(function () {
if((getUserAssociationAndCreateOrUpdateUserWtfActiveVar.value.successOut)) {
// AlreadyInUse?
return OS.Flow.executeSequence(function () {
if(((getUserAssociationAndCreateOrUpdateUserWtfActiveVar.value.alreadyInUseOut === true))) {
// Success = True
outVars.value.successOut = true;
// AlreadyInUse = GetUserAssociationAndCreateOrUpdateUserWtfActive.AlreadyInUse
outVars.value.alreadyInUseOut = getUserAssociationAndCreateOrUpdateUserWtfActiveVar.value.alreadyInUseOut;
} else {
// Execute Action: DeleteAllLocal_USER_WTF
return WTF_MBPModel.entities.Local_USER_WTF.deleteAll(callContext).then(function () {
// Local_WTFUser = GetUserAssociationAndCreateOrUpdateUserWtfActive.ReturnUserWtf
vars.value.local_WTFUserVar = OS.DataTypes.JSConversions.typeConvertRecord(getUserAssociationAndCreateOrUpdateUserWtfActiveVar.value.returnUserWtfOut, new WTF_MBPModel.Local_USER_WTFRec(), function (source, target) {
target.idAttr = OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.integerToIdentifier(source.idAttr));
target.msisdnAttr = source.msisdnAttr;
target.codeMemberAttr = source.codeMemberAttr;
target.tmcode_labelAttr = source.tmcode_LabelAttr;
target.is_MonthlyRenewalAttr = source.is_MonthlyRenewalAttr;
return target;
});
// Execute Action: CreateLocal_USER_WTF
return WTF_MBPModel.entities.Local_USER_WTF.create(WTF_MBPModel.Local_USER_WTFRecord.fromStructure(vars.value.local_WTFUserVar), callContext).then(function (value) {
createLocal_USER_WTFVar.value = value;
});
}).then(function () {
// Success = True
outVars.value.successOut = true;
});
}

});
} else {
// Success = GetUserAssociationAndCreateOrUpdateUserWtfActive.Success
outVars.value.successOut = getUserAssociationAndCreateOrUpdateUserWtfActiveVar.value.successOut;
// Message = GetUserAssociationAndCreateOrUpdateUserWtfActive.Message
outVars.value.messageOut = getUserAssociationAndCreateOrUpdateUserWtfActiveVar.value.messageOut;
}

});
});
}

});
});
}).catch(function (ex) {
OS.Logger.trace("UserWTF.GetUserAssociationAndCreateUserWtfActive", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.GetUserAssociationAndCreateUserWtfActive$vars", [{
name: "User_AssociationId",
attrName: "user_AssociationIdInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Local_WTFUser",
attrName: "local_WTFUserVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.Local_USER_WTFRec();
},
complexType: WTF_MBPModel.Local_USER_WTFRec
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.GetUserAssociationAndCreateUserWtfActive$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "AlreadyInUse",
attrName: "alreadyInUseOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.getUserAssociationAndCreateUserWtfActive$Action = function (user_AssociationIdIn) {
user_AssociationIdIn = (user_AssociationIdIn === undefined) ? "" : user_AssociationIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getUserAssociationAndCreateUserWtfActive$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(user_AssociationIdIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
AlreadyInUse: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.alreadyInUseOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$GetUserDiamond", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$LongIntegerBooleanBooleanDIAMOND_TYPESIdentifierRecordList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getUserDiamond$Action = function (responseListIn, responsePartsGoldenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Diamonds.GetUserDiamond$vars"))());
vars.value.responseListInLocal = responseListIn.clone();
vars.value.responsePartsGoldenInLocal = responsePartsGoldenIn;
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Diamonds.GetUserDiamond$outVars"))());
// Foreach ResponseList
callContext.iterationContext.registerIterationStart(vars.value.responseListInLocal);
try {var responseListIterator = callContext.iterationContext.getIterator(vars.value.responseListInLocal);
var responseListIndexMax = vars.value.responseListInLocal.length;
var responseListIndex = 0;
while ((((responseListIndex < vars.value.responseListInLocal.length)) && (responseListIndexMax > 0))) {
responseListIterator.currentRowNumber = responseListIndex;
// IsGolden?
if(((vars.value.responseListInLocal.getItem(responseListIndex.valueOf()).typeAttr === WTF_MBPModel.staticEntities.dIAMOND_TYPES.golden))) {
// GoldenTotal = GoldenTotal + ResponseList.Current.QuantitySum
outVars.value.goldenTotalOut = outVars.value.goldenTotalOut.plus(OS.BuiltinFunctions.longIntegerToDecimal(vars.value.responseListInLocal.getItem(responseListIndex.valueOf()).quantitySumAttr));
// ExpiresTodayGolden?
if(((vars.value.responseListInLocal.getItem(responseListIndex.valueOf()).expireTodayAttr === true))) {
// GoldenExpiresToday = GoldenExpiresToday + ResponseList.Current.QuantitySum
outVars.value.goldenExpiresTodayOut = outVars.value.goldenExpiresTodayOut.add(vars.value.responseListInLocal.getItem(responseListIndex.valueOf()).quantitySumAttr);
}

} else {
// IsDefault?
if(((vars.value.responseListInLocal.getItem(responseListIndex.valueOf()).typeAttr === WTF_MBPModel.staticEntities.dIAMOND_TYPES.silver))) {
// DefaultTotal = DefaultTotal + ResponseList.Current.QuantitySum
outVars.value.defaultTotalOut = outVars.value.defaultTotalOut.add(vars.value.responseListInLocal.getItem(responseListIndex.valueOf()).quantitySumAttr);
// ExpiresTodayDefault?
if(((vars.value.responseListInLocal.getItem(responseListIndex.valueOf()).expireTodayAttr === true))) {
// DefaultExpiresToday = DefaultExpiresToday + ResponseList.Current.QuantitySum
outVars.value.defaultExpiresTodayOut = outVars.value.defaultExpiresTodayOut.add(vars.value.responseListInLocal.getItem(responseListIndex.valueOf()).quantitySumAttr);
}

// ExpiresTomorrowDefault?
if(((vars.value.responseListInLocal.getItem(responseListIndex.valueOf()).expireTomorrowAttr === true))) {
// DefaultExpiresTomorrow = DefaultExpiresTomorrow + ResponseList.Current.QuantitySum
outVars.value.defaultExpiresTomorrowOut = outVars.value.defaultExpiresTomorrowOut.add(vars.value.responseListInLocal.getItem(responseListIndex.valueOf()).quantitySumAttr);
}

}

}

responseListIndexMax--;
responseListIndex++;
}

} finally {
callContext.iterationContext.registerIterationEnd(vars.value.responseListInLocal);
}

// GoldenParts = ResponsePartsGolden
outVars.value.goldenPartsOut = vars.value.responsePartsGoldenInLocal;
return outVars.value;
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Diamonds.GetUserDiamond$vars", [{
name: "ResponseList",
attrName: "responseListInLocal",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.LongIntegerBooleanBooleanDIAMOND_TYPESIdentifierRecordList();
},
complexType: WTF_MBPModel.LongIntegerBooleanBooleanDIAMOND_TYPESIdentifierRecordList
}, {
name: "ResponsePartsGolden",
attrName: "responsePartsGoldenInLocal",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Diamonds.GetUserDiamond$outVars", [{
name: "DefaultTotal",
attrName: "defaultTotalOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.BuiltinFunctions.integerToLongInteger(0);
}
}, {
name: "GoldenTotal",
attrName: "goldenTotalOut",
mandatory: false,
dataType: OS.Types.Decimal,
defaultValue: function () {
return (OS.DataTypes.Decimal.defaultValue);
}
}, {
name: "DefaultExpiresToday",
attrName: "defaultExpiresTodayOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.BuiltinFunctions.integerToLongInteger(0);
}
}, {
name: "DefaultExpiresTomorrow",
attrName: "defaultExpiresTomorrowOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.BuiltinFunctions.integerToLongInteger(0);
}
}, {
name: "GoldenExpiresToday",
attrName: "goldenExpiresTodayOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.BuiltinFunctions.integerToLongInteger(0);
}
}, {
name: "GoldenParts",
attrName: "goldenPartsOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.clientActionProxies.getUserDiamond$Action = function (responseListIn, responsePartsGoldenIn) {
responseListIn = (responseListIn === undefined) ? new WTF_MBPModel.LongIntegerBooleanBooleanDIAMOND_TYPESIdentifierRecordList() : responseListIn;
responsePartsGoldenIn = (responsePartsGoldenIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : responsePartsGoldenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getUserDiamond$Action.bind(controller, responseListIn, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(responsePartsGoldenIn, OS.Types.LongInteger)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
DefaultTotal: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.defaultTotalOut, OS.Types.LongInteger, true),
GoldenTotal: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.goldenTotalOut, OS.Types.Decimal, true),
DefaultExpiresToday: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.defaultExpiresTodayOut, OS.Types.LongInteger, true),
DefaultExpiresTomorrow: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.defaultExpiresTomorrowOut, OS.Types.LongInteger, true),
GoldenExpiresToday: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.goldenExpiresTodayOut, OS.Types.LongInteger, true),
GoldenParts: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.goldenPartsOut, OS.Types.LongInteger, true)
};
});
};
});

define("WTF_MBP.controller$GetUserMSISDN", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.GetMSISDNByRefreshToken"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getUserMSISDN$Action = function (refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SessionUserNOSToken.GetUserMSISDN$vars"))());
vars.value.refreshTokenInLocal = refreshTokenIn;
var getMSISDNByRefreshTokenVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SessionUserNOSToken.GetUserMSISDN$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetMSISDNByRefreshToken
return controller.getMSISDNByRefreshToken$ServerAction(vars.value.refreshTokenInLocal, callContext).then(function (value) {
getMSISDNByRefreshTokenVar.value = value;
}).then(function () {
// MSISDN = GetMSISDNByRefreshToken.MSISDN
outVars.value.mSISDNOut = getMSISDNByRefreshTokenVar.value.mSISDNOut;
// IsWtf = GetMSISDNByRefreshToken.IsWtf
outVars.value.isWtfOut = getMSISDNByRefreshTokenVar.value.isWtfOut;
// Tariff = GetMSISDNByRefreshToken.Tariff
outVars.value.tariffOut = getMSISDNByRefreshTokenVar.value.tariffOut;
// Success = GetMSISDNByRefreshToken.Success
outVars.value.successOut = getMSISDNByRefreshTokenVar.value.successOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SessionUserNOSToken.GetUserMSISDN$vars", [{
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SessionUserNOSToken.GetUserMSISDN$outVars", [{
name: "MSISDN",
attrName: "mSISDNOut",
mandatory: false,
dataType: OS.Types.PhoneNumber,
defaultValue: function () {
return "";
}
}, {
name: "IsWtf",
attrName: "isWtfOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Tariff",
attrName: "tariffOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.getUserMSISDN$Action = function (refreshTokenIn) {
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getUserMSISDN$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.mSISDNOut, OS.Types.PhoneNumber, true),
IsWtf: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.isWtfOut, OS.Types.Boolean, true),
Tariff: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.tariffOut, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$GetUserProfileInfo", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "Mobile_LoginNOS.model", "Mobile_LoginNOS.model$UserProfileInfoRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$Mobile_LoginNOS", "WTF_MBP.controller$ServerAction.GetUserProfileInfo"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, Mobile_LoginNOSModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getUserProfileInfo$Action = function (refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.GetUserProfileInfo$vars"))());
vars.value.refreshTokenInLocal = refreshTokenIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getUserProfileInfoVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.GetUserProfileInfo$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetUserProfileInfo
return controller.getUserProfileInfo$ServerAction(vars.value.refreshTokenInLocal, callContext).then(function (value) {
getUserProfileInfoVar.value = value;
}).then(function () {
// UserProfileInfo = GetUserProfileInfo.UserProfileInfo
outVars.value.userProfileInfoOut = getUserProfileInfoVar.value.userProfileInfoOut;
// Success = GetUserProfileInfo.Success
outVars.value.successOut = getUserProfileInfoVar.value.successOut;
// Message = GetUserProfileInfo.Message
outVars.value.messageOut = getUserProfileInfoVar.value.messageOut;
});
}).catch(function (ex) {
OS.Logger.trace("UserWTF.GetUserProfileInfo", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.GetUserProfileInfo$vars", [{
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.GetUserProfileInfo$outVars", [{
name: "UserProfileInfo",
attrName: "userProfileInfoOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new Mobile_LoginNOSModel.UserProfileInfoRec();
},
complexType: Mobile_LoginNOSModel.UserProfileInfoRec
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.getUserProfileInfo$Action = function (refreshTokenIn) {
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getUserProfileInfo$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
UserProfileInfo: actionResults.userProfileInfoOut,
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$GetValidateSession", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.GetValidateSession_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getValidateSession$Action = function (refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SessionUserNOSToken.GetValidateSession$vars"))());
vars.value.refreshTokenInLocal = refreshTokenIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getValidateSessionVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SessionUserNOSToken.GetValidateSession$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetValidateSession
return controller.getValidateSession_BP$ServerAction(vars.value.refreshTokenInLocal, callContext).then(function (value) {
getValidateSessionVar.value = value;
}).then(function () {
// Success = GetValidateSession.Success
outVars.value.successOut = getValidateSessionVar.value.successOut;
// Message = GetValidateSession.Message
outVars.value.messageOut = getValidateSessionVar.value.messageOut;
});
}).catch(function (ex) {
OS.Logger.trace("SessionUserNOSToken.GetValidateSession", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SessionUserNOSToken.GetValidateSession$vars", [{
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SessionUserNOSToken.GetValidateSession$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.getValidateSession$Action = function (refreshTokenIn) {
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getValidateSession$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$GetVideoPath", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$Get_ClientIdAndClientSecret", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_MBP.controller$ServerAction.GetMovieDelight", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getVideoPath$Action = function (assetIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.VOD.GetVideoPath$vars"))());
vars.value.assetIdInLocal = assetIdIn;
var getMovieDelightVar = new OS.DataTypes.VariableHolder();
var get_ClientIdAndClientSecretVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var getLocalUSERNOSINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.VOD.GetVideoPath$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: Get_ClientIdAndClientSecret
return WTF_MBPController.default.get_ClientIdAndClientSecret$Action(callContext).then(function (value) {
get_ClientIdAndClientSecretVar.value = value;
});
}).then(function () {
// Execute Action: GetMovieDelight
return controller.getMovieDelight$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, vars.value.assetIdInLocal, callContext).then(function (value) {
getMovieDelightVar.value = value;
});
}).then(function () {
// Aggregate: GetLocalUSERNOSINFOES
var getLocalUSERNOSINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalUSERNOSINFOESVar.value;
});
};
return getLocalUSERNOSINFOESAggr();
}).then(function () {
// SessionId = GetMovieDelight.SessionId
outVars.value.sessionIdOut = getMovieDelightVar.value.sessionIdOut;
// Uid = GetLocalUSERNOSINFOES.List.Current.Local_USER_NOS_INFO.Uid
outVars.value.uidOut = getLocalUSERNOSINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr;
// Path = GetMovieDelight.Path
outVars.value.pathOut = getMovieDelightVar.value.pathOut;
// LicenceKey = GetMovieDelight.LicenceKey
outVars.value.licenceKeyOut = getMovieDelightVar.value.licenceKeyOut;
// Success = GetMovieDelight.Success
outVars.value.successOut = getMovieDelightVar.value.successOut;
// Message = GetMovieDelight.Message
outVars.value.messageOut = getMovieDelightVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.VOD.GetVideoPath$vars", [{
name: "AssetId",
attrName: "assetIdInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.VOD.GetVideoPath$outVars", [{
name: "SessionId",
attrName: "sessionIdOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Path",
attrName: "pathOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Uid",
attrName: "uidOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "LicenceKey",
attrName: "licenceKeyOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.getVideoPath$Action = function (assetIdIn) {
assetIdIn = (assetIdIn === undefined) ? "" : assetIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getVideoPath$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(assetIdIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.sessionIdOut, OS.Types.Text, true),
Path: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.pathOut, OS.Types.Text, true),
Uid: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.uidOut, OS.Types.Text, true),
LicenceKey: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.licenceKeyOut, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$GetWelcomePrizeInfo", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_BP.model$App_WelcomePrizeRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.GetWelcomePrizeInfo"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getWelcomePrizeInfo$Action = function (identifierIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Prizes.GetWelcomePrizeInfo$vars"))());
vars.value.identifierInLocal = identifierIn;
var getWelcomePrizeInfoVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Prizes.GetWelcomePrizeInfo$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: GetWelcomePrizeInfo
return controller.getWelcomePrizeInfo$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, vars.value.identifierInLocal, callContext).then(function (value) {
getWelcomePrizeInfoVar.value = value;
});
}).then(function () {
// Success = GetWelcomePrizeInfo.Success
outVars.value.successOut = getWelcomePrizeInfoVar.value.successOut;
// Message = GetWelcomePrizeInfo.Message
outVars.value.messageOut = getWelcomePrizeInfoVar.value.messageOut;
// App_WelcomePrize = GetWelcomePrizeInfo.App_WelcomePrize
outVars.value.app_WelcomePrizeOut = getWelcomePrizeInfoVar.value.app_WelcomePrizeOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Prizes.GetWelcomePrizeInfo$vars", [{
name: "Identifier",
attrName: "identifierInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Prizes.GetWelcomePrizeInfo$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_WelcomePrize",
attrName: "app_WelcomePrizeOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_WelcomePrizeRec();
},
complexType: WTF_BPModel.App_WelcomePrizeRec
}]);
WTF_MBPController.default.clientActionProxies.getWelcomePrizeInfo$Action = function (identifierIn) {
identifierIn = (identifierIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : identifierIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.getWelcomePrizeInfo$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(identifierIn, OS.Types.LongInteger)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
App_WelcomePrize: actionResults.app_WelcomePrizeOut
};
});
};
});

define("WTF_MBP.controller$HotDeal_Buy", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.model", "BuildInfoPlugin.controller", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_MBP.controller$ServerAction.HotDeal_Buy", "WTF_MBP.model$Local_HOT_DEAL_PURCHASERecord", "CommonPlugin.model$ErrorRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "BuildInfoPlugin.controller$GetBuildInfo", "WTF_MBP.referencesHealth$BuildInfoPlugin", "WTF_MBP.model$Local_HOT_DEAL_PURCHASERec", "WTF_MBP.model$Local_HOT_DEAL_PURCHASERecordList", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginModel, BuildInfoPluginController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.hotDeal_Buy$Action = function (hotDealIdentifierIn, amountIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Saucy.HotDeal_Buy$vars"))());
vars.value.hotDealIdentifierInLocal = hotDealIdentifierIn;
vars.value.amountInLocal = amountIn;
var hotDeal_BuyVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var createOrUpdateLocal_HOT_DEAL_PURCHASEVar = new OS.DataTypes.VariableHolder();
var getBuildInfoVar = new OS.DataTypes.VariableHolder();
var getLastHotDealPurchaseVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_HOT_DEAL_PURCHASERecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Saucy.HotDeal_Buy$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: GetBuildInfo
getBuildInfoVar.value = BuildInfoPluginController.default.getBuildInfo$Action(callContext);

// Execute Action: HotDeal_Buy
return controller.hotDeal_Buy$ServerAction(vars.value.hotDealIdentifierInLocal, OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.integerToIdentifier(OS.BuiltinFunctions.longIntegerToInteger(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr))), getActiveUserWTFVar.value.refreshTokenOut, getBuildInfoVar.value.buildOut, callContext).then(function (value) {
hotDeal_BuyVar.value = value;
});
}).then(function () {
// Success = HotDeal_Buy.Success
outVars.value.successOut = hotDeal_BuyVar.value.successOut;
// Message = HotDeal_Buy.Message
outVars.value.messageOut = hotDeal_BuyVar.value.messageOut;
// PaymentUrl = HotDeal_Buy.PaymentUrl
outVars.value.paymentUrlOut = hotDeal_BuyVar.value.paymentUrlOut;
// Aggregate: GetLastHotDealPurchase
var getLastHotDealPurchaseAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_HOT_DEAL_PURCHASERecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2";
} else {
selectSql += "\"ENLocal_HOT_DEAL_PURCHASE\".\"Id\" o0, \"ENLocal_HOT_DEAL_PURCHASE\".\"Amount\" o1, \"ENLocal_HOT_DEAL_PURCHASE\".\"DateTime\" o2";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_HOT_DEAL_PURCHASE\" \"ENLocal_HOT_DEAL_PURCHASE\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_HOT_DEAL_PURCHASERecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_HOT_DEAL_PURCHASEAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLastHotDealPurchaseVar.value;
});
};
return getLastHotDealPurchaseAggr();
}).then(function () {
// SetLocalRecord
// GetLastHotDealPurchase.List.Current.Local_HOT_DEAL_PURCHASE.Amount = Amount
getLastHotDealPurchaseVar.value.listOut.getCurrent(callContext.iterationContext).local_HOT_DEAL_PURCHASEAttr.amountAttr = vars.value.amountInLocal;
// GetLastHotDealPurchase.List.Current.Local_HOT_DEAL_PURCHASE.DateTime = CurrDateTime
getLastHotDealPurchaseVar.value.listOut.getCurrent(callContext.iterationContext).local_HOT_DEAL_PURCHASEAttr.dateTimeAttr = OS.BuiltinFunctions.currDateTime();
// Execute Action: CreateOrUpdateLocal_HOT_DEAL_PURCHASE
return WTF_MBPModel.entities.Local_HOT_DEAL_PURCHASE.createOrUpdate(WTF_MBPModel.Local_HOT_DEAL_PURCHASERecord.fromStructure(getLastHotDealPurchaseVar.value.listOut.getCurrent(callContext.iterationContext).local_HOT_DEAL_PURCHASEAttr), callContext).then(function (value) {
createOrUpdateLocal_HOT_DEAL_PURCHASEVar.value = value;
});
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Saucy.HotDeal_Buy$vars", [{
name: "HotDealIdentifier",
attrName: "hotDealIdentifierInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "Amount",
attrName: "amountInLocal",
mandatory: true,
dataType: OS.Types.Decimal,
defaultValue: function () {
return OS.DataTypes.Decimal.defaultValue;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Saucy.HotDeal_Buy$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "PaymentUrl",
attrName: "paymentUrlOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.hotDeal_Buy$Action = function (hotDealIdentifierIn, amountIn) {
hotDealIdentifierIn = (hotDealIdentifierIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : hotDealIdentifierIn;
amountIn = (amountIn === undefined) ? OS.DataTypes.Decimal.defaultValue : amountIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.hotDeal_Buy$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(hotDealIdentifierIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(amountIn, OS.Types.Decimal)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
PaymentUrl: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.paymentUrlOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$HotDeal_Cancel", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.HotDeal_Cancel_Public", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.hotDeal_Cancel$Action = function (walletItemIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Saucy.HotDeal_Cancel$vars"))());
vars.value.walletItemIdInLocal = walletItemIdIn;
var hotDeal_Cancel_PublicVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Saucy.HotDeal_Cancel$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: HotDeal_Cancel_Public
return controller.hotDeal_Cancel_Public$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.walletItemIdInLocal), callContext).then(function (value) {
hotDeal_Cancel_PublicVar.value = value;
});
}).then(function () {
// Success = HotDeal_Cancel_Public.Success
outVars.value.successOut = hotDeal_Cancel_PublicVar.value.successOut;
// Message = HotDeal_Cancel_Public.Message
outVars.value.messageOut = hotDeal_Cancel_PublicVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Saucy.HotDeal_Cancel$vars", [{
name: "WalletItemId",
attrName: "walletItemIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Saucy.HotDeal_Cancel$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.hotDeal_Cancel$Action = function (walletItemIdIn) {
walletItemIdIn = (walletItemIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : walletItemIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.hotDeal_Cancel$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(walletItemIdIn, OS.Types.LongInteger)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$HotDeal_Purchase", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "BALANCE_MBP.controller", "BALANCE_MBP.controller$Balance_ClearCache", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$BALANCE_MBP", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_MBP.controller$ServerAction.HotDeal_Purchase"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, BALANCE_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.hotDeal_Purchase$Action = function (walletItemIdIn, payment_type_codeIn, transaction_idIn, payment_refIn, paymentValueIn, phone_numberIn, refmb_entityIn, refmb_referenceIn, returnCodeIn, shortMsgIn, nameIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Saucy.HotDeal_Purchase$vars"))());
vars.value.walletItemIdInLocal = walletItemIdIn;
vars.value.payment_type_codeInLocal = payment_type_codeIn;
vars.value.transaction_idInLocal = transaction_idIn;
vars.value.payment_refInLocal = payment_refIn;
vars.value.paymentValueInLocal = paymentValueIn;
vars.value.phone_numberInLocal = phone_numberIn;
vars.value.refmb_entityInLocal = refmb_entityIn;
vars.value.refmb_referenceInLocal = refmb_referenceIn;
vars.value.returnCodeInLocal = returnCodeIn;
vars.value.shortMsgInLocal = shortMsgIn;
vars.value.nameInLocal = nameIn;
var hotDeal_PurchaseVar = new OS.DataTypes.VariableHolder();
var balance_ClearCacheVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Saucy.HotDeal_Purchase$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: HotDeal_Purchase
return controller.hotDeal_Purchase$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.walletItemIdInLocal), OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, vars.value.payment_type_codeInLocal, vars.value.transaction_idInLocal, vars.value.payment_refInLocal, vars.value.paymentValueInLocal, vars.value.phone_numberInLocal, vars.value.refmb_entityInLocal, vars.value.refmb_referenceInLocal, vars.value.returnCodeInLocal, vars.value.shortMsgInLocal, vars.value.nameInLocal, callContext).then(function (value) {
hotDeal_PurchaseVar.value = value;
});
}).then(function () {
return OS.Flow.executeSequence(function () {
if(((hotDeal_PurchaseVar.value.itemTypeIdOut === WTF_MBPModel.staticEntities.iTEM_TYPES.comunicacoesMoveis))) {
// Execute Action: Balance_ClearCache
return BALANCE_MBPController.default.balance_ClearCache$Action(callContext).then(function (value) {
balance_ClearCacheVar.value = value;
});
}

});
}).then(function () {
// Success = HotDeal_Purchase.Success
outVars.value.successOut = hotDeal_PurchaseVar.value.successOut;
// Message = HotDeal_Purchase.Message
outVars.value.messageOut = hotDeal_PurchaseVar.value.messageOut;
// RequiredAddress = HotDeal_Purchase.RequiredAddress
outVars.value.requiredAddressOut = hotDeal_PurchaseVar.value.requiredAddressOut;
// ItemId = HotDeal_Purchase.ItemId
outVars.value.itemIdOut = hotDeal_PurchaseVar.value.itemIdOut;
// ItemName = HotDeal_Purchase.ItemName
outVars.value.itemNameOut = hotDeal_PurchaseVar.value.itemNameOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Saucy.HotDeal_Purchase$vars", [{
name: "WalletItemId",
attrName: "walletItemIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "payment_type_code",
attrName: "payment_type_codeInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "transaction_id",
attrName: "transaction_idInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "payment_ref",
attrName: "payment_refInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "paymentValue",
attrName: "paymentValueInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "phone_number",
attrName: "phone_numberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "refmb_entity",
attrName: "refmb_entityInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "refmb_reference",
attrName: "refmb_referenceInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "returnCode",
attrName: "returnCodeInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "shortMsg",
attrName: "shortMsgInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "name",
attrName: "nameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Saucy.HotDeal_Purchase$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "RequiredAddress",
attrName: "requiredAddressOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ItemId",
attrName: "itemIdOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "ItemName",
attrName: "itemNameOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.hotDeal_Purchase$Action = function (walletItemIdIn, payment_type_codeIn, transaction_idIn, payment_refIn, paymentValueIn, phone_numberIn, refmb_entityIn, refmb_referenceIn, returnCodeIn, shortMsgIn, nameIn) {
walletItemIdIn = (walletItemIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : walletItemIdIn;
payment_type_codeIn = (payment_type_codeIn === undefined) ? "" : payment_type_codeIn;
transaction_idIn = (transaction_idIn === undefined) ? "" : transaction_idIn;
payment_refIn = (payment_refIn === undefined) ? "" : payment_refIn;
paymentValueIn = (paymentValueIn === undefined) ? "" : paymentValueIn;
phone_numberIn = (phone_numberIn === undefined) ? "" : phone_numberIn;
refmb_entityIn = (refmb_entityIn === undefined) ? "" : refmb_entityIn;
refmb_referenceIn = (refmb_referenceIn === undefined) ? "" : refmb_referenceIn;
returnCodeIn = (returnCodeIn === undefined) ? "" : returnCodeIn;
shortMsgIn = (shortMsgIn === undefined) ? "" : shortMsgIn;
nameIn = (nameIn === undefined) ? "" : nameIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.hotDeal_Purchase$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(walletItemIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(payment_type_codeIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(transaction_idIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(payment_refIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(paymentValueIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(phone_numberIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refmb_entityIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refmb_referenceIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(returnCodeIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(shortMsgIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(nameIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
RequiredAddress: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.requiredAddressOut, OS.Types.Boolean, true),
ItemId: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.itemIdOut, OS.Types.LongInteger, true),
ItemName: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.itemNameOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$HotDeal_SetError", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_MBP.controller$ServerAction.HotDeal_SetError"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.hotDeal_SetError$Action = function (walletItemIdIn, payment_type_codeIn, transaction_idIn, payment_refIn, paymentValueIn, phone_numberIn, refmb_entityIn, refmb_referenceIn, returnCodeIn, shortMsgIn, nameIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Saucy.HotDeal_SetError$vars"))());
vars.value.walletItemIdInLocal = walletItemIdIn;
vars.value.payment_type_codeInLocal = payment_type_codeIn;
vars.value.transaction_idInLocal = transaction_idIn;
vars.value.payment_refInLocal = payment_refIn;
vars.value.paymentValueInLocal = paymentValueIn;
vars.value.phone_numberInLocal = phone_numberIn;
vars.value.refmb_entityInLocal = refmb_entityIn;
vars.value.refmb_referenceInLocal = refmb_referenceIn;
vars.value.returnCodeInLocal = returnCodeIn;
vars.value.shortMsgInLocal = shortMsgIn;
vars.value.nameInLocal = nameIn;
var hotDeal_SetErrorVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Saucy.HotDeal_SetError$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: HotDeal_SetError
return controller.hotDeal_SetError$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.walletItemIdInLocal), vars.value.payment_type_codeInLocal, vars.value.transaction_idInLocal, vars.value.payment_refInLocal, vars.value.paymentValueInLocal, vars.value.phone_numberInLocal, vars.value.refmb_entityInLocal, vars.value.refmb_referenceInLocal, vars.value.returnCodeInLocal, vars.value.shortMsgInLocal, vars.value.nameInLocal, callContext).then(function (value) {
hotDeal_SetErrorVar.value = value;
});
}).then(function () {
// Success = HotDeal_SetError.Success
outVars.value.successOut = hotDeal_SetErrorVar.value.successOut;
// Message = HotDeal_SetError.Message
outVars.value.messageOut = hotDeal_SetErrorVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Saucy.HotDeal_SetError$vars", [{
name: "WalletItemId",
attrName: "walletItemIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "payment_type_code",
attrName: "payment_type_codeInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "transaction_id",
attrName: "transaction_idInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "payment_ref",
attrName: "payment_refInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "paymentValue",
attrName: "paymentValueInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "phone_number",
attrName: "phone_numberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "refmb_entity",
attrName: "refmb_entityInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "refmb_reference",
attrName: "refmb_referenceInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "returnCode",
attrName: "returnCodeInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "shortMsg",
attrName: "shortMsgInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "name",
attrName: "nameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Saucy.HotDeal_SetError$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.hotDeal_SetError$Action = function (walletItemIdIn, payment_type_codeIn, transaction_idIn, payment_refIn, paymentValueIn, phone_numberIn, refmb_entityIn, refmb_referenceIn, returnCodeIn, shortMsgIn, nameIn) {
walletItemIdIn = (walletItemIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : walletItemIdIn;
payment_type_codeIn = (payment_type_codeIn === undefined) ? "" : payment_type_codeIn;
transaction_idIn = (transaction_idIn === undefined) ? "" : transaction_idIn;
payment_refIn = (payment_refIn === undefined) ? "" : payment_refIn;
paymentValueIn = (paymentValueIn === undefined) ? "" : paymentValueIn;
phone_numberIn = (phone_numberIn === undefined) ? "" : phone_numberIn;
refmb_entityIn = (refmb_entityIn === undefined) ? "" : refmb_entityIn;
refmb_referenceIn = (refmb_referenceIn === undefined) ? "" : refmb_referenceIn;
returnCodeIn = (returnCodeIn === undefined) ? "" : returnCodeIn;
shortMsgIn = (shortMsgIn === undefined) ? "" : shortMsgIn;
nameIn = (nameIn === undefined) ? "" : nameIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.hotDeal_SetError$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(walletItemIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(payment_type_codeIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(transaction_idIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(payment_refIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(paymentValueIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(phone_numberIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refmb_entityIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refmb_referenceIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(returnCodeIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(shortMsgIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(nameIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$IsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$LongIntegerBooleanBooleanDIAMOND_TYPESIdentifierRecordList", "WTF_MBP.controller$ServerAction.IsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond", "WTF_MBP.controller$GetUserDiamond"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.isFirstTimeForRegulamentAndPlayDiaryGetUserDiamond$Action = function (userWtfIdIn, refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Scratch.IsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
var isFirstTimeForRegulamentAndPlayDiaryGetUserDiamondVar = new OS.DataTypes.VariableHolder();
var getUserDiamondVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Scratch.IsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: IsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond
return controller.isFirstTimeForRegulamentAndPlayDiaryGetUserDiamond$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, "Scratch", callContext).then(function (value) {
isFirstTimeForRegulamentAndPlayDiaryGetUserDiamondVar.value = value;
}).then(function () {
// HasAccepted = IsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond.UserWtfHasAccepted
outVars.value.hasAcceptedOut = isFirstTimeForRegulamentAndPlayDiaryGetUserDiamondVar.value.userWtfHasAcceptedOut;
// nDiamondsBonus = IsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond.nDiamondsBonus
outVars.value.nDiamondsBonusOut = isFirstTimeForRegulamentAndPlayDiaryGetUserDiamondVar.value.nDiamondsBonusOut;
// hasPlayDiaryToday = IsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond.HasPlayToday
outVars.value.hasPlayDiaryTodayOut = isFirstTimeForRegulamentAndPlayDiaryGetUserDiamondVar.value.hasPlayTodayOut;
// DiaryParts = IsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond.DiamondDiaryPartsNumber
outVars.value.diaryPartsOut = isFirstTimeForRegulamentAndPlayDiaryGetUserDiamondVar.value.diamondDiaryPartsNumberOut;
// IsFirstTimeForMGM = IsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond.IsFirstTimeForMGM
outVars.value.isFirstTimeForMGMOut = isFirstTimeForRegulamentAndPlayDiaryGetUserDiamondVar.value.isFirstTimeForMGMOut;
}).then(function () {
if((isFirstTimeForRegulamentAndPlayDiaryGetUserDiamondVar.value.successOut)) {
// Execute Action: GetUserDiamond
getUserDiamondVar.value = WTF_MBPController.default.getUserDiamond$Action(isFirstTimeForRegulamentAndPlayDiaryGetUserDiamondVar.value.responseListOut, isFirstTimeForRegulamentAndPlayDiaryGetUserDiamondVar.value.responsePartsGoldenOut, callContext);

// DefaultTotal = GetUserDiamond.DefaultTotal
outVars.value.defaultTotalOut = getUserDiamondVar.value.defaultTotalOut;
// GoldenTotal = GetUserDiamond.GoldenTotal
outVars.value.goldenTotalOut = getUserDiamondVar.value.goldenTotalOut;
// DefaultExpiresToday = GetUserDiamond.DefaultExpiresToday
outVars.value.defaultExpiresTodayOut = getUserDiamondVar.value.defaultExpiresTodayOut;
// DefaultExpiresTomorrow = GetUserDiamond.DefaultExpiresTomorrow
outVars.value.defaultExpiresTomorrowOut = getUserDiamondVar.value.defaultExpiresTomorrowOut;
// GoldenExpiresToday = GetUserDiamond.GoldenExpiresToday
outVars.value.goldenExpiresTodayOut = getUserDiamondVar.value.goldenExpiresTodayOut;
// GoldenParts = GetUserDiamond.GoldenParts
outVars.value.goldenPartsOut = getUserDiamondVar.value.goldenPartsOut;
}

});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Scratch.IsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Scratch.IsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond$outVars", [{
name: "HasAccepted",
attrName: "hasAcceptedOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "nDiamondsBonus",
attrName: "nDiamondsBonusOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "hasPlayDiaryToday",
attrName: "hasPlayDiaryTodayOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "DiaryParts",
attrName: "diaryPartsOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "IsFirstTimeForMGM",
attrName: "isFirstTimeForMGMOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "DefaultTotal",
attrName: "defaultTotalOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.BuiltinFunctions.integerToLongInteger(0);
}
}, {
name: "GoldenTotal",
attrName: "goldenTotalOut",
mandatory: false,
dataType: OS.Types.Decimal,
defaultValue: function () {
return (OS.DataTypes.Decimal.defaultValue);
}
}, {
name: "DefaultExpiresToday",
attrName: "defaultExpiresTodayOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.BuiltinFunctions.integerToLongInteger(0);
}
}, {
name: "DefaultExpiresTomorrow",
attrName: "defaultExpiresTomorrowOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.BuiltinFunctions.integerToLongInteger(0);
}
}, {
name: "GoldenExpiresToday",
attrName: "goldenExpiresTodayOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.BuiltinFunctions.integerToLongInteger(0);
}
}, {
name: "GoldenParts",
attrName: "goldenPartsOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.clientActionProxies.isFirstTimeForRegulamentAndPlayDiaryGetUserDiamond$Action = function (userWtfIdIn, refreshTokenIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.isFirstTimeForRegulamentAndPlayDiaryGetUserDiamond$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
HasAccepted: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.hasAcceptedOut, OS.Types.Boolean, true),
nDiamondsBonus: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.nDiamondsBonusOut, OS.Types.Integer, true),
hasPlayDiaryToday: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.hasPlayDiaryTodayOut, OS.Types.Boolean, true),
DiaryParts: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.diaryPartsOut, OS.Types.LongInteger, true),
IsFirstTimeForMGM: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.isFirstTimeForMGMOut, OS.Types.Boolean, true),
DefaultTotal: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.defaultTotalOut, OS.Types.LongInteger, true),
GoldenTotal: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.goldenTotalOut, OS.Types.Decimal, true),
DefaultExpiresToday: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.defaultExpiresTodayOut, OS.Types.LongInteger, true),
DefaultExpiresTomorrow: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.defaultExpiresTomorrowOut, OS.Types.LongInteger, true),
GoldenExpiresToday: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.goldenExpiresTodayOut, OS.Types.LongInteger, true),
GoldenParts: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.goldenPartsOut, OS.Types.LongInteger, true)
};
});
};
});

define("WTF_MBP.controller$LastUserWtfPrizeAddress", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_UserWtfPrizeAddressRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.LastUserWtfPrizeAddress_Public"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.lastUserWtfPrizeAddress$Action = function (userWtfIdIn, refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Scratch.LastUserWtfPrizeAddress$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
var lastUserWtfPrizeAddressVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Scratch.LastUserWtfPrizeAddress$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: LastUserWtfPrizeAddress
return controller.lastUserWtfPrizeAddress_Public$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, callContext).then(function (value) {
lastUserWtfPrizeAddressVar.value = value;
}).then(function () {
// App_UserWtfPrizeAddress = LastUserWtfPrizeAddress.App_UserWtfPrizeAddress
outVars.value.app_UserWtfPrizeAddressOut = lastUserWtfPrizeAddressVar.value.app_UserWtfPrizeAddressOut;
// HasLastAddress = LastUserWtfPrizeAddress.HasLastAddress
outVars.value.hasLastAddressOut = lastUserWtfPrizeAddressVar.value.hasLastAddressOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Scratch.LastUserWtfPrizeAddress$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Scratch.LastUserWtfPrizeAddress$outVars", [{
name: "App_UserWtfPrizeAddress",
attrName: "app_UserWtfPrizeAddressOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_UserWtfPrizeAddressRec();
},
complexType: WTF_BPModel.App_UserWtfPrizeAddressRec
}, {
name: "HasLastAddress",
attrName: "hasLastAddressOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.lastUserWtfPrizeAddress$Action = function (userWtfIdIn, refreshTokenIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.lastUserWtfPrizeAddress$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
App_UserWtfPrizeAddress: actionResults.app_UserWtfPrizeAddressOut,
HasLastAddress: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.hasLastAddressOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$LogEventFacebook_MBP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "FacebookSDKWTF.controller", "FacebookSDKWTF.controller$LogEventFacebookSDK_WTF", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$FacebookSDKWTF"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, FacebookSDKWTFController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.logEventFacebook_MBP$Action = function (eventNameIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.LogEventsFacebook.LogEventFacebook_MBP$vars"))());
vars.value.eventNameInLocal = eventNameIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var logEventFacebookSDK_WTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.LogEventsFacebook.LogEventFacebook_MBP$outVars"))());
try {// EmptyEvent?
if(((OS.BuiltinFunctions.trim(vars.value.eventNameInLocal) === ""))) {
// Success = False
outVars.value.successOut = false;
} else {
// Execute Action: LogEventFacebookSDK_WTF
logEventFacebookSDK_WTFVar.value = FacebookSDKWTFController.default.logEventFacebookSDK_WTF$Action(vars.value.eventNameInLocal, callContext);

// Success = LogEventFacebookSDK_WTF.Success
outVars.value.successOut = logEventFacebookSDK_WTFVar.value.successOut;
}

} catch (ex) {
(function () {
OS.Logger.trace("LogEventsFacebook.LogEventFacebook_MBP", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
// Success = False
outVars.value.successOut = false;
return outVars.value;

}

throw ex;
})();
}

return outVars.value;
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.LogEventsFacebook.LogEventFacebook_MBP$vars", [{
name: "EventName",
attrName: "eventNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.LogEventsFacebook.LogEventFacebook_MBP$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.logEventFacebook_MBP$Action = function (eventNameIn) {
eventNameIn = (eventNameIn === undefined) ? "" : eventNameIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.logEventFacebook_MBP$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(eventNameIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$LogoutParameters", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.model", "BuildInfoPlugin.controller", "Mobile_LoginNOS.model", "CommonPlugin.model$ErrorRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "BuildInfoPlugin.controller$GetBuildInfo", "WTF_MBP.referencesHealth$BuildInfoPlugin", "WTF_MBP.controller$GetApplicationName_MBP", "WTF_MBP.controller$ServerAction.RefreshTokenValidate_BP", "WTF_MBP.controller$Get_ClientIdAndClientSecret", "Mobile_LoginNOS.model$WebView_ParametersRec", "WTF_MBP.referencesHealth$Mobile_LoginNOS", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORecordList", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginModel, BuildInfoPluginController, Mobile_LoginNOSModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.logoutParameters$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var refreshTokenValidate_BPVar = new OS.DataTypes.VariableHolder();
var getBuildInfoVar = new OS.DataTypes.VariableHolder();
var getApplicationName_MBPVar = new OS.DataTypes.VariableHolder();
var get_ClientIdAndClientSecretVar = new OS.DataTypes.VariableHolder();
var getLocalACCESSTOKENINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Login.LogoutParameters$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: Get_ClientIdAndClientSecret
return WTF_MBPController.default.get_ClientIdAndClientSecret$Action(callContext).then(function (value) {
get_ClientIdAndClientSecretVar.value = value;
}).then(function () {
// Aggregate: GetLocalACCESSTOKENINFOES
var getLocalACCESSTOKENINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_ACCESS_TOKEN_INFO\".\"Id\" o0, \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" o1, \"ENLocal_ACCESS_TOKEN_INFO\".\"Access_token\" o2, \"ENLocal_ACCESS_TOKEN_INFO\".\"IsUserRegistered\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ACCESS_TOKEN_INFO\" \"ENLocal_ACCESS_TOKEN_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ACCESS_TOKEN_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalACCESSTOKENINFOESVar.value;
});
};
return getLocalACCESSTOKENINFOESAggr();
}).then(function () {
// Execute Action: GetBuildInfo
getBuildInfoVar.value = BuildInfoPluginController.default.getBuildInfo$Action(callContext);

// Execute Action: RefreshTokenValidate_BP
return controller.refreshTokenValidate_BP$ServerAction(getLocalACCESSTOKENINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr, false, false, callContext).then(function (value) {
refreshTokenValidate_BPVar.value = value;
});
}).then(function () {
// Execute Action: GetApplicationName_MBP
return WTF_MBPController.default.getApplicationName_MBP$Action(callContext).then(function (value) {
getApplicationName_MBPVar.value = value;
});
}).then(function () {
// SetOuts
// ApplicationName = GetApplicationName_MBP.Value
outVars.value.applicationNameOut = getApplicationName_MBPVar.value.valueOut;
// ApplicationIdentifier = GetBuildInfo.PackageName
outVars.value.applicationIdentifierOut = getBuildInfoVar.value.packageNameOut;
// WebViewParameters.ReaderMode = True
outVars.value.webViewParametersOut.readerModeAttr = true;
// WebViewParameters.Hidden = False
outVars.value.webViewParametersOut.hiddenAttr = false;
// WebViewParameters.Animated = True
outVars.value.webViewParametersOut.animatedAttr = true;
// ClientId = Get_ClientIdAndClientSecret.ClientID
outVars.value.clientIdOut = get_ClientIdAndClientSecretVar.value.clientIDOut;
// IdToken = RefreshTokenValidate_BP.IdToken
outVars.value.idTokenOut = refreshTokenValidate_BPVar.value.idTokenOut;
// IsOpenId = RefreshTokenValidate_BP.IsOpendID
outVars.value.isOpenIdOut = refreshTokenValidate_BPVar.value.isOpendIDOut;
});
}).catch(function (ex) {
OS.Logger.trace("Login.LogoutParameters", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Login.LogoutParameters$outVars", [{
name: "ApplicationName",
attrName: "applicationNameOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ApplicationIdentifier",
attrName: "applicationIdentifierOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ClientId",
attrName: "clientIdOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "IdToken",
attrName: "idTokenOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "WebViewParameters",
attrName: "webViewParametersOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new Mobile_LoginNOSModel.WebView_ParametersRec();
},
complexType: Mobile_LoginNOSModel.WebView_ParametersRec
}, {
name: "IsOpenId",
attrName: "isOpenIdOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.logoutParameters$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.logoutParameters$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
ApplicationName: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.applicationNameOut, OS.Types.Text, true),
ApplicationIdentifier: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.applicationIdentifierOut, OS.Types.Text, true),
ClientId: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.clientIdOut, OS.Types.Text, true),
IdToken: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.idTokenOut, OS.Types.Text, true),
WebViewParameters: actionResults.webViewParametersOut,
IsOpenId: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.isOpenIdOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$MarkUsedCard", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_MBP.controller$ServerAction.WalletItem_MarkUsed"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.markUsedCard$Action = function (walletItemIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Wallet.MarkUsedCard$vars"))());
vars.value.walletItemIdInLocal = walletItemIdIn;
var walletItem_MarkUsedVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Wallet.MarkUsedCard$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: WalletItem_MarkUsed
return controller.walletItem_MarkUsed$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, vars.value.walletItemIdInLocal, callContext).then(function (value) {
walletItem_MarkUsedVar.value = value;
});
}).then(function () {
// Success = WalletItem_MarkUsed.Success
outVars.value.successOut = walletItem_MarkUsedVar.value.successOut;
// Message = WalletItem_MarkUsed.Message
outVars.value.messageOut = walletItem_MarkUsedVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Wallet.MarkUsedCard$vars", [{
name: "WalletItemId",
attrName: "walletItemIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Wallet.MarkUsedCard$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.markUsedCard$Action = function (walletItemIdIn) {
walletItemIdIn = (walletItemIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : walletItemIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.markUsedCard$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(walletItemIdIn, OS.Types.LongInteger)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$MobilePhoneActivation_SendSMS", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.MobilePhoneActivation_SendSMS"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.mobilePhoneActivation_SendSMS$Action = function (refreshTokenIn, msisdnIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.MobilePhoneActivation_SendSMS$vars"))());
vars.value.refreshTokenInLocal = refreshTokenIn;
vars.value.msisdnInLocal = msisdnIn;
var mobilePhoneActivation_SendSMSVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.MobilePhoneActivation_SendSMS$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: MobilePhoneActivation_SendSMS
return controller.mobilePhoneActivation_SendSMS$ServerAction(vars.value.refreshTokenInLocal, vars.value.msisdnInLocal, callContext).then(function (value) {
mobilePhoneActivation_SendSMSVar.value = value;
}).then(function () {
// Success = MobilePhoneActivation_SendSMS.Success
outVars.value.successOut = mobilePhoneActivation_SendSMSVar.value.successOut;
// Message = MobilePhoneActivation_SendSMS.Message
outVars.value.messageOut = mobilePhoneActivation_SendSMSVar.value.messageOut;
// IsWtf = MobilePhoneActivation_SendSMS.IsWtf
outVars.value.isWtfOut = mobilePhoneActivation_SendSMSVar.value.isWtfOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.MobilePhoneActivation_SendSMS$vars", [{
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Msisdn",
attrName: "msisdnInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.MobilePhoneActivation_SendSMS$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "IsWtf",
attrName: "isWtfOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.mobilePhoneActivation_SendSMS$Action = function (refreshTokenIn, msisdnIn) {
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
msisdnIn = (msisdnIn === undefined) ? 0 : msisdnIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.mobilePhoneActivation_SendSMS$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(msisdnIn, OS.Types.Integer)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
IsWtf: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.isWtfOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$MobilePhoneActivation_ValidateToken", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.MobilePhoneActivation_ValidateToken"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.mobilePhoneActivation_ValidateToken$Action = function (refreshTokenIn, msisdnIn, codeIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.MobilePhoneActivation_ValidateToken$vars"))());
vars.value.refreshTokenInLocal = refreshTokenIn;
vars.value.msisdnInLocal = msisdnIn;
vars.value.codeInLocal = codeIn;
var mobilePhoneActivation_ValidateTokenVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.MobilePhoneActivation_ValidateToken$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: MobilePhoneActivation_ValidateToken
return controller.mobilePhoneActivation_ValidateToken$ServerAction(vars.value.refreshTokenInLocal, vars.value.msisdnInLocal, vars.value.codeInLocal, callContext).then(function (value) {
mobilePhoneActivation_ValidateTokenVar.value = value;
}).then(function () {
// Success = MobilePhoneActivation_ValidateToken.Success
outVars.value.successOut = mobilePhoneActivation_ValidateTokenVar.value.successOut;
// Message = MobilePhoneActivation_ValidateToken.Message
outVars.value.messageOut = mobilePhoneActivation_ValidateTokenVar.value.messageOut;
// IsValid = MobilePhoneActivation_ValidateToken.IsValid
outVars.value.isValidOut = mobilePhoneActivation_ValidateTokenVar.value.isValidOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.MobilePhoneActivation_ValidateToken$vars", [{
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Msisdn",
attrName: "msisdnInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "Code",
attrName: "codeInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.MobilePhoneActivation_ValidateToken$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "IsValid",
attrName: "isValidOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.mobilePhoneActivation_ValidateToken$Action = function (refreshTokenIn, msisdnIn, codeIn) {
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
msisdnIn = (msisdnIn === undefined) ? 0 : msisdnIn;
codeIn = (codeIn === undefined) ? "" : codeIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.mobilePhoneActivation_ValidateToken$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(msisdnIn, OS.Types.Integer), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(codeIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
IsValid: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.isValidOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$PagesToBlacklist", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$GetConfigValueAsText_MBP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.pagesToBlacklist$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getSaucyCallbackErrorURLVar = new OS.DataTypes.VariableHolder();
var getProtectionScreenURLVar = new OS.DataTypes.VariableHolder();
var getNoConnectionURLVar = new OS.DataTypes.VariableHolder();
var getChargeCallbackErrorURLVar = new OS.DataTypes.VariableHolder();
var getPageUnavailableURLVar = new OS.DataTypes.VariableHolder();
var getSaucyCallbackSuccessURLVar = new OS.DataTypes.VariableHolder();
var getChargeCallbackSuccessURLVar = new OS.DataTypes.VariableHolder();
var getSaucyCallbackCancelURLVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.PageRedirection.PagesToBlacklist$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetNoConnectionURL
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("NO_CONNECTION_URL", callContext).then(function (value) {
getNoConnectionURLVar.value = value;
}).then(function () {
// Execute Action: GetPageUnavailableURL
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("PAGE_UNAVAILABLE_URL", callContext).then(function (value) {
getPageUnavailableURLVar.value = value;
});
}).then(function () {
// Execute Action: GetProtectionScreenURL
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("PROTECTION_SCREN_URL", callContext).then(function (value) {
getProtectionScreenURLVar.value = value;
});
}).then(function () {
// Execute Action: GetChargeCallbackErrorURL
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("PAYGATE_CHARGE_ERROR", callContext).then(function (value) {
getChargeCallbackErrorURLVar.value = value;
});
}).then(function () {
// Execute Action: GetChargeCallbackSuccessURL
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("PAYGATE_CHARGE_SUCCESS", callContext).then(function (value) {
getChargeCallbackSuccessURLVar.value = value;
});
}).then(function () {
// Execute Action: GetSaucyCallbackSuccessURL
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("PAYGATE_EQUIPMENT_SUCCESS", callContext).then(function (value) {
getSaucyCallbackSuccessURLVar.value = value;
});
}).then(function () {
// Execute Action: GetSaucyCallbackCancelURL
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("PAYGATE_EQUIPMENT_CANCEL", callContext).then(function (value) {
getSaucyCallbackCancelURLVar.value = value;
});
}).then(function () {
// Execute Action: GetSaucyCallbackErrorURL
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("PAYGATE_EQUIPMENT_ERROR", callContext).then(function (value) {
getSaucyCallbackErrorURLVar.value = value;
});
}).then(function () {
// SetOutput
// NoConnection = GetNoConnectionURL.Value
outVars.value.noConnectionOut = getNoConnectionURLVar.value.valueOut;
// PageUnavailable = GetPageUnavailableURL.Value
outVars.value.pageUnavailableOut = getPageUnavailableURLVar.value.valueOut;
// ProtectionScreen = GetProtectionScreenURL.Value
outVars.value.protectionScreenOut = getProtectionScreenURLVar.value.valueOut;
// ChargeCallbackError = GetChargeCallbackErrorURL.Value
outVars.value.chargeCallbackErrorOut = getChargeCallbackErrorURLVar.value.valueOut;
// ChargeCallbackSuccess = GetChargeCallbackSuccessURL.Value
outVars.value.chargeCallbackSuccessOut = getChargeCallbackSuccessURLVar.value.valueOut;
// SaucyCallbackError = GetSaucyCallbackErrorURL.Value
outVars.value.saucyCallbackErrorOut = getSaucyCallbackErrorURLVar.value.valueOut;
// SaucyCallbackSuccess = GetSaucyCallbackSuccessURL.Value
outVars.value.saucyCallbackSuccessOut = getSaucyCallbackSuccessURLVar.value.valueOut;
// SaucyCallbackCancel = GetSaucyCallbackCancelURL.Value
outVars.value.saucyCallbackCancelOut = getSaucyCallbackCancelURLVar.value.valueOut;
// SetOutput
// NoConnection = Substr
outVars.value.noConnectionOut = OS.BuiltinFunctions.substr(outVars.value.noConnectionOut, 39, 30);
// PageUnavailable = Substr
outVars.value.pageUnavailableOut = OS.BuiltinFunctions.substr(outVars.value.pageUnavailableOut, 39, 30);
// ProtectionScreen = Substr
outVars.value.protectionScreenOut = OS.BuiltinFunctions.substr(outVars.value.protectionScreenOut, 39, 30);
// ChargeCallbackError = Substr
outVars.value.chargeCallbackErrorOut = OS.BuiltinFunctions.substr(outVars.value.chargeCallbackErrorOut, 39, 30);
// ChargeCallbackSuccess = Substr
outVars.value.chargeCallbackSuccessOut = OS.BuiltinFunctions.substr(outVars.value.chargeCallbackSuccessOut, 39, 30);
// SaucyCallbackError = Substr
outVars.value.saucyCallbackErrorOut = OS.BuiltinFunctions.substr(outVars.value.saucyCallbackErrorOut, 39, 30);
// SaucyCallbackSuccess = Substr
outVars.value.saucyCallbackSuccessOut = OS.BuiltinFunctions.substr(outVars.value.saucyCallbackSuccessOut, 39, 30);
// SaucyCallbackCancel = Substr
outVars.value.saucyCallbackCancelOut = OS.BuiltinFunctions.substr(outVars.value.saucyCallbackCancelOut, 39, 30);
});
}).catch(function (ex) {
OS.Logger.trace("PageRedirection.PagesToBlacklist", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// SetOutput
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.PageRedirection.PagesToBlacklist$outVars", [{
name: "NoConnection",
attrName: "noConnectionOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "PageUnavailable",
attrName: "pageUnavailableOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ProtectionScreen",
attrName: "protectionScreenOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ChargeCallbackError",
attrName: "chargeCallbackErrorOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ChargeCallbackSuccess",
attrName: "chargeCallbackSuccessOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SaucyCallbackError",
attrName: "saucyCallbackErrorOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SaucyCallbackSuccess",
attrName: "saucyCallbackSuccessOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SaucyCallbackCancel",
attrName: "saucyCallbackCancelOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.pagesToBlacklist$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.pagesToBlacklist$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
NoConnection: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.noConnectionOut, OS.Types.Text, true),
PageUnavailable: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.pageUnavailableOut, OS.Types.Text, true),
ProtectionScreen: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.protectionScreenOut, OS.Types.Text, true),
ChargeCallbackError: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.chargeCallbackErrorOut, OS.Types.Text, true),
ChargeCallbackSuccess: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.chargeCallbackSuccessOut, OS.Types.Text, true),
SaucyCallbackError: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.saucyCallbackErrorOut, OS.Types.Text, true),
SaucyCallbackSuccess: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.saucyCallbackSuccessOut, OS.Types.Text, true),
SaucyCallbackCancel: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.saucyCallbackCancelOut, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$PlayScratch", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_MBP.model$Local_PRIZERec", "WTF_MBP.controller$GetPrizeById", "WTF_BP.model$App_QuizRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_BP.model$App_CopiesRec", "WTF_MBP.controller$ServerAction.PlayScratch", "WTF_MBP.model$Local_PICTURERec", "WTF_MBP.controller$GetAndSyncLocalPictureById", "WTF_MBP.model$Local_PRIZERecord", "WTF_MBP.model$App_PrizeMBPRec", "WTF_MBP.model$Local_PRIZERecordList", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.playScratch$Action = function (diamondTypeNameIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Scratch.PlayScratch$vars"))());
vars.value.diamondTypeNameInLocal = diamondTypeNameIn;
var playScratchVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var getPrizeByIdVar = new OS.DataTypes.VariableHolder();
var getAndSyncLocalPictureByIdVar = new OS.DataTypes.VariableHolder();
var getLocalPRIZEByIdVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_PRIZERecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Scratch.PlayScratch$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: PlayScratch
return controller.playScratch$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, vars.value.diamondTypeNameInLocal, callContext).then(function (value) {
playScratchVar.value = value;
});
}).then(function () {
// App_Copies = PlayScratch.App_Copies
outVars.value.app_CopiesOut = playScratchVar.value.app_CopiesOut;
}).then(function () {
return OS.Flow.executeSequence(function () {
if(((playScratchVar.value.successOut === true))) {
return OS.Flow.executeSequence(function () {
if((playScratchVar.value.hasWonOut)) {
// Aggregate: GetLocalPRIZEById
var getLocalPRIZEByIdAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_PRIZERecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}

var qploId = playScratchVar.value.prizeIdOut;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5";
} else {
selectSql += "\"ENLocal_PRIZE\".\"Id\" o0, \"ENLocal_PRIZE\".\"ItemTypesId\" o1, \"ENLocal_PRIZE\".\"PictureId\" o2, \"ENLocal_PRIZE\".\"Name\" o3, \"ENLocal_PRIZE\".\"Description\" o4, \"ENLocal_PRIZE\".\"CopyForScratch\" o5";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_PRIZE\" \"ENLocal_PRIZE\"";
fromAndWhereSql += " WHERE ";
if (qploId != 0) {
fromAndWhereSql += "((\"ENLocal_PRIZE\".\"Id\" = :qploId) AND (\"ENLocal_PRIZE\".\"Id\" IS NOT NULL))";
argsList.add("qploId", /*LONGINTEGER*/ 4, qploId);
} else {
fromAndWhereSql += "(\"ENLocal_PRIZE\".\"Id\" IS NULL)";
}
orderBySql += " ORDER BY \"ENLocal_PRIZE\".\"Name\" ASC ";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_PRIZERecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_PRIZEAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalPRIZEByIdVar.value;
});
};
return getLocalPRIZEByIdAggr().then(function () {
return OS.Flow.executeSequence(function () {
if((getLocalPRIZEByIdVar.value.listOut.isEmpty)) {
// Execute Action: GetPrizeById
return WTF_MBPController.default.getPrizeById$Action(playScratchVar.value.prizeIdOut, callContext).then(function (value) {
getPrizeByIdVar.value = value;
}).then(function () {
// GetLocalPRIZEById.List.Current = GetPrizeById.Local_PRIZES
getLocalPRIZEByIdVar.value.listOut.setCurrent(callContext.iterationContext, WTF_MBPModel.Local_PRIZERecord.fromStructure(getPrizeByIdVar.value.local_PRIZESOut));
});
}

});
}).then(function () {
// Execute Action: GetAndSyncLocalPictureById
return WTF_MBPController.default.getAndSyncLocalPictureById$Action(getLocalPRIZEByIdVar.value.listOut.getCurrent(callContext.iterationContext).local_PRIZEAttr.pictureIdAttr, callContext).then(function (value) {
getAndSyncLocalPictureByIdVar.value = value;
}).then(function () {
// AppQuiz = PlayScratch.Quiz
outVars.value.appQuizOut = playScratchVar.value.quizOut;
// CategoryPrize = PlayScratch.CategoryPrize
outVars.value.categoryPrizeOut = playScratchVar.value.categoryPrizeOut;
});
}).then(function () {
if((!(outVars.value.appQuizOut.quizIdAttr.equals(OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.nullIdentifier()))))) {
// HasWon = True
outVars.value.hasWonOut = true;
// App_Prize.Name = GetLocalPRIZEById.List.Current.Local_PRIZE.Name
outVars.value.app_PrizeOut.nameAttr = getLocalPRIZEByIdVar.value.listOut.getCurrent(callContext.iterationContext).local_PRIZEAttr.nameAttr;
// App_Prize.Description = GetLocalPRIZEById.List.Current.Local_PRIZE.Description
outVars.value.app_PrizeOut.descriptionAttr = getLocalPRIZEByIdVar.value.listOut.getCurrent(callContext.iterationContext).local_PRIZEAttr.descriptionAttr;
// App_Prize.Picture = GetAndSyncLocalPictureById.Picture
outVars.value.app_PrizeOut.pictureAttr = getAndSyncLocalPictureByIdVar.value.pictureOut;
// App_Prize.Scratch_Copy = GetLocalPRIZEById.List.Current.Local_PRIZE.CopyForScratch
outVars.value.app_PrizeOut.scratch_CopyAttr = getLocalPRIZEByIdVar.value.listOut.getCurrent(callContext.iterationContext).local_PRIZEAttr.copyForScratchAttr;
// App_Prize.ItemTypeId = GetLocalPRIZEById.List.Current.Local_PRIZE.ItemTypesId
outVars.value.app_PrizeOut.itemTypeIdAttr = getLocalPRIZEByIdVar.value.listOut.getCurrent(callContext.iterationContext).local_PRIZEAttr.itemTypesIdAttr;
}

});
}

});
}

});
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Scratch.PlayScratch$vars", [{
name: "DiamondTypeName",
attrName: "diamondTypeNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Scratch.PlayScratch$outVars", [{
name: "App_Prize",
attrName: "app_PrizeOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.App_PrizeMBPRec();
},
complexType: WTF_MBPModel.App_PrizeMBPRec
}, {
name: "HasWon",
attrName: "hasWonOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "AppQuiz",
attrName: "appQuizOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_QuizRec();
},
complexType: WTF_BPModel.App_QuizRec
}, {
name: "CategoryPrize",
attrName: "categoryPrizeOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_Copies",
attrName: "app_CopiesOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_CopiesRec();
},
complexType: WTF_BPModel.App_CopiesRec
}]);
WTF_MBPController.default.clientActionProxies.playScratch$Action = function (diamondTypeNameIn) {
diamondTypeNameIn = (diamondTypeNameIn === undefined) ? "" : diamondTypeNameIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.playScratch$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(diamondTypeNameIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
App_Prize: actionResults.app_PrizeOut,
HasWon: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.hasWonOut, OS.Types.Boolean, true),
AppQuiz: actionResults.appQuizOut,
CategoryPrize: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.categoryPrizeOut, OS.Types.Text, true),
App_Copies: actionResults.app_CopiesOut
};
});
};
});

define("WTF_MBP.controller$PreLoginParameters", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.model", "BuildInfoPlugin.controller", "Mobile_LoginNOS.model", "WTF_MBP.controller$GetDeepLinkUrl", "CommonPlugin.model$ErrorRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "BuildInfoPlugin.controller$GetBuildInfo", "WTF_MBP.referencesHealth$BuildInfoPlugin", "WTF_MBP.controller$GetApplicationName_MBP", "WTF_MBP.controller$Get_ClientIdAndClientSecret", "Mobile_LoginNOS.model$WebView_ParametersRec", "WTF_MBP.referencesHealth$Mobile_LoginNOS"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginModel, BuildInfoPluginController, Mobile_LoginNOSModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.preLoginParameters$Action = function (screenNameIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Login.PreLoginParameters$vars"))());
vars.value.screenNameInLocal = screenNameIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getDeepLinkUrlVar = new OS.DataTypes.VariableHolder();
var getBuildInfoVar = new OS.DataTypes.VariableHolder();
var getApplicationName_MBPVar = new OS.DataTypes.VariableHolder();
var get_ClientIdAndClientSecretVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Login.PreLoginParameters$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: Get_ClientIdAndClientSecret
return WTF_MBPController.default.get_ClientIdAndClientSecret$Action(callContext).then(function (value) {
get_ClientIdAndClientSecretVar.value = value;
}).then(function () {
// Execute Action: GetBuildInfo
getBuildInfoVar.value = BuildInfoPluginController.default.getBuildInfo$Action(callContext);

// Execute Action: GetApplicationName_MBP
return WTF_MBPController.default.getApplicationName_MBP$Action(callContext).then(function (value) {
getApplicationName_MBPVar.value = value;
});
}).then(function () {
// Execute Action: GetDeepLinkUrl
return WTF_MBPController.default.getDeepLinkUrl$Action(vars.value.screenNameInLocal, callContext).then(function (value) {
getDeepLinkUrlVar.value = value;
});
}).then(function () {
// SetOuts
// ApplicationName = GetApplicationName_MBP.Value
outVars.value.applicationNameOut = getApplicationName_MBPVar.value.valueOut;
// ApplicationIdentifier = GetBuildInfo.PackageName
outVars.value.applicationIdentifierOut = getBuildInfoVar.value.packageNameOut;
// WebViewParameters.URL_Callback = GetDeepLinkUrl.Deeplink
outVars.value.webViewParametersOut.uRL_CallbackAttr = getDeepLinkUrlVar.value.deeplinkOut;
// WebViewParameters.ReaderMode = True
outVars.value.webViewParametersOut.readerModeAttr = true;
// WebViewParameters.Hidden = False
outVars.value.webViewParametersOut.hiddenAttr = false;
// WebViewParameters.Animated = True
outVars.value.webViewParametersOut.animatedAttr = true;
// ClientId = Get_ClientIdAndClientSecret.ClientID
outVars.value.clientIdOut = get_ClientIdAndClientSecretVar.value.clientIDOut;
// ClientSecret = Get_ClientIdAndClientSecret.ClientSecret
outVars.value.clientSecretOut = get_ClientIdAndClientSecretVar.value.clientSecretOut;
});
}).catch(function (ex) {
OS.Logger.trace("Login.PreLoginParameters", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Login.PreLoginParameters$vars", [{
name: "ScreenName",
attrName: "screenNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Login.PreLoginParameters$outVars", [{
name: "ApplicationName",
attrName: "applicationNameOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ApplicationIdentifier",
attrName: "applicationIdentifierOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ClientId",
attrName: "clientIdOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "WebViewParameters",
attrName: "webViewParametersOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new Mobile_LoginNOSModel.WebView_ParametersRec();
},
complexType: Mobile_LoginNOSModel.WebView_ParametersRec
}, {
name: "ClientSecret",
attrName: "clientSecretOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.preLoginParameters$Action = function (screenNameIn) {
screenNameIn = (screenNameIn === undefined) ? "" : screenNameIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.preLoginParameters$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(screenNameIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
ApplicationName: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.applicationNameOut, OS.Types.Text, true),
ApplicationIdentifier: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.applicationIdentifierOut, OS.Types.Text, true),
ClientId: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.clientIdOut, OS.Types.Text, true),
WebViewParameters: actionResults.webViewParametersOut,
ClientSecret: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.clientSecretOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$ProfileParameters", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "CommonPlugin.model", "BuildInfoPlugin.controller", "Mobile_LoginNOS.model", "CommonPlugin.model$ErrorRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$CommonPlugin", "BuildInfoPlugin.controller$GetBuildInfo", "WTF_MBP.referencesHealth$BuildInfoPlugin", "WTF_MBP.controller$GetDeepLinkUrl", "WTF_MBP.controller$GetApplicationName_MBP", "Mobile_LoginNOS.model$WebView_ParametersRec", "WTF_MBP.referencesHealth$Mobile_LoginNOS"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, CommonPluginModel, BuildInfoPluginController, Mobile_LoginNOSModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.profileParameters$Action = function (screenNameIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Login.ProfileParameters$vars"))());
vars.value.screenNameInLocal = screenNameIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var getBuildInfoVar = new OS.DataTypes.VariableHolder();
var getDeepLinkUrlVar = new OS.DataTypes.VariableHolder();
var getApplicationName_MBPVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Login.ProfileParameters$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetBuildInfo
getBuildInfoVar.value = BuildInfoPluginController.default.getBuildInfo$Action(callContext);

// Execute Action: GetApplicationName_MBP
return WTF_MBPController.default.getApplicationName_MBP$Action(callContext).then(function (value) {
getApplicationName_MBPVar.value = value;
}).then(function () {
// Execute Action: GetDeepLinkUrl
return WTF_MBPController.default.getDeepLinkUrl$Action(vars.value.screenNameInLocal, callContext).then(function (value) {
getDeepLinkUrlVar.value = value;
});
}).then(function () {
// SetOuts
// ApplicationName = GetApplicationName_MBP.Value
outVars.value.applicationNameOut = getApplicationName_MBPVar.value.valueOut;
// ApplicationIdentifier = GetBuildInfo.PackageName
outVars.value.applicationIdentifierOut = getBuildInfoVar.value.packageNameOut;
// WebViewParameters.URL_Callback = GetDeepLinkUrl.Deeplink
outVars.value.webViewParametersOut.uRL_CallbackAttr = getDeepLinkUrlVar.value.deeplinkOut;
// WebViewParameters.ReaderMode = True
outVars.value.webViewParametersOut.readerModeAttr = true;
// WebViewParameters.Hidden = False
outVars.value.webViewParametersOut.hiddenAttr = false;
// WebViewParameters.Animated = True
outVars.value.webViewParametersOut.animatedAttr = true;
// WebViewParameters.TintColor = ""
outVars.value.webViewParametersOut.tintColorAttr = "";
// WebViewParameters.BarColor = ""
outVars.value.webViewParametersOut.barColorAttr = "";
// WebViewParameters.ControlTintColor = ""
outVars.value.webViewParametersOut.controlTintColorAttr = "";
});
}).catch(function (ex) {
OS.Logger.trace("Login.ProfileParameters", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Login.ProfileParameters$vars", [{
name: "ScreenName",
attrName: "screenNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Login.ProfileParameters$outVars", [{
name: "ApplicationName",
attrName: "applicationNameOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ApplicationIdentifier",
attrName: "applicationIdentifierOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "WebViewParameters",
attrName: "webViewParametersOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new Mobile_LoginNOSModel.WebView_ParametersRec();
},
complexType: Mobile_LoginNOSModel.WebView_ParametersRec
}]);
WTF_MBPController.default.clientActionProxies.profileParameters$Action = function (screenNameIn) {
screenNameIn = (screenNameIn === undefined) ? "" : screenNameIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.profileParameters$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(screenNameIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
ApplicationName: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.applicationNameOut, OS.Types.Text, true),
ApplicationIdentifier: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.applicationIdentifierOut, OS.Types.Text, true),
WebViewParameters: actionResults.webViewParametersOut
};
});
};
});

define("WTF_MBP.controller$PushReview_GetStatus", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_BP.model$App_IdentifierRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.PushReview_GetStatus"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.pushReview_GetStatus$Action = function (callContext) {
callContext = controller.callContext(callContext);
var pushReview_GetStatusVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.PushReview.PushReview_GetStatus$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: PushReview_GetStatus
return controller.pushReview_GetStatus$ServerAction(OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.integerToIdentifier(OS.BuiltinFunctions.longIntegerToInteger(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr))), getActiveUserWTFVar.value.refreshTokenOut, callContext).then(function (value) {
pushReview_GetStatusVar.value = value;
});
}).then(function () {
// Message = PushReview_GetStatus.Message
outVars.value.messageOut = pushReview_GetStatusVar.value.messageOut;
// Success = PushReview_GetStatus.Success
outVars.value.successOut = pushReview_GetStatusVar.value.successOut;
// CurrentPushReviewStatusId = PushReview_GetStatus.CurrentPushReviewStatusId
outVars.value.currentPushReviewStatusIdOut = pushReview_GetStatusVar.value.currentPushReviewStatusIdOut;
// HasPushReview = PushReview_GetStatus.HasPushReview
outVars.value.hasPushReviewOut = pushReview_GetStatusVar.value.hasPushReviewOut;
// App_Identifier = PushReview_GetStatus.App_Identifier
outVars.value.app_IdentifierOut = pushReview_GetStatusVar.value.app_IdentifierOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.PushReview.PushReview_GetStatus$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "HasPushReview",
attrName: "hasPushReviewOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "CurrentPushReviewStatusId",
attrName: "currentPushReviewStatusIdOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "App_Identifier",
attrName: "app_IdentifierOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_IdentifierRec();
},
complexType: WTF_BPModel.App_IdentifierRec
}]);
WTF_MBPController.default.clientActionProxies.pushReview_GetStatus$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.pushReview_GetStatus$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
HasPushReview: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.hasPushReviewOut, OS.Types.Boolean, true),
CurrentPushReviewStatusId: actionResults.currentPushReviewStatusIdOut,
App_Identifier: actionResults.app_IdentifierOut
};
});
};
});

define("WTF_MBP.controller$PushReview_UpdateStatus", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.PushReview_UpdateStatus", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.pushReview_UpdateStatus$Action = function (newPushReviewStatusIdIn, feedbackMessageIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.PushReview.PushReview_UpdateStatus$vars"))());
vars.value.newPushReviewStatusIdInLocal = newPushReviewStatusIdIn;
vars.value.feedbackMessageInLocal = feedbackMessageIn;
var pushReview_UpdateStatusVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.PushReview.PushReview_UpdateStatus$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: PushReview_UpdateStatus
return controller.pushReview_UpdateStatus$ServerAction(OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.integerToIdentifier(OS.BuiltinFunctions.longIntegerToInteger(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr))), getActiveUserWTFVar.value.refreshTokenOut, vars.value.newPushReviewStatusIdInLocal, vars.value.feedbackMessageInLocal, callContext).then(function (value) {
pushReview_UpdateStatusVar.value = value;
});
}).then(function () {
// Success = PushReview_UpdateStatus.Success
outVars.value.successOut = pushReview_UpdateStatusVar.value.successOut;
// Message = PushReview_UpdateStatus.Message
outVars.value.messageOut = pushReview_UpdateStatusVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.PushReview.PushReview_UpdateStatus$vars", [{
name: "NewPushReviewStatusId",
attrName: "newPushReviewStatusIdInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "FeedbackMessage",
attrName: "feedbackMessageInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.PushReview.PushReview_UpdateStatus$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.pushReview_UpdateStatus$Action = function (newPushReviewStatusIdIn, feedbackMessageIn) {
newPushReviewStatusIdIn = (newPushReviewStatusIdIn === undefined) ? 0 : newPushReviewStatusIdIn;
feedbackMessageIn = (feedbackMessageIn === undefined) ? "" : feedbackMessageIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.pushReview_UpdateStatus$Action.bind(controller, newPushReviewStatusIdIn, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(feedbackMessageIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$RequestWelcomePrize", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "BALANCE_MBP.controller", "BALANCE_MBP.controller$Balance_ClearCache", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$BALANCE_MBP", "WTF_MBP.controller$ServerAction.RequestWelcomePrize", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORecordList", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, BALANCE_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.requestWelcomePrize$Action = function (userWtfIdIn, identifierIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Prizes.RequestWelcomePrize$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.identifierInLocal = identifierIn;
var requestWelcomePrizeVar = new OS.DataTypes.VariableHolder();
var balance_ClearCacheVar = new OS.DataTypes.VariableHolder();
var getLocalACCESSTOKENINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Prizes.RequestWelcomePrize$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalACCESSTOKENINFOES
var getLocalACCESSTOKENINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_ACCESS_TOKEN_INFO\".\"Id\" o0, \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" o1, \"ENLocal_ACCESS_TOKEN_INFO\".\"Access_token\" o2, \"ENLocal_ACCESS_TOKEN_INFO\".\"IsUserRegistered\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ACCESS_TOKEN_INFO\" \"ENLocal_ACCESS_TOKEN_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ACCESS_TOKEN_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalACCESSTOKENINFOESVar.value;
});
};
return getLocalACCESSTOKENINFOESAggr().then(function () {
// Execute Action: RequestWelcomePrize
return controller.requestWelcomePrize$ServerAction(OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.integerToIdentifier(vars.value.userWtfIdInLocal)), getLocalACCESSTOKENINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr, vars.value.identifierInLocal, callContext).then(function (value) {
requestWelcomePrizeVar.value = value;
});
}).then(function () {
// Success = RequestWelcomePrize.Success
outVars.value.successOut = requestWelcomePrizeVar.value.successOut;
// Message = RequestWelcomePrize.Message
outVars.value.messageOut = requestWelcomePrizeVar.value.messageOut;
// Execute Action: Balance_ClearCache
return BALANCE_MBPController.default.balance_ClearCache$Action(callContext).then(function (value) {
balance_ClearCacheVar.value = value;
});
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Prizes.RequestWelcomePrize$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "Identifier",
attrName: "identifierInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Prizes.RequestWelcomePrize$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.requestWelcomePrize$Action = function (userWtfIdIn, identifierIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? 0 : userWtfIdIn;
identifierIn = (identifierIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : identifierIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.requestWelcomePrize$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.Integer), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(identifierIn, OS.Types.LongInteger)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$RevolutIsFirstTime", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.RevolutIsFirstTime"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.revolutIsFirstTime$Action = function (userWtfIdIn, refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Revolut.RevolutIsFirstTime$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
var revolutIsFirstTimeVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Revolut.RevolutIsFirstTime$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: RevolutIsFirstTime
return controller.revolutIsFirstTime$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, callContext).then(function (value) {
revolutIsFirstTimeVar.value = value;
}).then(function () {
// Success = RevolutIsFirstTime.Success
outVars.value.successOut = revolutIsFirstTimeVar.value.successOut;
// Message = RevolutIsFirstTime.Message
outVars.value.messageOut = revolutIsFirstTimeVar.value.messageOut;
// IsFirstTime = RevolutIsFirstTime.IsFirstTime
outVars.value.isFirstTimeOut = revolutIsFirstTimeVar.value.isFirstTimeOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Revolut.RevolutIsFirstTime$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Revolut.RevolutIsFirstTime$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "IsFirstTime",
attrName: "isFirstTimeOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.revolutIsFirstTime$Action = function (userWtfIdIn, refreshTokenIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.revolutIsFirstTime$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
IsFirstTime: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.isFirstTimeOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$SecretFriend_GetAllOffersActive", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_SecretFriendConditionsAndOffersRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.SecretFriend_GetAllOffersActive"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.secretFriend_GetAllOffersActive$Action = function (userWtfIdIn, refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_GetAllOffersActive$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
var secretFriend_GetAllOffersActiveVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_GetAllOffersActive$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: SecretFriend_GetAllOffersActive
return controller.secretFriend_GetAllOffersActive$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, callContext).then(function (value) {
secretFriend_GetAllOffersActiveVar.value = value;
}).then(function () {
// SecretFriendConditionsAndOffers = SecretFriend_GetAllOffersActive.SecretFriendConditionsAndOffers
outVars.value.secretFriendConditionsAndOffersOut = secretFriend_GetAllOffersActiveVar.value.secretFriendConditionsAndOffersOut;
// Success = SecretFriend_GetAllOffersActive.Success
outVars.value.successOut = secretFriend_GetAllOffersActiveVar.value.successOut;
// Message = SecretFriend_GetAllOffersActive.Message
outVars.value.messageOut = secretFriend_GetAllOffersActiveVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_GetAllOffersActive$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_GetAllOffersActive$outVars", [{
name: "SecretFriendConditionsAndOffers",
attrName: "secretFriendConditionsAndOffersOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_SecretFriendConditionsAndOffersRec();
},
complexType: WTF_BPModel.App_SecretFriendConditionsAndOffersRec
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.secretFriend_GetAllOffersActive$Action = function (userWtfIdIn, refreshTokenIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.secretFriend_GetAllOffersActive$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
SecretFriendConditionsAndOffers: actionResults.secretFriendConditionsAndOffersOut,
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$SecretFriend_GetConditionsActive", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.SecretFriend_GetConditionsActive"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.secretFriend_GetConditionsActive$Action = function (userWtfIdIn, refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_GetConditionsActive$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
var secretFriend_GetConditionsActiveVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_GetConditionsActive$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: SecretFriend_GetConditionsActive
return controller.secretFriend_GetConditionsActive$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, callContext).then(function (value) {
secretFriend_GetConditionsActiveVar.value = value;
}).then(function () {
// Conditions = SecretFriend_GetConditionsActive.Conditions
outVars.value.conditionsOut = secretFriend_GetConditionsActiveVar.value.conditionsOut;
// Success = SecretFriend_GetConditionsActive.Success
outVars.value.successOut = secretFriend_GetConditionsActiveVar.value.successOut;
// Message = SecretFriend_GetConditionsActive.Message
outVars.value.messageOut = secretFriend_GetConditionsActiveVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_GetConditionsActive$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_GetConditionsActive$outVars", [{
name: "Conditions",
attrName: "conditionsOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.secretFriend_GetConditionsActive$Action = function (userWtfIdIn, refreshTokenIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.secretFriend_GetConditionsActive$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Conditions: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.conditionsOut, OS.Types.Text, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$SecretFriend_GetMyOffers", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_SecretFriendMyOffersList", "WTF_MBP.controller$ServerAction.SecretFriend_GetMyOffers"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.secretFriend_GetMyOffers$Action = function (userWtfIdIn, refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_GetMyOffers$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
var secretFriend_GetMyOffersVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_GetMyOffers$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: SecretFriend_GetMyOffers
return controller.secretFriend_GetMyOffers$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, callContext).then(function (value) {
secretFriend_GetMyOffersVar.value = value;
}).then(function () {
// SecretFriendMyOffers = SecretFriend_GetMyOffers.SecretFriendMyOffers
outVars.value.secretFriendMyOffersOut = secretFriend_GetMyOffersVar.value.secretFriendMyOffersOut;
// Success = SecretFriend_GetMyOffers.Success
outVars.value.successOut = secretFriend_GetMyOffersVar.value.successOut;
// Message = SecretFriend_GetMyOffers.Message
outVars.value.messageOut = secretFriend_GetMyOffersVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_GetMyOffers$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_GetMyOffers$outVars", [{
name: "SecretFriendMyOffers",
attrName: "secretFriendMyOffersOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_SecretFriendMyOffersList();
},
complexType: WTF_MBPModel.App_SecretFriendMyOffersList
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.secretFriend_GetMyOffers$Action = function (userWtfIdIn, refreshTokenIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.secretFriend_GetMyOffers$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
SecretFriendMyOffers: actionResults.secretFriendMyOffersOut,
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$SecretFriend_RedeemOffer", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.SecretFriend_RedeemOffer", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.secretFriend_RedeemOffer$Action = function (itemIdentifierIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_RedeemOffer$vars"))());
vars.value.itemIdentifierInLocal = itemIdentifierIn;
var secretFriend_RedeemOfferVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_RedeemOffer$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: SecretFriend_RedeemOffer
return controller.secretFriend_RedeemOffer$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, vars.value.itemIdentifierInLocal, callContext).then(function (value) {
secretFriend_RedeemOfferVar.value = value;
});
}).then(function () {
// Success = SecretFriend_RedeemOffer.Success
outVars.value.successOut = secretFriend_RedeemOfferVar.value.successOut;
// Message = SecretFriend_RedeemOffer.Message
outVars.value.messageOut = secretFriend_RedeemOfferVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_RedeemOffer$vars", [{
name: "ItemIdentifier",
attrName: "itemIdentifierInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_RedeemOffer$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.secretFriend_RedeemOffer$Action = function (itemIdentifierIn) {
itemIdentifierIn = (itemIdentifierIn === undefined) ? 0 : itemIdentifierIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.secretFriend_RedeemOffer$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(itemIdentifierIn, OS.Types.Integer)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$SecretFriend_SendOffer", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.SecretFriend_SendOffer", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.secretFriend_SendOffer$Action = function (offerIdentifierIn, msisdnToSendIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_SendOffer$vars"))());
vars.value.offerIdentifierInLocal = offerIdentifierIn;
vars.value.msisdnToSendInLocal = msisdnToSendIn;
var secretFriend_SendOfferVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_SendOffer$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: SecretFriend_SendOffer
return controller.secretFriend_SendOffer$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, vars.value.offerIdentifierInLocal, vars.value.msisdnToSendInLocal, callContext).then(function (value) {
secretFriend_SendOfferVar.value = value;
});
}).then(function () {
// AlreadyInApp = SecretFriend_SendOffer.AlreadyInApp
outVars.value.alreadyInAppOut = secretFriend_SendOfferVar.value.alreadyInAppOut;
// Success = SecretFriend_SendOffer.Success
outVars.value.successOut = secretFriend_SendOfferVar.value.successOut;
// Message = SecretFriend_SendOffer.Message
outVars.value.messageOut = secretFriend_SendOfferVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_SendOffer$vars", [{
name: "OfferIdentifier",
attrName: "offerIdentifierInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "MsisdnToSend",
attrName: "msisdnToSendInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_SendOffer$outVars", [{
name: "AlreadyInApp",
attrName: "alreadyInAppOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.secretFriend_SendOffer$Action = function (offerIdentifierIn, msisdnToSendIn) {
offerIdentifierIn = (offerIdentifierIn === undefined) ? 0 : offerIdentifierIn;
msisdnToSendIn = (msisdnToSendIn === undefined) ? 0 : msisdnToSendIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.secretFriend_SendOffer$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(offerIdentifierIn, OS.Types.Integer), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(msisdnToSendIn, OS.Types.Integer)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
AlreadyInApp: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.alreadyInAppOut, OS.Types.Boolean, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$SecretFriend_VerifyAlreadySendAllOffers", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_PictureRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.SecretFriend_VerifyAlreadySendAllOffers"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.secretFriend_VerifyAlreadySendAllOffers$Action = function (userWtfIdIn, refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_VerifyAlreadySendAllOffers$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
var secretFriend_VerifyAlreadySendAllOffersVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_VerifyAlreadySendAllOffers$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: SecretFriend_VerifyAlreadySendAllOffers
return controller.secretFriend_VerifyAlreadySendAllOffers$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, callContext).then(function (value) {
secretFriend_VerifyAlreadySendAllOffersVar.value = value;
}).then(function () {
// Success = SecretFriend_VerifyAlreadySendAllOffers.Success
outVars.value.successOut = secretFriend_VerifyAlreadySendAllOffersVar.value.successOut;
// Message = SecretFriend_VerifyAlreadySendAllOffers.Message
outVars.value.messageOut = secretFriend_VerifyAlreadySendAllOffersVar.value.messageOut;
// App_SendPicture = SecretFriend_VerifyAlreadySendAllOffers.App_Picture
outVars.value.app_SendPictureOut = secretFriend_VerifyAlreadySendAllOffersVar.value.app_PictureOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_VerifyAlreadySendAllOffers$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SecretFriend.SecretFriend_VerifyAlreadySendAllOffers$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_SendPicture",
attrName: "app_SendPictureOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_PictureRec();
},
complexType: WTF_BPModel.App_PictureRec
}]);
WTF_MBPController.default.clientActionProxies.secretFriend_VerifyAlreadySendAllOffers$Action = function (userWtfIdIn, refreshTokenIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.secretFriend_VerifyAlreadySendAllOffers$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
App_SendPicture: actionResults.app_SendPictureOut
};
});
};
});

define("WTF_MBP.controller$SendMGMCode", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.SendMGMCode", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.sendMGMCode$Action = function (codeIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.MGM.SendMGMCode$vars"))());
vars.value.codeInLocal = codeIn;
var sendMGMCodeVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.MGM.SendMGMCode$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: SendMGMCode
return controller.sendMGMCode$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, vars.value.codeInLocal, callContext).then(function (value) {
sendMGMCodeVar.value = value;
});
}).then(function () {
// Success = SendMGMCode.Success
outVars.value.successOut = sendMGMCodeVar.value.successOut;
// Message = SendMGMCode.Message
outVars.value.messageOut = sendMGMCodeVar.value.messageOut;
// NDiamondsBonus = SendMGMCode.NDiamondsBonus
outVars.value.nDiamondsBonusOut = sendMGMCodeVar.value.nDiamondsBonusOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.MGM.SendMGMCode$vars", [{
name: "Code",
attrName: "codeInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.MGM.SendMGMCode$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "NDiamondsBonus",
attrName: "nDiamondsBonusOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.clientActionProxies.sendMGMCode$Action = function (codeIn) {
codeIn = (codeIn === undefined) ? "" : codeIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.sendMGMCode$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(codeIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
NDiamondsBonus: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.nDiamondsBonusOut, OS.Types.Integer, true)
};
});
};
});

define("WTF_MBP.controller$SendVoucheForSms", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.SendVoucherForSms", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.sendVoucheForSms$Action = function (voucherCodeIn, voucherTypeIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Wallet.SendVoucheForSms$vars"))());
vars.value.voucherCodeInLocal = voucherCodeIn;
vars.value.voucherTypeIdInLocal = voucherTypeIdIn;
var sendVoucherForSmsVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Wallet.SendVoucheForSms$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: SendVoucherForSms
return controller.sendVoucherForSms$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), vars.value.voucherCodeInLocal, getActiveUserWTFVar.value.refreshTokenOut, vars.value.voucherTypeIdInLocal, callContext).then(function (value) {
sendVoucherForSmsVar.value = value;
});
}).then(function () {
// Success = SendVoucherForSms.Success
outVars.value.successOut = sendVoucherForSmsVar.value.successOut;
// Message = SendVoucherForSms.Message
outVars.value.messageOut = sendVoucherForSmsVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Wallet.SendVoucheForSms$vars", [{
name: "VoucherCode",
attrName: "voucherCodeInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "VoucherTypeId",
attrName: "voucherTypeIdInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Wallet.SendVoucheForSms$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.sendVoucheForSms$Action = function (voucherCodeIn, voucherTypeIdIn) {
voucherCodeIn = (voucherCodeIn === undefined) ? "" : voucherCodeIn;
voucherTypeIdIn = (voucherTypeIdIn === undefined) ? 0 : voucherTypeIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.sendVoucheForSms$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(voucherCodeIn, OS.Types.Text), voucherTypeIdIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$SendVoucherUberSms", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_BP.model$App_VoucherRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.SendVoucherUberSms"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.sendVoucherUberSms$Action = function (app_VoucherIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Uber.SendVoucherUberSms$vars"))());
vars.value.app_VoucherInLocal = app_VoucherIn.clone();
var sendVoucherUberSmsVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Uber.SendVoucherUberSms$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: SendVoucherUberSms
return controller.sendVoucherUberSms$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, vars.value.app_VoucherInLocal, callContext).then(function (value) {
sendVoucherUberSmsVar.value = value;
});
}).then(function () {
// Message
// Message = SendVoucherUberSms.Message
outVars.value.messageOut = sendVoucherUberSmsVar.value.messageOut;
// Success = SendVoucherUberSms.Success
outVars.value.successOut = sendVoucherUberSmsVar.value.successOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Uber.SendVoucherUberSms$vars", [{
name: "App_Voucher",
attrName: "app_VoucherInLocal",
mandatory: true,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_VoucherRec();
},
complexType: WTF_BPModel.App_VoucherRec
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Uber.SendVoucherUberSms$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.sendVoucherUberSms$Action = function (app_VoucherIn) {
app_VoucherIn = (app_VoucherIn === undefined) ? new WTF_BPModel.App_VoucherRec() : app_VoucherIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.sendVoucherUberSms$Action.bind(controller, app_VoucherIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$setActivityLog_ActivateDelight", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_ACTIVATE_DELIGHT", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ActivateDelight$Action = function (accountNumberIn, withErrorIn, errorCodeIn, delightIDIn, delightNameIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ActivateDelight$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
vars.value.withErrorInLocal = withErrorIn;
vars.value.errorCodeInLocal = errorCodeIn;
vars.value.delightIDInLocal = delightIDIn;
vars.value.delightNameInLocal = delightNameIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_ACTIVATE_DELIGHTVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_ACTIVATE_DELIGHT
return controller.setActivityLogger_ACTIVATE_DELIGHT$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, vars.value.withErrorInLocal, vars.value.errorCodeInLocal, vars.value.delightIDInLocal, vars.value.delightNameInLocal, callContext).then(function (value) {
setActivityLogger_ACTIVATE_DELIGHTVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ActivateDelight", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ActivateDelight$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "withError",
attrName: "withErrorInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorCode",
attrName: "errorCodeInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "DelightID",
attrName: "delightIDInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "DelightName",
attrName: "delightNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ActivateDelight$Action = function (accountNumberIn, withErrorIn, errorCodeIn, delightIDIn, delightNameIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
withErrorIn = (withErrorIn === undefined) ? false : withErrorIn;
errorCodeIn = (errorCodeIn === undefined) ? "" : errorCodeIn;
delightIDIn = (delightIDIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : delightIDIn;
delightNameIn = (delightNameIn === undefined) ? "" : delightNameIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ActivateDelight$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(withErrorIn, OS.Types.Boolean), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(errorCodeIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(delightIDIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(delightNameIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ANTICIPATE_PAYMENT", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_ANTICIPATE_PAYMENT", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ANTICIPATE_PAYMENT$Action = function (accountNumberIn, tariffIn, renewDateIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ANTICIPATE_PAYMENT$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
vars.value.tariffInLocal = tariffIn;
vars.value.renewDateInLocal = renewDateIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_ANTICIPATE_PAYMENTVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// ActivityLogSubAction
// ActivityLogSubAction = tariff + "_" + Day + "_" + Day
vars.value.activityLogSubActionVar = ((((vars.value.tariffInLocal + "_") + (OS.BuiltinFunctions.day(vars.value.renewDateInLocal)).toString()) + "_") + (OS.BuiltinFunctions.day(OS.BuiltinFunctions.currDate())).toString());
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_ANTICIPATE_PAYMENT
return controller.setActivityLogger_ANTICIPATE_PAYMENT$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, vars.value.activityLogSubActionVar, callContext).then(function (value) {
setActivityLogger_ANTICIPATE_PAYMENTVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ANTICIPATE_PAYMENT", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ANTICIPATE_PAYMENT$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "tariff",
attrName: "tariffInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "RenewDate",
attrName: "renewDateInLocal",
mandatory: true,
dataType: OS.Types.Date,
defaultValue: function () {
return OS.DataTypes.DateTime.defaultValue;
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ActivityLogSubAction",
attrName: "activityLogSubActionVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ANTICIPATE_PAYMENT$Action = function (accountNumberIn, tariffIn, renewDateIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
tariffIn = (tariffIn === undefined) ? "" : tariffIn;
renewDateIn = (renewDateIn === undefined) ? OS.DataTypes.DateTime.defaultValue : renewDateIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ANTICIPATE_PAYMENT$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(tariffIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(renewDateIn, OS.Types.Date)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_Balance", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_BALANCE", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetOperatingSystem", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_Balance$Action = function (serviceIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_Balance$vars"))());
vars.value.serviceIdInLocal = serviceIdIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_BALANCEVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_BALANCE
return controller.setActivityLogger_BALANCE$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, "", "", OS.BuiltinFunctions.toUpper(vars.value.serviceIdInLocal), getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_BALANCEVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_Balance", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_Balance$vars", [{
name: "ServiceId",
attrName: "serviceIdInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_Balance$Action = function (serviceIdIn) {
serviceIdIn = (serviceIdIn === undefined) ? "" : serviceIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_Balance$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(serviceIdIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_BalanceCharge", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_BALANCE_CHARGE", "WTF_MBP.controller$Cordova_GetDeviceID", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_BalanceCharge$Action = function (accountNumberIn, amountIn, paymentMethodIn, withErrorIn, mSISDNIn, errorCodeIn, errorMsgIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_BalanceCharge$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
vars.value.amountInLocal = amountIn;
vars.value.paymentMethodInLocal = paymentMethodIn;
vars.value.withErrorInLocal = withErrorIn;
vars.value.mSISDNInLocal = mSISDNIn;
vars.value.errorCodeInLocal = errorCodeIn;
vars.value.errorMsgInLocal = errorMsgIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_BALANCE_CHARGEVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

if((((OS.BuiltinFunctions.trim(vars.value.paymentMethodInLocal)) !== ("")))) {
// PMETHOD
// ParameterRecord.Name = "PAYMENT_METHOD"
vars.value.parameterRecordVar.nameAttr = "PAYMENT_METHOD";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(vars.value.paymentMethodInLocal);
// Execute Action: PMETHOD_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

if((((vars.value.errorMsgInLocal) !== ("")))) {
// PAYGATE_ERROR
// ParameterRecord.Name = "PAYGATE_ERROR"
vars.value.parameterRecordVar.nameAttr = "PAYGATE_ERROR";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(vars.value.errorMsgInLocal);
// Execute Action: PGATE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_BALANCE_CHARGE
return controller.setActivityLogger_BALANCE_CHARGE$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), "", ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), vars.value.mSISDNInLocal, "", getClientInfoVar.value.accountOwnerPhoneNrOut, "", getClientInfoVar.value.accountOwnerNIFOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, vars.value.amountInLocal, vars.value.withErrorInLocal, vars.value.errorCodeInLocal, callContext).then(function (value) {
setActivityLogger_BALANCE_CHARGEVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_BalanceCharge", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_BalanceCharge$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Amount",
attrName: "amountInLocal",
mandatory: true,
dataType: OS.Types.Decimal,
defaultValue: function () {
return OS.DataTypes.Decimal.defaultValue;
}
}, {
name: "PaymentMethod",
attrName: "paymentMethodInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "withError",
attrName: "withErrorInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "MSISDN",
attrName: "mSISDNInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorMsg",
attrName: "errorMsgInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_BalanceCharge$Action = function (accountNumberIn, amountIn, paymentMethodIn, withErrorIn, mSISDNIn, errorCodeIn, errorMsgIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
amountIn = (amountIn === undefined) ? OS.DataTypes.Decimal.defaultValue : amountIn;
paymentMethodIn = (paymentMethodIn === undefined) ? "" : paymentMethodIn;
withErrorIn = (withErrorIn === undefined) ? false : withErrorIn;
mSISDNIn = (mSISDNIn === undefined) ? "" : mSISDNIn;
errorCodeIn = (errorCodeIn === undefined) ? "" : errorCodeIn;
errorMsgIn = (errorMsgIn === undefined) ? "" : errorMsgIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_BalanceCharge$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(amountIn, OS.Types.Decimal), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(paymentMethodIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(withErrorIn, OS.Types.Boolean), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(mSISDNIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(errorCodeIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(errorMsgIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_CHANGE_MOBILE_TARIFF", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_CHANGE_MOBILE_TARIFF", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_CHANGE_MOBILE_TARIFF$Action = function (accountNumberIn, fromTariffIn, toTariffIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_CHANGE_MOBILE_TARIFF$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
vars.value.fromTariffInLocal = fromTariffIn;
vars.value.toTariffInLocal = toTariffIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_CHANGE_MOBILE_TARIFFVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// ActivityLogSubAction
// ActivityLogSubAction = "Change_" + FromTariff + "_" + ToTariff
vars.value.activityLogSubActionVar = ((("Change_" + vars.value.fromTariffInLocal) + "_") + vars.value.toTariffInLocal);
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_CHANGE_MOBILE_TARIFF
return controller.setActivityLogger_CHANGE_MOBILE_TARIFF$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, vars.value.activityLogSubActionVar, callContext).then(function (value) {
setActivityLogger_CHANGE_MOBILE_TARIFFVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_CHANGE_MOBILE_TARIFF", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_CHANGE_MOBILE_TARIFF$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "FromTariff",
attrName: "fromTariffInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ToTariff",
attrName: "toTariffInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ActivityLogSubAction",
attrName: "activityLogSubActionVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_CHANGE_MOBILE_TARIFF$Action = function (accountNumberIn, fromTariffIn, toTariffIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
fromTariffIn = (fromTariffIn === undefined) ? "" : fromTariffIn;
toTariffIn = (toTariffIn === undefined) ? "" : toTariffIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_CHANGE_MOBILE_TARIFF$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(fromTariffIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(toTariffIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ChangeExtraBalanceLimit", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_CHANGE_EXTRA_BALANCE", "WTF_MBP.controller$GetClientInfo", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ChangeExtraBalanceLimit$Action = function (mSISDNIn, isErrorIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ChangeExtraBalanceLimit$vars"))());
vars.value.mSISDNInLocal = mSISDNIn;
vars.value.isErrorInLocal = isErrorIn;
var setActivityLogger_CHANGE_EXTRA_BALANCEVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var getLocalUSERINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetLocalUSERINFOES
var getLocalUSERINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalUSERINFOESVar.value;
});
};
return getLocalUSERINFOESAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((vars.value.mSISDNInLocal) !== ("")))) {
// NAME
// ParameterRecord.Name = "MSISDN"
vars.value.parameterRecordVar.nameAttr = "MSISDN";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(vars.value.mSISDNInLocal);
// Execute Action: NAME_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_CHANGE_EXTRA_BALANCE
return controller.setActivityLogger_CHANGE_EXTRA_BALANCE$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, "", "", getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getLocalUSERINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getLocalUSERINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, vars.value.isErrorInLocal, callContext).then(function (value) {
setActivityLogger_CHANGE_EXTRA_BALANCEVar.value = value;
});
});
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ChangeExtraBalanceLimit$vars", [{
name: "MSISDN",
attrName: "mSISDNInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "isError",
attrName: "isErrorInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ChangeExtraBalanceLimit$Action = function (mSISDNIn, isErrorIn) {
mSISDNIn = (mSISDNIn === undefined) ? "" : mSISDNIn;
isErrorIn = (isErrorIn === undefined) ? false : isErrorIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ChangeExtraBalanceLimit$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(mSISDNIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(isErrorIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_CheckFAQs", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_CHECK_FAQS", "WTF_MBP.controller$Cordova_GetOperatingSystem", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_CheckFAQs$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_CheckFAQs$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_SCRATCH_CHECK_FAQSVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_SCRATCH_CHECK_FAQS
return controller.setActivityLogger_SCRATCH_CHECK_FAQS$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_SCRATCH_CHECK_FAQSVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_CheckFAQs", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_CheckFAQs$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_CheckFAQs$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_CheckFAQs$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ClickAddServices", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_CLICK_ADD_SERVICES", "WTF_MBP.controller$Cordova_GetDeviceID", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ClickAddServices$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ClickAddServices$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_CLICK_ADD_SERVICESVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_CLICK_ADD_SERVICES
return controller.setActivityLogger_CLICK_ADD_SERVICES$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_CLICK_ADD_SERVICESVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ClickAddServices", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ClickAddServices$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ClickAddServices$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ClickAddServices$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ClickLoginPage", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_CLICK_LOGIN", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$ServerAction.setActivityLogger_CLICK_REGISTER", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ClickLoginPage$Action = function (isRegisterIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ClickLoginPage$vars"))());
vars.value.isRegisterInLocal = isRegisterIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_CLICK_LOGINVar = new OS.DataTypes.VariableHolder();
var setActivityLogger_CLICK_REGISTERVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceID2Var = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
// Execute Action: Cordova_GetDeviceID2
cordova_GetDeviceID2Var.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID2.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceID2Var.value.deviceHwIdOut;
}

return OS.Flow.executeSequence(function () {
if((vars.value.isRegisterInLocal)) {
// Execute Action: setActivityLogger_CLICK_REGISTER
return controller.setActivityLogger_CLICK_REGISTER$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (getClientInfoVar.value.custCode_ClientNumberOut)), "", ((vars.value.isBSCSVar) ? (getClientInfoVar.value.custCode_ClientNumberOut) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getClientInfoVar.value.accountOwnerNIFOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, vars.value.sessionIDVar, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, callContext).then(function (value) {
setActivityLogger_CLICK_REGISTERVar.value = value;
});
} else {
// Execute Action: setActivityLogger_CLICK_LOGIN
return controller.setActivityLogger_CLICK_LOGIN$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (getClientInfoVar.value.custCode_ClientNumberOut)), "", ((vars.value.isBSCSVar) ? (getClientInfoVar.value.custCode_ClientNumberOut) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getClientInfoVar.value.accountOwnerNIFOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, vars.value.sessionIDVar, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, callContext).then(function (value) {
setActivityLogger_CLICK_LOGINVar.value = value;
});
}

});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ClickLoginPage", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ClickLoginPage$vars", [{
name: "isRegister",
attrName: "isRegisterInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ClickLoginPage$Action = function (isRegisterIn) {
isRegisterIn = (isRegisterIn === undefined) ? false : isRegisterIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ClickLoginPage$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(isRegisterIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ExtraBalance", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_EXTRA_BALANCE", "WTF_MBP.controller$Cordova_GetOperatingSystem", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ExtraBalance$Action = function (extraBalanceNameIn, extraBalanceCategoryIn, isRefillIn, isErrorIn, amountIn, toDesactivateIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ExtraBalance$vars"))());
vars.value.extraBalanceNameInLocal = extraBalanceNameIn;
vars.value.extraBalanceCategoryInLocal = extraBalanceCategoryIn;
vars.value.isRefillInLocal = isRefillIn;
vars.value.isErrorInLocal = isErrorIn;
vars.value.amountInLocal = amountIn;
vars.value.toDesactivateInLocal = toDesactivateIn;
var setActivityLogger_EXTRA_BALANCEVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getLocalUSERINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetLocalUSERINFOES
var getLocalUSERINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalUSERINFOESVar.value;
});
};
return getLocalUSERINFOESAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((vars.value.extraBalanceNameInLocal) !== ("")))) {
// NAME
// ParameterRecord.Name = "EXTRA_BALANCE_NAME"
vars.value.parameterRecordVar.nameAttr = "EXTRA_BALANCE_NAME";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(vars.value.extraBalanceNameInLocal);
// Execute Action: NAME_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

if((((vars.value.extraBalanceCategoryInLocal) !== ("")))) {
// CATEGORY
// ParameterRecord.Name = "EXTRA_BALANCE_CATEGORY"
vars.value.parameterRecordVar.nameAttr = "EXTRA_BALANCE_CATEGORY";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(vars.value.extraBalanceCategoryInLocal);
// Execute Action: NAME_ListAppend2
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_EXTRA_BALANCE
return controller.setActivityLogger_EXTRA_BALANCE$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, "", "", getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getLocalUSERINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getLocalUSERINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, vars.value.isRefillInLocal, vars.value.isErrorInLocal, vars.value.amountInLocal, vars.value.toDesactivateInLocal, callContext).then(function (value) {
setActivityLogger_EXTRA_BALANCEVar.value = value;
});
});
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ExtraBalance$vars", [{
name: "ExtraBalanceName",
attrName: "extraBalanceNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ExtraBalanceCategory",
attrName: "extraBalanceCategoryInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "isRefill",
attrName: "isRefillInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "isError",
attrName: "isErrorInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Amount",
attrName: "amountInLocal",
mandatory: true,
dataType: OS.Types.Decimal,
defaultValue: function () {
return OS.DataTypes.Decimal.defaultValue;
}
}, {
name: "toDesactivate",
attrName: "toDesactivateInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ExtraBalance$Action = function (extraBalanceNameIn, extraBalanceCategoryIn, isRefillIn, isErrorIn, amountIn, toDesactivateIn) {
extraBalanceNameIn = (extraBalanceNameIn === undefined) ? "" : extraBalanceNameIn;
extraBalanceCategoryIn = (extraBalanceCategoryIn === undefined) ? "" : extraBalanceCategoryIn;
isRefillIn = (isRefillIn === undefined) ? false : isRefillIn;
isErrorIn = (isErrorIn === undefined) ? false : isErrorIn;
amountIn = (amountIn === undefined) ? OS.DataTypes.Decimal.defaultValue : amountIn;
toDesactivateIn = (toDesactivateIn === undefined) ? false : toDesactivateIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ExtraBalance$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(extraBalanceNameIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(extraBalanceCategoryIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(isRefillIn, OS.Types.Boolean), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(isErrorIn, OS.Types.Boolean), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(amountIn, OS.Types.Decimal), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(toDesactivateIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ExtraBalanceLimit", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_EXTRA_BALANCE_LIMIT", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ExtraBalanceLimit$Action = function (mSISDNIn, isErrorIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ExtraBalanceLimit$vars"))());
vars.value.mSISDNInLocal = mSISDNIn;
vars.value.isErrorInLocal = isErrorIn;
var setActivityLogger_EXTRA_BALANCE_LIMITVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var getLocalUSERINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetLocalUSERINFOES
var getLocalUSERINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalUSERINFOESVar.value;
});
};
return getLocalUSERINFOESAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((vars.value.mSISDNInLocal) !== ("")))) {
// NAME
// ParameterRecord.Name = "MSISDN"
vars.value.parameterRecordVar.nameAttr = "MSISDN";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(vars.value.mSISDNInLocal);
// Execute Action: NAME_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_EXTRA_BALANCE_LIMIT
return controller.setActivityLogger_EXTRA_BALANCE_LIMIT$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, "", "", getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getLocalUSERINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getLocalUSERINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, vars.value.isErrorInLocal, callContext).then(function (value) {
setActivityLogger_EXTRA_BALANCE_LIMITVar.value = value;
});
});
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ExtraBalanceLimit$vars", [{
name: "MSISDN",
attrName: "mSISDNInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "isError",
attrName: "isErrorInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ExtraBalanceLimit$Action = function (mSISDNIn, isErrorIn) {
mSISDNIn = (mSISDNIn === undefined) ? "" : mSISDNIn;
isErrorIn = (isErrorIn === undefined) ? false : isErrorIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ExtraBalanceLimit$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(mSISDNIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(isErrorIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_Homepage", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_HOMEPAGE", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_Homepage$Action = function (callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_Homepage$vars"))());
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_HOMEPAGEVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_HOMEPAGE
return controller.setActivityLogger_HOMEPAGE$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, "", "", getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_HOMEPAGEVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_Homepage", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_Homepage$vars", [{
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_Homepage$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_Homepage$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_HotDealPurchase", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_HOT_DEAL_PURCHASE", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_HotDealPurchase$Action = function (accountNumberIn, amountIn, paymentMethodIn, withErrorIn, mSISDNIn, errorCodeIn, errorMsgIn, itemNameIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_HotDealPurchase$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
vars.value.amountInLocal = amountIn;
vars.value.paymentMethodInLocal = paymentMethodIn;
vars.value.withErrorInLocal = withErrorIn;
vars.value.mSISDNInLocal = mSISDNIn;
vars.value.errorCodeInLocal = errorCodeIn;
vars.value.errorMsgInLocal = errorMsgIn;
vars.value.itemNameInLocal = itemNameIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_HOT_DEAL_PURCHASEVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

if((((OS.BuiltinFunctions.trim(vars.value.paymentMethodInLocal)) !== ("")))) {
// PMETHOD
// ParameterRecord.Name = "PAYMENT_METHOD"
vars.value.parameterRecordVar.nameAttr = "PAYMENT_METHOD";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(vars.value.paymentMethodInLocal);
// Execute Action: PMETHOD_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

if((((vars.value.errorMsgInLocal) !== ("")))) {
// PAYGATE_ERROR
// ParameterRecord.Name = "PAYGATE_ERROR"
vars.value.parameterRecordVar.nameAttr = "PAYGATE_ERROR";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(vars.value.errorMsgInLocal);
// Execute Action: PGATE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

if((((vars.value.itemNameInLocal) !== ("")))) {
// NAME
// ParameterRecord.Name = "NAME"
vars.value.parameterRecordVar.nameAttr = "NAME";
// ParameterRecord.Value = ItemName
vars.value.parameterRecordVar.valueAttr = vars.value.itemNameInLocal;
// Execute Action: Name2
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

if((((vars.value.itemNameInLocal) !== ("")))) {
// AMOUNT
// ParameterRecord.Name = "AMOUNT"
vars.value.parameterRecordVar.nameAttr = "AMOUNT";
// ParameterRecord.Value = Amount
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.decimalToText(vars.value.amountInLocal);
// Execute Action: Name3
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_HOT_DEAL_PURCHASE
return controller.setActivityLogger_HOT_DEAL_PURCHASE$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), "", ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), vars.value.mSISDNInLocal, "", getClientInfoVar.value.accountOwnerPhoneNrOut, "", getClientInfoVar.value.accountOwnerNIFOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, vars.value.amountInLocal, vars.value.withErrorInLocal, vars.value.errorCodeInLocal, callContext).then(function (value) {
setActivityLogger_HOT_DEAL_PURCHASEVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_HotDealPurchase", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_HotDealPurchase$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Amount",
attrName: "amountInLocal",
mandatory: true,
dataType: OS.Types.Decimal,
defaultValue: function () {
return OS.DataTypes.Decimal.defaultValue;
}
}, {
name: "PaymentMethod",
attrName: "paymentMethodInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "withError",
attrName: "withErrorInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "MSISDN",
attrName: "mSISDNInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorMsg",
attrName: "errorMsgInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ItemName",
attrName: "itemNameInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_HotDealPurchase$Action = function (accountNumberIn, amountIn, paymentMethodIn, withErrorIn, mSISDNIn, errorCodeIn, errorMsgIn, itemNameIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
amountIn = (amountIn === undefined) ? OS.DataTypes.Decimal.defaultValue : amountIn;
paymentMethodIn = (paymentMethodIn === undefined) ? "" : paymentMethodIn;
withErrorIn = (withErrorIn === undefined) ? false : withErrorIn;
mSISDNIn = (mSISDNIn === undefined) ? "" : mSISDNIn;
errorCodeIn = (errorCodeIn === undefined) ? "" : errorCodeIn;
errorMsgIn = (errorMsgIn === undefined) ? "" : errorMsgIn;
itemNameIn = (itemNameIn === undefined) ? "" : itemNameIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_HotDealPurchase$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(amountIn, OS.Types.Decimal), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(paymentMethodIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(withErrorIn, OS.Types.Boolean), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(mSISDNIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(errorCodeIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(errorMsgIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(itemNameIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_LOGIN_MSISDN_VISIT", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_LOGIN_MSISDN_VISIT", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetOperatingSystem", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_LOGIN_MSISDN_VISIT$Action = function (accountNumberIn, activityLogSubActionIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_LOGIN_MSISDN_VISIT$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
vars.value.activityLogSubActionInLocal = activityLogSubActionIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_LOGIN_MSISDN_VISITVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_LOGIN_MSISDN_VISIT
return controller.setActivityLogger_LOGIN_MSISDN_VISIT$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, vars.value.activityLogSubActionInLocal, callContext).then(function (value) {
setActivityLogger_LOGIN_MSISDN_VISITVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_LOGIN_MSISDN_VISIT", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_LOGIN_MSISDN_VISIT$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ActivityLogSubAction",
attrName: "activityLogSubActionInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_LOGIN_MSISDN_VISIT$Action = function (accountNumberIn, activityLogSubActionIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
activityLogSubActionIn = (activityLogSubActionIn === undefined) ? "" : activityLogSubActionIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_LOGIN_MSISDN_VISIT$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(activityLogSubActionIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_PINPUK", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_PINPUK", "WTF_MBP.controller$Cordova_GetDeviceID", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_PINPUK$Action = function (serviceIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_PINPUK$vars"))());
vars.value.serviceIdInLocal = serviceIdIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_PINPUKVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_PINPUK
return controller.setActivityLogger_PINPUK$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, "", "", OS.BuiltinFunctions.toUpper(vars.value.serviceIdInLocal), getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_PINPUKVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_PINPUK", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_PINPUK$vars", [{
name: "ServiceId",
attrName: "serviceIdInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_PINPUK$Action = function (serviceIdIn) {
serviceIdIn = (serviceIdIn === undefined) ? "" : serviceIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_PINPUK$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(serviceIdIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_REDEEM_ADOPTION_CAMPAIGN_NATAL", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_REDEEM_ADOPTION_CAMPAIGN_NATAL", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$Cordova_GetOperatingSystem", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_REDEEM_ADOPTION_CAMPAIGN_NATAL$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_REDEEM_ADOPTION_CAMPAIGN_NATAL$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_REDEEM_ADOPTION_CAMPAIGN_NATALVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_REDEEM_ADOPTION_CAMPAIGN_NATAL
return controller.setActivityLogger_REDEEM_ADOPTION_CAMPAIGN_NATAL$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_REDEEM_ADOPTION_CAMPAIGN_NATALVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_REDEEM_ADOPTION_CAMPAIGN_NATAL", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_REDEEM_ADOPTION_CAMPAIGN_NATAL$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_REDEEM_ADOPTION_CAMPAIGN_NATAL$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_REDEEM_ADOPTION_CAMPAIGN_NATAL$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_RequestRevolut", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_REQUEST_REVOLUT", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_RequestRevolut$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_RequestRevolut$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_REQUEST_REVOLUTVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_REQUEST_REVOLUT
return controller.setActivityLogger_REQUEST_REVOLUT$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_REQUEST_REVOLUTVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_RequestRevolut", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_RequestRevolut$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_RequestRevolut$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_RequestRevolut$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_RequestTokenCinema", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_REQUEST_TOKEN_CINEMA", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.controller$Cordova_GetDeviceID", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_RequestTokenCinema$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_RequestTokenCinema$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_REQUEST_TOKEN_CINEMAVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_REQUEST_TOKEN_CINEMA
return controller.setActivityLogger_REQUEST_TOKEN_CINEMA$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_REQUEST_TOKEN_CINEMAVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_RequestTokenCinema", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_RequestTokenCinema$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_RequestTokenCinema$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_RequestTokenCinema$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_RequestUberEatsVoucher", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_REQUEST_UBER_EATS_VOUCHER", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_RequestUberEatsVoucher$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_RequestUberEatsVoucher$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_REQUEST_UBER_EATS_VOUCHERVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_REQUEST_UBER_EATS_VOUCHER
return controller.setActivityLogger_REQUEST_UBER_EATS_VOUCHER$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_REQUEST_UBER_EATS_VOUCHERVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_RequestUberEatsVoucher", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_RequestUberEatsVoucher$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_RequestUberEatsVoucher$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_RequestUberEatsVoucher$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_RequestUberVoucher", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_REQUEST_UBER_VOUCHER", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetDeviceID", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_RequestUberVoucher$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_RequestUberVoucher$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_REQUEST_UBER_VOUCHERVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_REQUEST_UBER_VOUCHER
return controller.setActivityLogger_REQUEST_UBER_VOUCHER$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_REQUEST_UBER_VOUCHERVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_RequestUberVoucher", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_RequestUberVoucher$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_RequestUberVoucher$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_RequestUberVoucher$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_RGPD_FIRST_TIME_ACCEPT", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_RGPD_FIRST_TIME_ACCEPT", "WTF_MBP.controller$GetClientInfo", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_RGPD_FIRST_TIME_ACCEPT$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_RGPD_FIRST_TIME_ACCEPT$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_RGPD_FIRST_TIME_ACCEPTVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_RGPD_FIRST_TIME_ACCEPT
return controller.setActivityLogger_RGPD_FIRST_TIME_ACCEPT$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_RGPD_FIRST_TIME_ACCEPTVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_RGPD_FIRST_TIME_ACCEPT", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_RGPD_FIRST_TIME_ACCEPT$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_RGPD_FIRST_TIME_ACCEPT$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_RGPD_FIRST_TIME_ACCEPT$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_RGPD_FIRST_TIME_REJECT", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_RGPD_FIRST_TIME_REJECT", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_RGPD_FIRST_TIME_REJECT$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_RGPD_FIRST_TIME_REJECT$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_RGPD_FIRST_TIME_REJECTVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_RGPD_FIRST_TIME_REJECT
return controller.setActivityLogger_RGPD_FIRST_TIME_REJECT$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_RGPD_FIRST_TIME_REJECTVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_RGPD_FIRST_TIME_REJECT", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_RGPD_FIRST_TIME_REJECT$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_RGPD_FIRST_TIME_REJECT$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_RGPD_FIRST_TIME_REJECT$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ScratchCheckPrizes", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_CHECK_PRIZES", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$Cordova_GetOperatingSystem", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ScratchCheckPrizes$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchCheckPrizes$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_SCRATCH_CHECK_PRIZESVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_SCRATCH_CHECK_PRIZES
return controller.setActivityLogger_SCRATCH_CHECK_PRIZES$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_SCRATCH_CHECK_PRIZESVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ScratchCheckPrizes", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchCheckPrizes$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ScratchCheckPrizes$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ScratchCheckPrizes$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ScratchCheckRules", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_CHECK_RULES", "WTF_MBP.controller$GetClientInfo", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ScratchCheckRules$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchCheckRules$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_SCRATCH_CHECK_RULESVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_SCRATCH_CHECK_RULES
return controller.setActivityLogger_SCRATCH_CHECK_RULES$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_SCRATCH_CHECK_RULESVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ScratchCheckRules", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchCheckRules$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ScratchCheckRules$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ScratchCheckRules$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ScratchCopyFriends", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_COPY_FRIENDS", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetDeviceID", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ScratchCopyFriends$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchCopyFriends$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_SCRATCH_COPY_FRIENDSVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_SCRATCH_COPY_FRIENDS
return controller.setActivityLogger_SCRATCH_COPY_FRIENDS$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_SCRATCH_COPY_FRIENDSVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ScratchCopyFriends", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchCopyFriends$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ScratchCopyFriends$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ScratchCopyFriends$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ScratchFail", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$LogEventFacebook_MBP", "WTF_MBP.controller$GetConfigValueAsText_MBP", "WTF_MBP.controller$setActivityLog_ScratchSilverFail", "WTF_MBP.controller$setActivityLog_ScratchGoldenFail"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ScratchFail$Action = function (diamondSelectedIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchFail$vars"))());
vars.value.diamondSelectedInLocal = diamondSelectedIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var logEventGoldenFailVar = new OS.DataTypes.VariableHolder();
var getSilverDiamondVar = new OS.DataTypes.VariableHolder();
var getGoldenDiamondVar = new OS.DataTypes.VariableHolder();
var logEventSilverFailVar = new OS.DataTypes.VariableHolder();
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetSilverDiamond
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("SILVER_DIAMOND_TYPE", callContext).then(function (value) {
getSilverDiamondVar.value = value;
}).then(function () {
// Execute Action: GetGoldenDiamond
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("GOLDEN_DIAMOND_TYPE", callContext).then(function (value) {
getGoldenDiamondVar.value = value;
});
}).then(function () {
return OS.Flow.executeSequence(function () {
if(((vars.value.diamondSelectedInLocal === getGoldenDiamondVar.value.valueOut))) {
// Execute Action: setActivityLog_ScratchGoldenFail
return WTF_MBPController.default.setActivityLog_ScratchGoldenFail$Action("", callContext).then(function () {
// Execute Action: LogEventGoldenFail
logEventGoldenFailVar.value = WTF_MBPController.default.logEventFacebook_MBP$Action("Scratch_golden_prize_fail", callContext);

});
} else {
return OS.Flow.executeSequence(function () {
if((vars.value.diamondSelectedInLocal === getSilverDiamondVar.value.valueOut)) {
// Execute Action: setActivityLog_ScratchSilverFail
return WTF_MBPController.default.setActivityLog_ScratchSilverFail$Action("", callContext).then(function () {
// Execute Action: LogEventSilverFail
logEventSilverFailVar.value = WTF_MBPController.default.logEventFacebook_MBP$Action("Scratch_silver_prize_fail", callContext);

});
}

});
}

});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ScratchFail", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchFail$vars", [{
name: "DiamondSelected",
attrName: "diamondSelectedInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ScratchFail$Action = function (diamondSelectedIn) {
diamondSelectedIn = (diamondSelectedIn === undefined) ? "" : diamondSelectedIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ScratchFail$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(diamondSelectedIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ScratchGoldenFail", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_GOLDEN_FAIL", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$Cordova_GetOperatingSystem", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ScratchGoldenFail$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchGoldenFail$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_SCRATCH_GOLDEN_FAILVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_SCRATCH_GOLDEN_FAIL
return controller.setActivityLogger_SCRATCH_GOLDEN_FAIL$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_SCRATCH_GOLDEN_FAILVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ScratchGoldenFail", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchGoldenFail$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ScratchGoldenFail$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ScratchGoldenFail$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ScratchGoldenLost", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_GOLDEN_LOST", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ScratchGoldenLost$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchGoldenLost$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_SCRATCH_GOLDEN_LOSTVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_SCRATCH_GOLDEN_LOST
return controller.setActivityLogger_SCRATCH_GOLDEN_LOST$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_SCRATCH_GOLDEN_LOSTVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ScratchGoldenLost", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchGoldenLost$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ScratchGoldenLost$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ScratchGoldenLost$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ScratchGoldenPlay", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_GOLDEN_PLAY", "WTF_MBP.controller$Cordova_GetOperatingSystem", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ScratchGoldenPlay$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchGoldenPlay$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_SCRATCH_GOLDEN_PLAYVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_SCRATCH_GOLDEN_PLAY
return controller.setActivityLogger_SCRATCH_GOLDEN_PLAY$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_SCRATCH_GOLDEN_PLAYVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ScratchGoldenPlay", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchGoldenPlay$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ScratchGoldenPlay$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ScratchGoldenPlay$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ScratchGoldenWon", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_GOLDEN_WON", "WTF_MBP.controller$GetClientInfo", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ScratchGoldenWon$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchGoldenWon$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_SCRATCH_GOLDEN_WONVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_SCRATCH_GOLDEN_WON
return controller.setActivityLogger_SCRATCH_GOLDEN_WON$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_SCRATCH_GOLDEN_WONVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ScratchGoldenWon", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchGoldenWon$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ScratchGoldenWon$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ScratchGoldenWon$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ScratchLost", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$setActivityLog_ScratchGoldenLost", "WTF_MBP.controller$LogEventFacebook_MBP", "WTF_MBP.controller$GetConfigValueAsText_MBP", "WTF_MBP.controller$setActivityLog_ScratchSilverLost"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ScratchLost$Action = function (diamondSelectedIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchLost$vars"))());
vars.value.diamondSelectedInLocal = diamondSelectedIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var logEventGoldenLostVar = new OS.DataTypes.VariableHolder();
var getGoldenDiamondVar = new OS.DataTypes.VariableHolder();
var getSilverDiamondVar = new OS.DataTypes.VariableHolder();
var logEventSilverLostVar = new OS.DataTypes.VariableHolder();
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetSilverDiamond
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("SILVER_DIAMOND_TYPE", callContext).then(function (value) {
getSilverDiamondVar.value = value;
}).then(function () {
// Execute Action: GetGoldenDiamond
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("GOLDEN_DIAMOND_TYPE", callContext).then(function (value) {
getGoldenDiamondVar.value = value;
});
}).then(function () {
return OS.Flow.executeSequence(function () {
if(((vars.value.diamondSelectedInLocal === getGoldenDiamondVar.value.valueOut))) {
// Execute Action: setActivityLog_ScratchGoldenLost
return WTF_MBPController.default.setActivityLog_ScratchGoldenLost$Action("", callContext).then(function () {
// Execute Action: LogEventGoldenLost
logEventGoldenLostVar.value = WTF_MBPController.default.logEventFacebook_MBP$Action("Scratch_golden_prize_lost", callContext);

});
} else {
return OS.Flow.executeSequence(function () {
if((vars.value.diamondSelectedInLocal === getSilverDiamondVar.value.valueOut)) {
// Execute Action: setActivityLog_ScratchSilverLost
return WTF_MBPController.default.setActivityLog_ScratchSilverLost$Action("", callContext).then(function () {
// Execute Action: LogEventSilverLost
logEventSilverLostVar.value = WTF_MBPController.default.logEventFacebook_MBP$Action("Scratch_silver_prize_lost", callContext);

});
}

});
}

});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ScratchLost", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchLost$vars", [{
name: "DiamondSelected",
attrName: "diamondSelectedInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ScratchLost$Action = function (diamondSelectedIn) {
diamondSelectedIn = (diamondSelectedIn === undefined) ? "" : diamondSelectedIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ScratchLost$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(diamondSelectedIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ScratchShareFriends", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_SHARE_FRIENDS", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.controller$Cordova_GetDeviceID", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ScratchShareFriends$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchShareFriends$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_SCRATCH_SHARE_FRIENDSVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_SCRATCH_SHARE_FRIENDS
return controller.setActivityLogger_SCRATCH_SHARE_FRIENDS$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_SCRATCH_SHARE_FRIENDSVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ScratchShareFriends", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchShareFriends$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ScratchShareFriends$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ScratchShareFriends$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ScratchSilverFail", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_SILVER_FAIL", "WTF_MBP.controller$GetClientInfo", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ScratchSilverFail$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchSilverFail$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_SCRATCH_SILVER_FAILVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_SCRATCH_SILVER_FAIL
return controller.setActivityLogger_SCRATCH_SILVER_FAIL$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_SCRATCH_SILVER_FAILVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ScratchSilverFail", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchSilverFail$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ScratchSilverFail$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ScratchSilverFail$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ScratchSilverLost", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_SILVER_LOST", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ScratchSilverLost$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchSilverLost$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_SCRATCH_SILVER_LOSTVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_SCRATCH_SILVER_LOST
return controller.setActivityLogger_SCRATCH_SILVER_LOST$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_SCRATCH_SILVER_LOSTVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ScratchSilverLost", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchSilverLost$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ScratchSilverLost$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ScratchSilverLost$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ScratchSilverPlay", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_SILVER_PLAY", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetOperatingSystem", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ScratchSilverPlay$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchSilverPlay$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_SCRATCH_SILVER_PLAYVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_SCRATCH_SILVER_PLAY
return controller.setActivityLogger_SCRATCH_SILVER_PLAY$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_SCRATCH_SILVER_PLAYVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ScratchSilverPlay", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchSilverPlay$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ScratchSilverPlay$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ScratchSilverPlay$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ScratchSilverWon", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_SILVER_WON", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$Cordova_GetOperatingSystem", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ScratchSilverWon$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchSilverWon$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_SCRATCH_SILVER_WONVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_SCRATCH_SILVER_WON
return controller.setActivityLogger_SCRATCH_SILVER_WON$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_SCRATCH_SILVER_WONVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ScratchSilverWon", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchSilverWon$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ScratchSilverWon$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ScratchSilverWon$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ScratchWon", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$LogEventFacebook_MBP", "WTF_MBP.controller$GetConfigValueAsText_MBP", "WTF_MBP.controller$setActivityLog_ScratchSilverWon", "WTF_MBP.controller$setActivityLog_ScratchGoldenWon"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ScratchWon$Action = function (diamondSelectedIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchWon$vars"))());
vars.value.diamondSelectedInLocal = diamondSelectedIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var logEventGoldenPrizeVar = new OS.DataTypes.VariableHolder();
var logEventSilverPrizeVar = new OS.DataTypes.VariableHolder();
var getGoldenDiamondVar = new OS.DataTypes.VariableHolder();
var getSilverDiamondVar = new OS.DataTypes.VariableHolder();
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetSilverDiamond
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("SILVER_DIAMOND_TYPE", callContext).then(function (value) {
getSilverDiamondVar.value = value;
}).then(function () {
// Execute Action: GetGoldenDiamond
return WTF_MBPController.default.getConfigValueAsText_MBP$Action("GOLDEN_DIAMOND_TYPE", callContext).then(function (value) {
getGoldenDiamondVar.value = value;
});
}).then(function () {
return OS.Flow.executeSequence(function () {
if(((vars.value.diamondSelectedInLocal === getGoldenDiamondVar.value.valueOut))) {
// Execute Action: setActivityLog_ScratchGoldenWon
return WTF_MBPController.default.setActivityLog_ScratchGoldenWon$Action("", callContext).then(function () {
// Execute Action: LogEventGoldenPrize
logEventGoldenPrizeVar.value = WTF_MBPController.default.logEventFacebook_MBP$Action("Scratch_golden_prize_won", callContext);

});
} else {
return OS.Flow.executeSequence(function () {
if((vars.value.diamondSelectedInLocal === getSilverDiamondVar.value.valueOut)) {
// Execute Action: setActivityLog_ScratchSilverWon
return WTF_MBPController.default.setActivityLog_ScratchSilverWon$Action("", callContext).then(function () {
// Execute Action: LogEventSilverPrize
logEventSilverPrizeVar.value = WTF_MBPController.default.logEventFacebook_MBP$Action("Scratch_silver_prize_won", callContext);

});
}

});
}

});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ScratchWon", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ScratchWon$vars", [{
name: "DiamondSelected",
attrName: "diamondSelectedInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ScratchWon$Action = function (diamondSelectedIn) {
diamondSelectedIn = (diamondSelectedIn === undefined) ? "" : diamondSelectedIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ScratchWon$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(diamondSelectedIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_SEND_ADOPTION_CAMPAIGN_NATAL", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_SEND_ADOPTION_CAMPAIGN_NATAL", "WTF_MBP.controller$Cordova_GetDeviceID", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_SEND_ADOPTION_CAMPAIGN_NATAL$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_SEND_ADOPTION_CAMPAIGN_NATAL$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_SEND_ADOPTION_CAMPAIGN_NATALVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_SEND_ADOPTION_CAMPAIGN_NATAL
return controller.setActivityLogger_SEND_ADOPTION_CAMPAIGN_NATAL$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_SEND_ADOPTION_CAMPAIGN_NATALVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_SEND_ADOPTION_CAMPAIGN_NATAL", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_SEND_ADOPTION_CAMPAIGN_NATAL$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_SEND_ADOPTION_CAMPAIGN_NATAL$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_SEND_ADOPTION_CAMPAIGN_NATAL$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ServiceChanged", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_WTF_SERVICE_CHANGED", "WTF_MBP.controller$Cordova_GetOperatingSystem", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ServiceChanged$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ServiceChanged$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_WTF_SERVICE_CHANGEDVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_WTF_SERVICE_CHANGED
return controller.setActivityLogger_WTF_SERVICE_CHANGED$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_WTF_SERVICE_CHANGEDVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ServiceChanged", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ServiceChanged$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ServiceChanged$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ServiceChanged$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_ServiceMobileRegister", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_REGISTER_MOBILE_SERVICE", "WTF_MBP.controller$Cordova_GetOperatingSystem", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_ServiceMobileRegister$Action = function (accountNumberIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ServiceMobileRegister$vars"))());
vars.value.accountNumberInLocal = accountNumberIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_REGISTER_MOBILE_SERVICE2Var = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// Execute Action: setActivityLogger_REGISTER_MOBILE_SERVICE2
return controller.setActivityLogger_REGISTER_MOBILE_SERVICE$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (vars.value.accountNumberInLocal)), ((vars.value.isBSCSVar) ? (vars.value.accountNumberInLocal) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_REGISTER_MOBILE_SERVICE2Var.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_ServiceMobileRegister", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_ServiceMobileRegister$vars", [{
name: "AccountNumber",
attrName: "accountNumberInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_ServiceMobileRegister$Action = function (accountNumberIn) {
accountNumberIn = (accountNumberIn === undefined) ? "" : accountNumberIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_ServiceMobileRegister$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accountNumberIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_VideoPlayerProgress", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_VIDEO_PLAYER_PROGRESS", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_VideoPlayerProgress$Action = function (playerProgressIn, playerAssetIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_VideoPlayerProgress$vars"))());
vars.value.playerProgressInLocal = playerProgressIn;
vars.value.playerAssetIdInLocal = playerAssetIdIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_VIDEO_PLAYER_PROGRESSVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// AssetId
// ParameterRecord.Name = "AssetId"
vars.value.parameterRecordVar.nameAttr = "AssetId";
// ParameterRecord.Value = PlayerAssetId
vars.value.parameterRecordVar.valueAttr = vars.value.playerAssetIdInLocal;
// Execute Action: ASSETID_ListAppend2
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
// Execute Action: setActivityLogger_VIDEO_PLAYER_PROGRESS
return controller.setActivityLogger_VIDEO_PLAYER_PROGRESS$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, "", "", getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, vars.value.playerProgressInLocal, callContext).then(function (value) {
setActivityLogger_VIDEO_PLAYER_PROGRESSVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_VideoPlayerProgress", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_VideoPlayerProgress$vars", [{
name: "PlayerProgress",
attrName: "playerProgressInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "PlayerAssetId",
attrName: "playerAssetIdInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_VideoPlayerProgress$Action = function (playerProgressIn, playerAssetIdIn) {
playerProgressIn = (playerProgressIn === undefined) ? 0 : playerProgressIn;
playerAssetIdIn = (playerAssetIdIn === undefined) ? "" : playerAssetIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_VideoPlayerProgress$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(playerProgressIn, OS.Types.Integer), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(playerAssetIdIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_VideoPlayerStarted", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_VIDEO_PLAYER_STARTED", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetDeviceID", "WTF_MBP.controller$Cordova_GetOperatingSystem", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_VideoPlayerStarted$Action = function (playerAssetIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_VideoPlayerStarted$vars"))());
vars.value.playerAssetIdInLocal = playerAssetIdIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_VIDEO_PLAYER_STARTEDVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceIDVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// Execute Action: Cordova_GetDeviceID
cordova_GetDeviceIDVar.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceIDVar.value.deviceHwIdOut;
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
}

// AssetId
// ParameterRecord.Name = "AssetId"
vars.value.parameterRecordVar.nameAttr = "AssetId";
// ParameterRecord.Value = PlayerAssetId
vars.value.parameterRecordVar.valueAttr = vars.value.playerAssetIdInLocal;
// Execute Action: ASSETID_ListAppend2
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
// Execute Action: setActivityLogger_VIDEO_PLAYER_STARTED
return controller.setActivityLogger_VIDEO_PLAYER_STARTED$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, "", "", getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, callContext).then(function (value) {
setActivityLogger_VIDEO_PLAYER_STARTEDVar.value = value;
});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_VideoPlayerStarted", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_VideoPlayerStarted$vars", [{
name: "PlayerAssetId",
attrName: "playerAssetIdInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_VideoPlayerStarted$Action = function (playerAssetIdIn) {
playerAssetIdIn = (playerAssetIdIn === undefined) ? "" : playerAssetIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_VideoPlayerStarted$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(playerAssetIdIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$setActivityLog_Visit", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ActivityLogger.model", "WTF_MBP.controller$Cordova_GetOperatingSystem", "WTF_MBP.controller$LogEventFacebook_MBP", "WTF_MBP.model$ParameterList", "WTF_MBP.controller$ServerAction.setActivityLogger_VISIT", "WTF_MBP.controller$GetClientInfo", "WTF_MBP.controller$Cordova_GetDeviceID", "ActivityLogger.model$ParameterRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ActivityLogger", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ActivityLoggerModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLog_Visit$Action = function (openAppIn, onResumeIn, withLoginIn, logoutIn, anonymousIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_Visit$vars"))());
vars.value.openAppInLocal = openAppIn;
vars.value.onResumeInLocal = onResumeIn;
vars.value.withLoginInLocal = withLoginIn;
vars.value.logoutInLocal = logoutIn;
vars.value.anonymousInLocal = anonymousIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setActivityLogger_VISITVar = new OS.DataTypes.VariableHolder();
var cordova_GetOperatingSystemVar = new OS.DataTypes.VariableHolder();
var logEventFacebookSDK_WTFVar = new OS.DataTypes.VariableHolder();
var getClientInfoVar = new OS.DataTypes.VariableHolder();
var cordova_GetDeviceID2Var = new OS.DataTypes.VariableHolder();
var getUserNOSInfoVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetClientInfo
return WTF_MBPController.default.getClientInfo$Action(callContext).then(function (value) {
getClientInfoVar.value = value;
}).then(function () {
// isBSCS = ToUpper <> "C"
vars.value.isBSCSVar = ((OS.BuiltinFunctions.toUpper(OS.BuiltinFunctions.substr(getClientInfoVar.value.custCode_ClientNumberOut, 0, 1))) !== ("C"));
// Aggregate: GetUserNOSInfo
var getUserNOSInfoAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getUserNOSInfoVar.value;
});
};
return getUserNOSInfoAggr();
}).then(function () {
// Execute Action: Cordova_GetOperatingSystem
cordova_GetOperatingSystemVar.value = WTF_MBPController.default.cordova_GetOperatingSystem$Action(callContext);

}).then(function () {
if((((cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.android) || (cordova_GetOperatingSystemVar.value.operatingSystemsIdOut === WTF_MBPModel.staticEntities.mobile_OperatingSystem_CommonPlugin.iOS)))) {
// OSMOBILE
// ParameterRecord.Name = "OS_MOBILE"
vars.value.parameterRecordVar.nameAttr = "OS_MOBILE";
// ParameterRecord.Value = ToUpper
vars.value.parameterRecordVar.valueAttr = OS.BuiltinFunctions.toUpper(cordova_GetOperatingSystemVar.value.operatingSystemsIdOut);
// Execute Action: OSMOBILE_ListAppend
OS.SystemActions.listAppend(vars.value.parameterListVar, vars.value.parameterRecordVar, callContext);
// Execute Action: Cordova_GetDeviceID2
cordova_GetDeviceID2Var.value = WTF_MBPController.default.cordova_GetDeviceID$Action(callContext);

// SessionID = Cordova_GetDeviceID2.DeviceHwId
vars.value.sessionIDVar = cordova_GetDeviceID2Var.value.deviceHwIdOut;
}

// Execute Action: setActivityLogger_VISIT
return controller.setActivityLogger_VISIT$ServerAction(getClientInfoVar.value.refreshTokenOut, vars.value.parameterListVar, ((vars.value.isBSCSVar) ? ("") : (getClientInfoVar.value.custCode_ClientNumberOut)), "", ((vars.value.isBSCSVar) ? (getClientInfoVar.value.custCode_ClientNumberOut) : ("")), getClientInfoVar.value.contractDNOut, getClientInfoVar.value.accountOwnerPhoneNrOut, "", getClientInfoVar.value.accountOwnerNIFOut, "", getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.usernameAttr, vars.value.logoutInLocal, vars.value.openAppInLocal, vars.value.withLoginInLocal, getUserNOSInfoVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.sessionIDVar, vars.value.anonymousInLocal, (vars.value.onResumeInLocal && !(getUserNOSInfoVar.value.listOut.isEmpty)), (vars.value.onResumeInLocal && getUserNOSInfoVar.value.listOut.isEmpty), callContext).then(function (value) {
setActivityLogger_VISITVar.value = value;
}).then(function () {
// Execute Action: LogEventFacebookSDK_WTF
logEventFacebookSDK_WTFVar.value = WTF_MBPController.default.logEventFacebook_MBP$Action("Visit", callContext);

});
});
}).catch(function (ex) {
OS.Logger.trace("ActivityLogger.setActivityLog_Visit", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ActivityLogger.setActivityLog_Visit$vars", [{
name: "OpenApp",
attrName: "openAppInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "OnResume",
attrName: "onResumeInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "WithLogin",
attrName: "withLoginInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Logout",
attrName: "logoutInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Anonymous",
attrName: "anonymousInLocal",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ParameterList",
attrName: "parameterListVar",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.ParameterList();
},
complexType: WTF_MBPModel.ParameterList
}, {
name: "ParameterRecord",
attrName: "parameterRecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ActivityLoggerModel.ParameterRec();
},
complexType: ActivityLoggerModel.ParameterRec
}, {
name: "SessionID",
attrName: "sessionIDVar",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "isBSCS",
attrName: "isBSCSVar",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setActivityLog_Visit$Action = function (openAppIn, onResumeIn, withLoginIn, logoutIn, anonymousIn) {
openAppIn = (openAppIn === undefined) ? false : openAppIn;
onResumeIn = (onResumeIn === undefined) ? false : onResumeIn;
withLoginIn = (withLoginIn === undefined) ? false : withLoginIn;
logoutIn = (logoutIn === undefined) ? false : logoutIn;
anonymousIn = (anonymousIn === undefined) ? false : anonymousIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setActivityLog_Visit$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(openAppIn, OS.Types.Boolean), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(onResumeIn, OS.Types.Boolean), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(withLoginIn, OS.Types.Boolean), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(logoutIn, OS.Types.Boolean), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(anonymousIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$SetAddOn", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ADDONS_BP.model", "WTF_MBP.controller$GetApplicationName_MBP", "ADDONS_BP.model$STR_ADDONSRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ADDONS_BP", "WTF_MBP.controller$ServerAction.SetAddon_BP", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ADDONS_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setAddOn$Action = function (associationIdIn, serviceIdIn, idIn, packageGroupIn, isActivationIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_Addons.SetAddOn$vars"))());
vars.value.associationIdInLocal = associationIdIn;
vars.value.serviceIdInLocal = serviceIdIn;
vars.value.idInLocal = idIn;
vars.value.packageGroupInLocal = packageGroupIn;
vars.value.isActivationInLocal = isActivationIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setAddon_BPVar = new OS.DataTypes.VariableHolder();
var getApplicationName_MBPVar = new OS.DataTypes.VariableHolder();
var getLocalUSERNOSINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
var getLocalACCESSTOKENINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_Addons.SetAddOn$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalUSERNOSINFOES
var getLocalUSERNOSINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
orderBySql += " ORDER BY \"ENLocal_USER_NOS_INFO\".\"Name\" ASC ";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalUSERNOSINFOESVar.value;
});
};
return getLocalUSERNOSINFOESAggr().then(function () {
// Aggregate: GetLocalACCESSTOKENINFOES
var getLocalACCESSTOKENINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_ACCESS_TOKEN_INFO\".\"Id\" o0, \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" o1, \"ENLocal_ACCESS_TOKEN_INFO\".\"Access_token\" o2, \"ENLocal_ACCESS_TOKEN_INFO\".\"IsUserRegistered\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ACCESS_TOKEN_INFO\" \"ENLocal_ACCESS_TOKEN_INFO\"";
orderBySql += " ORDER BY \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" ASC ";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ACCESS_TOKEN_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalACCESSTOKENINFOESVar.value;
});
};
return getLocalACCESSTOKENINFOESAggr();
}).then(function () {
// Execute Action: GetApplicationName_MBP
return WTF_MBPController.default.getApplicationName_MBP$Action(callContext).then(function (value) {
getApplicationName_MBPVar.value = value;
});
}).then(function () {
// Execute Action: SetAddon_BP
return controller.setAddon_BP$ServerAction(getLocalACCESSTOKENINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr, vars.value.associationIdInLocal, vars.value.serviceIdInLocal, vars.value.idInLocal, vars.value.packageGroupInLocal, getLocalUSERNOSINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, false, vars.value.isActivationInLocal, getApplicationName_MBPVar.value.valueOut, callContext).then(function (value) {
setAddon_BPVar.value = value;
});
}).then(function () {
// Success = SetAddon_BP.Success
outVars.value.successOut = setAddon_BPVar.value.successOut;
// Response = SetAddon_BP.Response
outVars.value.responseOut = setAddon_BPVar.value.responseOut;
});
}).catch(function (ex) {
OS.Logger.trace("API_Addons.SetAddOn", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_Addons.SetAddOn$vars", [{
name: "AssociationId",
attrName: "associationIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "ServiceId",
attrName: "serviceIdInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Id",
attrName: "idInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "PackageGroup",
attrName: "packageGroupInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "IsActivation",
attrName: "isActivationInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_Addons.SetAddOn$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Response",
attrName: "responseOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.setAddOn$Action = function (associationIdIn, serviceIdIn, idIn, packageGroupIn, isActivationIn) {
associationIdIn = (associationIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : associationIdIn;
serviceIdIn = (serviceIdIn === undefined) ? "" : serviceIdIn;
idIn = (idIn === undefined) ? "" : idIn;
packageGroupIn = (packageGroupIn === undefined) ? "" : packageGroupIn;
isActivationIn = (isActivationIn === undefined) ? false : isActivationIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setAddOn$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(associationIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(serviceIdIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(idIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(packageGroupIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(isActivationIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Response: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.responseOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$SetChangeRatePlanAndPreferentialInfoByContractDN", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.SetChangeRatePlanAndPreferentialInfoByContractDN", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setChangeRatePlanAndPreferentialInfoByContractDN$Action = function (pUCodeIn, amountIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_BSCS.SetChangeRatePlanAndPreferentialInfoByContractDN$vars"))());
vars.value.pUCodeInLocal = pUCodeIn;
vars.value.amountInLocal = amountIn;
var setChangeRatePlanAndPreferentialInfoByContractDNVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_BSCS.SetChangeRatePlanAndPreferentialInfoByContractDN$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: SetChangeRatePlanAndPreferentialInfoByContractDN
return controller.setChangeRatePlanAndPreferentialInfoByContractDN$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, vars.value.pUCodeInLocal, vars.value.amountInLocal, callContext).then(function (value) {
setChangeRatePlanAndPreferentialInfoByContractDNVar.value = value;
});
}).then(function () {
// Success = SetChangeRatePlanAndPreferentialInfoByContractDN.Success
outVars.value.successOut = setChangeRatePlanAndPreferentialInfoByContractDNVar.value.successOut;
// Message = SetChangeRatePlanAndPreferentialInfoByContractDN.Message
outVars.value.messageOut = setChangeRatePlanAndPreferentialInfoByContractDNVar.value.messageOut;
// withoutAmount = SetChangeRatePlanAndPreferentialInfoByContractDN.withoutAmount
outVars.value.withoutAmountOut = setChangeRatePlanAndPreferentialInfoByContractDNVar.value.withoutAmountOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_BSCS.SetChangeRatePlanAndPreferentialInfoByContractDN$vars", [{
name: "PUCode",
attrName: "pUCodeInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Amount",
attrName: "amountInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_BSCS.SetChangeRatePlanAndPreferentialInfoByContractDN$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "withoutAmount",
attrName: "withoutAmountOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setChangeRatePlanAndPreferentialInfoByContractDN$Action = function (pUCodeIn, amountIn) {
pUCodeIn = (pUCodeIn === undefined) ? "" : pUCodeIn;
amountIn = (amountIn === undefined) ? "" : amountIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setChangeRatePlanAndPreferentialInfoByContractDN$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(pUCodeIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(amountIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
withoutAmount: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.withoutAmountOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$SetInfoCardStatus", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.SetStatusInfoCards", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setInfoCardStatus$Action = function (infoCardIdentifierIn, forDeleteItemIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SetInfoCardStatus$vars"))());
vars.value.infoCardIdentifierInLocal = infoCardIdentifierIn;
vars.value.forDeleteItemInLocal = forDeleteItemIn;
var setStatusInfoCardsVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.SetInfoCardStatus$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: SetStatusInfoCards
return controller.setStatusInfoCards$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), vars.value.infoCardIdentifierInLocal, getActiveUserWTFVar.value.refreshTokenOut, vars.value.forDeleteItemInLocal, callContext).then(function (value) {
setStatusInfoCardsVar.value = value;
});
}).then(function () {
// Success = SetStatusInfoCards.Success
outVars.value.successOut = setStatusInfoCardsVar.value.successOut;
// Message = SetStatusInfoCards.Message
outVars.value.messageOut = setStatusInfoCardsVar.value.messageOut;
// AlreadyRun = SetStatusInfoCards.AlreadyRun
outVars.value.alreadyRunOut = setStatusInfoCardsVar.value.alreadyRunOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SetInfoCardStatus$vars", [{
name: "InfoCardIdentifier",
attrName: "infoCardIdentifierInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "ForDeleteItem",
attrName: "forDeleteItemInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.SetInfoCardStatus$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "AlreadyRun",
attrName: "alreadyRunOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setInfoCardStatus$Action = function (infoCardIdentifierIn, forDeleteItemIn) {
infoCardIdentifierIn = (infoCardIdentifierIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : infoCardIdentifierIn;
forDeleteItemIn = (forDeleteItemIn === undefined) ? false : forDeleteItemIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setInfoCardStatus$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(infoCardIdentifierIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(forDeleteItemIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
AlreadyRun: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.alreadyRunOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$SetMonthlyRenewalByContractDN", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_MBP.controller$ServerAction.SetMonthlyRenewalByContractDN_Public"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setMonthlyRenewalByContractDN$Action = function (callContext) {
callContext = controller.callContext(callContext);
var setMonthlyRenewalByContractDN_PublicVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_BSCS.SetMonthlyRenewalByContractDN$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: SetMonthlyRenewalByContractDN_Public
return controller.setMonthlyRenewalByContractDN_Public$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, callContext).then(function (value) {
setMonthlyRenewalByContractDN_PublicVar.value = value;
});
}).then(function () {
// Success = SetMonthlyRenewalByContractDN_Public.Success
outVars.value.successOut = setMonthlyRenewalByContractDN_PublicVar.value.successOut;
// Message = SetMonthlyRenewalByContractDN_Public.Message
outVars.value.messageOut = setMonthlyRenewalByContractDN_PublicVar.value.messageOut;
// withoutAmount = SetMonthlyRenewalByContractDN_Public.withoutAmount
outVars.value.withoutAmountOut = setMonthlyRenewalByContractDN_PublicVar.value.withoutAmountOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_BSCS.SetMonthlyRenewalByContractDN$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "withoutAmount",
attrName: "withoutAmountOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.setMonthlyRenewalByContractDN$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.setMonthlyRenewalByContractDN$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
withoutAmount: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.withoutAmountOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$SetRefill", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ADDONS_BP.model", "ADDONS_BP.model$STR_POSTREFILLS_WSRESPONSERec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ADDONS_BP", "WTF_MBP.controller$ServerAction.SetRefill_BP", "WTF_MBP.controller$GetApplicationName_MBP", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ADDONS_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setRefill$Action = function (associationIdIn, serviceIdIn, idIn, packageGroupIn, isActivationIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_Addons.SetRefill$vars"))());
vars.value.associationIdInLocal = associationIdIn;
vars.value.serviceIdInLocal = serviceIdIn;
vars.value.idInLocal = idIn;
vars.value.packageGroupInLocal = packageGroupIn;
vars.value.isActivationInLocal = isActivationIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var setRefill_BPVar = new OS.DataTypes.VariableHolder();
var getApplicationName_MBPVar = new OS.DataTypes.VariableHolder();
var getLocalUSERNOSINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
var getLocalACCESSTOKENINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_Addons.SetRefill$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalACCESSTOKENINFOES
var getLocalACCESSTOKENINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_ACCESS_TOKEN_INFO\".\"Id\" o0, \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" o1, \"ENLocal_ACCESS_TOKEN_INFO\".\"Access_token\" o2, \"ENLocal_ACCESS_TOKEN_INFO\".\"IsUserRegistered\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ACCESS_TOKEN_INFO\" \"ENLocal_ACCESS_TOKEN_INFO\"";
orderBySql += " ORDER BY \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" ASC ";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ACCESS_TOKEN_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalACCESSTOKENINFOESVar.value;
});
};
return getLocalACCESSTOKENINFOESAggr().then(function () {
// Aggregate: GetLocalUSERNOSINFOES
var getLocalUSERNOSINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
orderBySql += " ORDER BY \"ENLocal_USER_NOS_INFO\".\"Name\" ASC ";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalUSERNOSINFOESVar.value;
});
};
return getLocalUSERNOSINFOESAggr();
}).then(function () {
// Execute Action: GetApplicationName_MBP
return WTF_MBPController.default.getApplicationName_MBP$Action(callContext).then(function (value) {
getApplicationName_MBPVar.value = value;
});
}).then(function () {
// Execute Action: SetRefill_BP
return controller.setRefill_BP$ServerAction(getLocalACCESSTOKENINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr, vars.value.associationIdInLocal, vars.value.serviceIdInLocal, vars.value.idInLocal, vars.value.packageGroupInLocal, getLocalUSERNOSINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, false, vars.value.isActivationInLocal, getApplicationName_MBPVar.value.valueOut, callContext).then(function (value) {
setRefill_BPVar.value = value;
});
}).then(function () {
// Success = SetRefill_BP.Success
outVars.value.successOut = setRefill_BPVar.value.successOut;
// Response = SetRefill_BP.RefillsResponse.Error_message
outVars.value.responseOut = setRefill_BPVar.value.refillsResponseOut.error_messageAttr;
// ErrorCode = SetRefill_BP.RefillsResponse.Error_code
outVars.value.errorCodeOut = OS.BuiltinFunctions.longIntegerToText(setRefill_BPVar.value.refillsResponseOut.error_codeAttr);
});
}).catch(function (ex) {
OS.Logger.trace("API_Addons.SetRefill", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_Addons.SetRefill$vars", [{
name: "AssociationId",
attrName: "associationIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "ServiceId",
attrName: "serviceIdInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Id",
attrName: "idInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "PackageGroup",
attrName: "packageGroupInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "IsActivation",
attrName: "isActivationInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_Addons.SetRefill$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Response",
attrName: "responseOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ErrorCode",
attrName: "errorCodeOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.setRefill$Action = function (associationIdIn, serviceIdIn, idIn, packageGroupIn, isActivationIn) {
associationIdIn = (associationIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : associationIdIn;
serviceIdIn = (serviceIdIn === undefined) ? "" : serviceIdIn;
idIn = (idIn === undefined) ? "" : idIn;
packageGroupIn = (packageGroupIn === undefined) ? "" : packageGroupIn;
isActivationIn = (isActivationIn === undefined) ? false : isActivationIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setRefill$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(associationIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(serviceIdIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(idIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(packageGroupIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(isActivationIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Response: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.responseOut, OS.Types.Text, true),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.errorCodeOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$SetURL", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_LAST_PAGERecord", "WTF_MBP.controller$PagesToBlacklist", "WTF_MBP.controller$GetLayoutLevelsAppConfigs", "WTF_MBP.model$Local_LAST_PAGERec", "WTF_MBP.model$Local_LAYOUT_LEVELSRecordList", "WTF_MBP.model$Local_LAST_PAGERecordList", "WTF_MBP.model$IntegerRecordList", "WTF_MBP.model$Local_LAYOUT_LEVELSRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setURL$Action = function (uRLIn, layoutLevelIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.PageRedirection.SetURL$vars"))());
vars.value.uRLInLocal = uRLIn;
vars.value.layoutLevelIdInLocal = layoutLevelIdIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var createOrUpdateLocal_LAST_PAGEVar = new OS.DataTypes.VariableHolder();
var pagesToBlacklistVar = new OS.DataTypes.VariableHolder();
var getLayoutLevelsAppConfigsVar = new OS.DataTypes.VariableHolder();
var getLocalLAYOUTLEVEL1Var = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_LAYOUT_LEVELSRecordList))());
var getLocalLASTPAGEVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_LAST_PAGERecordList))());
var getLocalLAYOUTLEVELBlankVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_LAYOUT_LEVELSRecordList))());
var getLocalLAYOUTLEVEL3Var = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_LAYOUT_LEVELSRecordList))());
var getLocalLASTPAGESMaxStepVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.IntegerRecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.PageRedirection.SetURL$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetLayoutLevelsAppConfigs
return WTF_MBPController.default.getLayoutLevelsAppConfigs$Action(callContext).then(function (value) {
getLayoutLevelsAppConfigsVar.value = value;
}).then(function () {
// Aggregate: GetLocalLAYOUTLEVELBlank
var getLocalLAYOUTLEVELBlankAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_LAYOUT_LEVELSRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}

var qpstLevel = getLayoutLevelsAppConfigsVar.value.blankOut;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2";
} else {
selectSql += "\"ENLocal_LAYOUT_LEVELS\".\"Id\" o0, \"ENLocal_LAYOUT_LEVELS\".\"Label\" o1, \"ENLocal_LAYOUT_LEVELS\".\"Level\" o2";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_LAYOUT_LEVELS\" \"ENLocal_LAYOUT_LEVELS\"";
fromAndWhereSql += " WHERE (\"ENLocal_LAYOUT_LEVELS\".\"Level\" = :qpstLevel)";
argsList.add("qpstLevel", /*TEXT*/ 0, qpstLevel);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_LAYOUT_LEVELSRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_LAYOUT_LEVELSAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalLAYOUTLEVELBlankVar.value;
});
};
return getLocalLAYOUTLEVELBlankAggr();
}).then(function () {
// Is Layout Blank?
return OS.Flow.executeSequence(function () {
if((!(vars.value.layoutLevelIdInLocal.equals(getLocalLAYOUTLEVELBlankVar.value.listOut.getCurrent(callContext.iterationContext).local_LAYOUT_LEVELSAttr.idAttr)))) {
// Aggregate: GetLocalLAYOUTLEVEL3
var getLocalLAYOUTLEVEL3Aggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_LAYOUT_LEVELSRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}

var qpstLevel = getLayoutLevelsAppConfigsVar.value.lvl3Out;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2";
} else {
selectSql += "\"ENLocal_LAYOUT_LEVELS\".\"Id\" o0, \"ENLocal_LAYOUT_LEVELS\".\"Label\" o1, \"ENLocal_LAYOUT_LEVELS\".\"Level\" o2";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_LAYOUT_LEVELS\" \"ENLocal_LAYOUT_LEVELS\"";
fromAndWhereSql += " WHERE (\"ENLocal_LAYOUT_LEVELS\".\"Level\" = :qpstLevel)";
argsList.add("qpstLevel", /*TEXT*/ 0, qpstLevel);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_LAYOUT_LEVELSRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_LAYOUT_LEVELSAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalLAYOUTLEVEL3Var.value;
});
};
return getLocalLAYOUTLEVEL3Aggr().then(function () {
// Is Layout Lvl3?
return OS.Flow.executeSequence(function () {
if((!(vars.value.layoutLevelIdInLocal.equals(getLocalLAYOUTLEVEL3Var.value.listOut.getCurrent(callContext.iterationContext).local_LAYOUT_LEVELSAttr.idAttr)))) {
// Execute Action: PagesToBlacklist
return WTF_MBPController.default.pagesToBlacklist$Action(callContext).then(function (value) {
pagesToBlacklistVar.value = value;
}).then(function () {
// URL To Ignore?
return OS.Flow.executeSequence(function () {
if((!((((OS.BuiltinFunctions.index(pagesToBlacklistVar.value.noConnectionOut, vars.value.uRLInLocal, 0, false, false)) !== (-1)) || ((OS.BuiltinFunctions.index(pagesToBlacklistVar.value.pageUnavailableOut, vars.value.uRLInLocal, 0, false, false)) !== (-1)))))) {
// Aggregate: GetLocalLAYOUTLEVEL1
var getLocalLAYOUTLEVEL1Aggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_LAYOUT_LEVELSRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}

var qpstLevel = getLayoutLevelsAppConfigsVar.value.lvl1Out;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2";
} else {
selectSql += "\"ENLocal_LAYOUT_LEVELS\".\"Id\" o0, \"ENLocal_LAYOUT_LEVELS\".\"Label\" o1, \"ENLocal_LAYOUT_LEVELS\".\"Level\" o2";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_LAYOUT_LEVELS\" \"ENLocal_LAYOUT_LEVELS\"";
fromAndWhereSql += " WHERE (\"ENLocal_LAYOUT_LEVELS\".\"Level\" = :qpstLevel)";
argsList.add("qpstLevel", /*TEXT*/ 0, qpstLevel);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_LAYOUT_LEVELSRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_LAYOUT_LEVELSAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalLAYOUTLEVEL1Var.value;
});
};
return getLocalLAYOUTLEVEL1Aggr().then(function () {
// Is Level 1?
return OS.Flow.executeSequence(function () {
if((vars.value.layoutLevelIdInLocal.equals(getLocalLAYOUTLEVEL1Var.value.listOut.getCurrent(callContext.iterationContext).local_LAYOUT_LEVELSAttr.idAttr))) {
// Execute Action: DeleteAllLocal_LAST_PAGE
return WTF_MBPModel.entities.Local_LAST_PAGE.deleteAll(callContext);
}

});
}).then(function () {
// Aggregate: GetLocalLASTPAGESMaxStep
var getLocalLASTPAGESMaxStepAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.IntegerRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "Max(\"ENLocal_LAST_PAGE\".\"Step\") \"StepMax\"";
} else {
selectSql += "Max(\"ENLocal_LAST_PAGE\".\"Step\") \"StepMax\"";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_LAST_PAGE\" \"ENLocal_LAST_PAGE\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.IntegerRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"stepMaxAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalLASTPAGESMaxStepVar.value;
});
};
return getLocalLASTPAGESMaxStepAggr().then(function () {
// SetAttributes
// TempLocal_LAST_PAGE.URL = URL
vars.value.tempLocal_LAST_PAGEVar.uRLAttr = vars.value.uRLInLocal;
// TempLocal_LAST_PAGE.LayoutLevelID = LayoutLevelId
vars.value.tempLocal_LAST_PAGEVar.layoutLevelIDAttr = vars.value.layoutLevelIdInLocal;
// TempLocal_LAST_PAGE.Step = GetLocalLASTPAGESMaxStep.List.Current.StepMax + 1
vars.value.tempLocal_LAST_PAGEVar.stepAttr = (getLocalLASTPAGESMaxStepVar.value.listOut.getCurrent(callContext.iterationContext).stepMaxAttr + 1);
// Aggregate: GetLocalLASTPAGE
var getLocalLASTPAGEAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_LAST_PAGERecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_LAST_PAGE\".\"Id\" o0, \"ENLocal_LAST_PAGE\".\"URL\" o1, \"ENLocal_LAST_PAGE\".\"LayoutLevelID\" o2, \"ENLocal_LAST_PAGE\".\"Step\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_LAST_PAGE\" \"ENLocal_LAST_PAGE\"";
orderBySql += " ORDER BY \"ENLocal_LAST_PAGE\".\"Step\" DESC ";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_LAST_PAGERecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_LAST_PAGEAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalLASTPAGEVar.value;
});
};
return getLocalLASTPAGEAggr();
});
}).then(function () {
// Page Already Registered?
return OS.Flow.executeSequence(function () {
if((!(((vars.value.uRLInLocal === getLocalLASTPAGEVar.value.listOut.getCurrent(callContext.iterationContext).local_LAST_PAGEAttr.uRLAttr) || ((OS.BuiltinFunctions.index(getLocalLASTPAGEVar.value.listOut.getCurrent(callContext.iterationContext).local_LAST_PAGEAttr.uRLAttr, vars.value.uRLInLocal, 0, false, false)) !== (-1)))))) {
// Execute Action: CreateOrUpdateLocal_LAST_PAGE
return WTF_MBPModel.entities.Local_LAST_PAGE.createOrUpdate(WTF_MBPModel.Local_LAST_PAGERecord.fromStructure(vars.value.tempLocal_LAST_PAGEVar), callContext).then(function (value) {
createOrUpdateLocal_LAST_PAGEVar.value = value;
});
}

});
});
}

});
});
}

});
});
}

});
});
}).catch(function (ex) {
OS.Logger.trace("PageRedirection.SetURL", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.PageRedirection.SetURL$vars", [{
name: "URL",
attrName: "uRLInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "LayoutLevelId",
attrName: "layoutLevelIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "TempLocal_LAST_PAGE",
attrName: "tempLocal_LAST_PAGEVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.Local_LAST_PAGERec();
},
complexType: WTF_MBPModel.Local_LAST_PAGERec
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.PageRedirection.SetURL$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.setURL$Action = function (uRLIn, layoutLevelIdIn) {
uRLIn = (uRLIn === undefined) ? "" : uRLIn;
layoutLevelIdIn = (layoutLevelIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : layoutLevelIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.setURL$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(uRLIn, OS.Types.Text), layoutLevelIdIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$SharePrizeWithMsisdns", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_PhoneContactsList", "WTF_MBP.controller$ServerAction.SharePrizeWithMsisdns"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.sharePrizeWithMsisdns$Action = function (userWtfIdIn, refreshTokenIn, app_PhoneContactsListIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Scratch.SharePrizeWithMsisdns$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
vars.value.app_PhoneContactsListInLocal = app_PhoneContactsListIn.clone();
var sharePrizeWithMsisdnsVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Scratch.SharePrizeWithMsisdns$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: SharePrizeWithMsisdns
return controller.sharePrizeWithMsisdns$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, vars.value.app_PhoneContactsListInLocal, callContext).then(function (value) {
sharePrizeWithMsisdnsVar.value = value;
}).then(function () {
// Success = SharePrizeWithMsisdns.Success
outVars.value.successOut = sharePrizeWithMsisdnsVar.value.successOut;
// Message = SharePrizeWithMsisdns.Message
outVars.value.messageOut = sharePrizeWithMsisdnsVar.value.messageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Scratch.SharePrizeWithMsisdns$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_PhoneContactsList",
attrName: "app_PhoneContactsListInLocal",
mandatory: true,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_PhoneContactsList();
},
complexType: WTF_MBPModel.App_PhoneContactsList
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Scratch.SharePrizeWithMsisdns$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.sharePrizeWithMsisdns$Action = function (userWtfIdIn, refreshTokenIn, app_PhoneContactsListIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
app_PhoneContactsListIn = (app_PhoneContactsListIn === undefined) ? new WTF_MBPModel.App_PhoneContactsList() : app_PhoneContactsListIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.sharePrizeWithMsisdns$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text), app_PhoneContactsListIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$ShowWithoutLogin", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.ShowWithoutLogin"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.showWithoutLogin$Action = function (callContext) {
callContext = controller.callContext(callContext);
var showWithoutLoginVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.ShowWithoutLogin$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: ShowWithoutLogin
return controller.showWithoutLogin$ServerAction(callContext).then(function (value) {
showWithoutLoginVar.value = value;
}).then(function () {
// Show = ShowWithoutLogin.Show
outVars.value.showOut = showWithoutLoginVar.value.showOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.ShowWithoutLogin$outVars", [{
name: "Show",
attrName: "showOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.showWithoutLogin$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.showWithoutLogin$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Show: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.showOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$SyncLocalAll", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$SyncLocalPrizes", "WTF_MBP.controller$SyncLocalPictures"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.syncLocalAll$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: SyncLocalPictures
return WTF_MBPController.default.syncLocalPictures$Action(callContext).then(function () {
// Execute Action: SyncLocalPrizes
return WTF_MBPController.default.syncLocalPrizes$Action(callContext);
});
}).catch(function (ex) {
OS.Logger.trace("OfflineDataSync.SyncLocalAll", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.clientActionProxies.syncLocalAll$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.syncLocalAll$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$SyncLocalPictures", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_PICTURERecordList", "WTF_MBP.model$Local_PICTUREList", "WTF_MBP.controller$ServerAction.SyncPICTURES", "WTF_MBP.model$Local_PICTURERec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.syncLocalPictures$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var syncPICTURESVar = new OS.DataTypes.VariableHolder();
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: SyncPICTURES
return controller.syncPICTURES$ServerAction(callContext).then(function (value) {
syncPICTURESVar.value = value;
}).then(function () {
// Execute Action: DeleteAllLocal_PICTURE
return WTF_MBPModel.entities.Local_PICTURE.deleteAll(callContext);
}).then(function () {
// Execute Action: CreateOrUpdateAllLocal_PICTURE
return WTF_MBPModel.entities.Local_PICTURE.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(syncPICTURESVar.value.localPICTUREsOut, new WTF_MBPModel.Local_PICTURERecordList(), function (source, target) {
target = WTF_MBPModel.Local_PICTURERecord.fromStructure(source);
return target;
}), callContext);
});
}).catch(function (ex) {
OS.Logger.trace("OfflineDataSync.SyncLocalPictures", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.clientActionProxies.syncLocalPictures$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.syncLocalPictures$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$SyncLocalPrizes", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_PRIZERecordList", "WTF_MBP.model$Local_PRIZEList", "WTF_MBP.controller$ServerAction.SyncPRIZES", "WTF_MBP.model$Local_PRIZERec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.syncLocalPrizes$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var syncPRIZESVar = new OS.DataTypes.VariableHolder();
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: SyncPRIZES
return controller.syncPRIZES$ServerAction(callContext).then(function (value) {
syncPRIZESVar.value = value;
}).then(function () {
// Execute Action: DeleteAllLocal_PRIZE
return WTF_MBPModel.entities.Local_PRIZE.deleteAll(callContext);
}).then(function () {
// Execute Action: CreateOrUpdateAllLocal_PRIZE
return WTF_MBPModel.entities.Local_PRIZE.createOrUpdateAll(OS.DataTypes.JSConversions.typeConvertRecordList(syncPRIZESVar.value.local_PRIZESOut, new WTF_MBPModel.Local_PRIZERecordList(), function (source, target) {
target = WTF_MBPModel.Local_PRIZERecord.fromStructure(source);
return target;
}), callContext);
});
}).catch(function (ex) {
OS.Logger.trace("OfflineDataSync.SyncLocalPrizes", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
return OS.Flow.returnAsync();

});
}

throw ex;
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.clientActionProxies.syncLocalPrizes$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.syncLocalPrizes$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$UberIsFirstTime", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.VerifyIsFirstTimeVoucher"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.uberIsFirstTime$Action = function (userWtfIdIn, refreshTokenIn, uberTypeIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Uber.UberIsFirstTime$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
vars.value.uberTypeInLocal = uberTypeIn;
var verifyIsFirstTimeVoucherVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Uber.UberIsFirstTime$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: VerifyIsFirstTimeVoucher
return controller.verifyIsFirstTimeVoucher$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(OS.BuiltinFunctions.integerToLongInteger(vars.value.userWtfIdInLocal)), vars.value.uberTypeInLocal, vars.value.refreshTokenInLocal, callContext).then(function (value) {
verifyIsFirstTimeVoucherVar.value = value;
}).then(function () {
// Success = VerifyIsFirstTimeVoucher.Success
outVars.value.successOut = verifyIsFirstTimeVoucherVar.value.successOut;
// Message = VerifyIsFirstTimeVoucher.Message
outVars.value.messageOut = verifyIsFirstTimeVoucherVar.value.messageOut;
// Response = VerifyIsFirstTimeVoucher.Response
outVars.value.responseOut = verifyIsFirstTimeVoucherVar.value.responseOut;
// MessageEmptyRule = VerifyIsFirstTimeVoucher.MessageEmptyRule
outVars.value.messageEmptyRuleOut = verifyIsFirstTimeVoucherVar.value.messageEmptyRuleOut;
// ShowEmptyMessage = VerifyIsFirstTimeVoucher.ShowEmptyMessage
outVars.value.showEmptyMessageOut = verifyIsFirstTimeVoucherVar.value.showEmptyMessageOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Uber.UberIsFirstTime$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "UberType",
attrName: "uberTypeInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Uber.UberIsFirstTime$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Response",
attrName: "responseOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "MessageEmptyRule",
attrName: "messageEmptyRuleOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ShowEmptyMessage",
attrName: "showEmptyMessageOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.uberIsFirstTime$Action = function (userWtfIdIn, refreshTokenIn, uberTypeIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? 0 : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
uberTypeIn = (uberTypeIn === undefined) ? "" : uberTypeIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.uberIsFirstTime$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.Integer), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(uberTypeIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
Response: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.responseOut, OS.Types.Boolean, true),
MessageEmptyRule: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageEmptyRuleOut, OS.Types.Text, true),
ShowEmptyMessage: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.showEmptyMessageOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$UpdateProductMaximumAutoRefill", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.UpdateProductMaximumAutoRefill_BP", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORecordList", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.updateProductMaximumAutoRefill$Action = function (associationIdIn, mSISDNIn, refillIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_Billing.UpdateProductMaximumAutoRefill$vars"))());
vars.value.associationIdInLocal = associationIdIn;
vars.value.mSISDNInLocal = mSISDNIn;
vars.value.refillInLocal = refillIn;
var updateProductMaximumAutoRefill_BPVar = new OS.DataTypes.VariableHolder();
var getLocalACCESSTOKENINFOES2Var = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.API_Billing.UpdateProductMaximumAutoRefill$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalACCESSTOKENINFOES2
var getLocalACCESSTOKENINFOES2Aggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_ACCESS_TOKEN_INFO\".\"Id\" o0, \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" o1, \"ENLocal_ACCESS_TOKEN_INFO\".\"Access_token\" o2, \"ENLocal_ACCESS_TOKEN_INFO\".\"IsUserRegistered\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ACCESS_TOKEN_INFO\" \"ENLocal_ACCESS_TOKEN_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ACCESS_TOKEN_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalACCESSTOKENINFOES2Var.value;
});
};
return getLocalACCESSTOKENINFOES2Aggr().then(function () {
// Execute Action: UpdateProductMaximumAutoRefill_BP
return controller.updateProductMaximumAutoRefill_BP$ServerAction(getLocalACCESSTOKENINFOES2Var.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr, vars.value.associationIdInLocal, vars.value.mSISDNInLocal, vars.value.refillInLocal, callContext).then(function (value) {
updateProductMaximumAutoRefill_BPVar.value = value;
});
}).then(function () {
// Success = UpdateProductMaximumAutoRefill_BP.Success
outVars.value.successOut = updateProductMaximumAutoRefill_BPVar.value.successOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_Billing.UpdateProductMaximumAutoRefill$vars", [{
name: "AssociationId",
attrName: "associationIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "MSISDN",
attrName: "mSISDNInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Refill",
attrName: "refillInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.API_Billing.UpdateProductMaximumAutoRefill$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.updateProductMaximumAutoRefill$Action = function (associationIdIn, mSISDNIn, refillIn) {
associationIdIn = (associationIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : associationIdIn;
mSISDNIn = (mSISDNIn === undefined) ? "" : mSISDNIn;
refillIn = (refillIn === undefined) ? "" : refillIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.updateProductMaximumAutoRefill$Action.bind(controller, associationIdIn, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(mSISDNIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refillIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$UserAnswerQuiz", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "BALANCE_MBP.controller", "WTF_BP.model", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "BALANCE_MBP.controller$Balance_ClearCache", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$BALANCE_MBP", "WTF_BP.model$App_UserWtfPrizeAddressRec", "WTF_MBP.referencesHealth$WTF_BP", "WTF_BP.model$App_WalletCardRec", "WTF_MBP.controller$ServerAction.UserAnswerQuiz"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, BALANCE_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userAnswerQuiz$Action = function (quizAnswerIdIn, quizIdIn, userPlaysQuizIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Scratch.UserAnswerQuiz$vars"))());
vars.value.quizAnswerIdInLocal = quizAnswerIdIn;
vars.value.quizIdInLocal = quizIdIn;
vars.value.userPlaysQuizIdInLocal = userPlaysQuizIdIn;
var userAnswerQuizVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var balance_ClearCacheVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Scratch.UserAnswerQuiz$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: UserAnswerQuiz
return controller.userAnswerQuiz$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, vars.value.quizAnswerIdInLocal, vars.value.quizIdInLocal, vars.value.userPlaysQuizIdInLocal, callContext).then(function (value) {
userAnswerQuizVar.value = value;
});
}).then(function () {
return OS.Flow.executeSequence(function () {
if((userAnswerQuizVar.value.successOut)) {
// HasWon = UserAnswerQuiz.HasWon
outVars.value.hasWonOut = userAnswerQuizVar.value.hasWonOut;
// Success = UserAnswerQuiz.Success
outVars.value.successOut = userAnswerQuizVar.value.successOut;
// RequiredAddress = UserAnswerQuiz.RequiredAddress
outVars.value.requiredAddressOut = userAnswerQuizVar.value.requiredAddressOut;
// App_UserWtfPrizeAddress = UserAnswerQuiz.App_UserWtfPrizeAddress
outVars.value.app_UserWtfPrizeAddressOut = userAnswerQuizVar.value.app_UserWtfPrizeAddressOut;
// HasLastAddress = UserAnswerQuiz.HasLastAddress
outVars.value.hasLastAddressOut = userAnswerQuizVar.value.hasLastAddressOut;
// WalletCard = UserAnswerQuiz.WalletCard
outVars.value.walletCardOut = userAnswerQuizVar.value.walletCardOut;
return OS.Flow.executeSequence(function () {
if(((outVars.value.walletCardOut.itemTypeIdAttr === WTF_MBPModel.staticEntities.iTEM_TYPES.comunicacoesMoveis))) {
// Execute Action: Balance_ClearCache
return BALANCE_MBPController.default.balance_ClearCache$Action(callContext).then(function (value) {
balance_ClearCacheVar.value = value;
});
}

});
} else {
// Success = UserAnswerQuiz.Success
outVars.value.successOut = userAnswerQuizVar.value.successOut;
// Message = UserAnswerQuiz.Message
outVars.value.messageOut = userAnswerQuizVar.value.messageOut;
}

});
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Scratch.UserAnswerQuiz$vars", [{
name: "QuizAnswerId",
attrName: "quizAnswerIdInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "QuizId",
attrName: "quizIdInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "UserPlaysQuizId",
attrName: "userPlaysQuizIdInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Scratch.UserAnswerQuiz$outVars", [{
name: "HasWon",
attrName: "hasWonOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "RequiredAddress",
attrName: "requiredAddressOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "App_UserWtfPrizeAddress",
attrName: "app_UserWtfPrizeAddressOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_UserWtfPrizeAddressRec();
},
complexType: WTF_BPModel.App_UserWtfPrizeAddressRec
}, {
name: "HasLastAddress",
attrName: "hasLastAddressOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "WalletCard",
attrName: "walletCardOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_WalletCardRec();
},
complexType: WTF_BPModel.App_WalletCardRec
}]);
WTF_MBPController.default.clientActionProxies.userAnswerQuiz$Action = function (quizAnswerIdIn, quizIdIn, userPlaysQuizIdIn) {
quizAnswerIdIn = (quizAnswerIdIn === undefined) ? 0 : quizAnswerIdIn;
quizIdIn = (quizIdIn === undefined) ? 0 : quizIdIn;
userPlaysQuizIdIn = (userPlaysQuizIdIn === undefined) ? 0 : userPlaysQuizIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.userAnswerQuiz$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(quizAnswerIdIn, OS.Types.Integer), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(quizIdIn, OS.Types.Integer), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userPlaysQuizIdIn, OS.Types.Integer)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
HasWon: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.hasWonOut, OS.Types.Boolean, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
RequiredAddress: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.requiredAddressOut, OS.Types.Boolean, true),
App_UserWtfPrizeAddress: actionResults.app_UserWtfPrizeAddressOut,
HasLastAddress: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.hasLastAddressOut, OS.Types.Boolean, true),
WalletCard: actionResults.walletCardOut
};
});
};
});

define("WTF_MBP.controller$UserNosRecoveryMsisdnInUse_SendCodeRecovery", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_UserWtfRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.UserNosRecoveryMsisdnInUse_SendCodeRecovery", "WTF_MBP.model$Local_USER_WTFRecord", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userNosRecoveryMsisdnInUse_SendCodeRecovery$Action = function (recoveryCodeIn, msisdnIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserNosRecoveryMsisdnInUse_SendCodeRecovery$vars"))());
vars.value.recoveryCodeInLocal = recoveryCodeIn;
vars.value.msisdnInLocal = msisdnIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var userNosRecoveryMsisdnInUse_SendCodeRecoveryVar = new OS.DataTypes.VariableHolder();
var createLocal_USER_WTFVar = new OS.DataTypes.VariableHolder();
var getLocalUSERNOSINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserNosRecoveryMsisdnInUse_SendCodeRecovery$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalUSERNOSINFOES
var getLocalUSERNOSINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalUSERNOSINFOESVar.value;
});
};
return getLocalUSERNOSINFOESAggr().then(function () {
return OS.Flow.executeSequence(function () {
if((getLocalUSERNOSINFOESVar.value.listOut.isEmpty)) {
// Success = False
outVars.value.successOut = false;
// Message = "User não encontrado"
outVars.value.messageOut = "User não encontrado";
} else {
// Execute Action: UserNosRecoveryMsisdnInUse_SendCodeRecovery
return controller.userNosRecoveryMsisdnInUse_SendCodeRecovery$ServerAction(getLocalUSERNOSINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.msisdnInLocal, vars.value.recoveryCodeInLocal, callContext).then(function (value) {
userNosRecoveryMsisdnInUse_SendCodeRecoveryVar.value = value;
}).then(function () {
// Success = UserNosRecoveryMsisdnInUse_SendCodeRecovery.Success
outVars.value.successOut = userNosRecoveryMsisdnInUse_SendCodeRecoveryVar.value.successOut;
// Message = UserNosRecoveryMsisdnInUse_SendCodeRecovery.Message
outVars.value.messageOut = userNosRecoveryMsisdnInUse_SendCodeRecoveryVar.value.messageOut;
// isOwner = UserNosRecoveryMsisdnInUse_SendCodeRecovery.isOwner
outVars.value.isOwnerOut = userNosRecoveryMsisdnInUse_SendCodeRecoveryVar.value.isOwnerOut;
}).then(function () {
return OS.Flow.executeSequence(function () {
if(((userNosRecoveryMsisdnInUse_SendCodeRecoveryVar.value.isOwnerOut === true))) {
// Execute Action: DeleteAllLocal_USER_WTF
return WTF_MBPModel.entities.Local_USER_WTF.deleteAll(callContext).then(function () {
// Local_WTFUser = UserNosRecoveryMsisdnInUse_SendCodeRecovery.ReturnUserWtf
vars.value.local_WTFUserVar = OS.DataTypes.JSConversions.typeConvertRecord(userNosRecoveryMsisdnInUse_SendCodeRecoveryVar.value.returnUserWtfOut, new WTF_MBPModel.Local_USER_WTFRec(), function (source, target) {
target.idAttr = OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.integerToIdentifier(source.idAttr));
target.msisdnAttr = source.msisdnAttr;
target.codeMemberAttr = source.codeMemberAttr;
target.tmcode_labelAttr = source.tmcode_LabelAttr;
target.is_MonthlyRenewalAttr = source.is_MonthlyRenewalAttr;
return target;
});
// Execute Action: CreateLocal_USER_WTF
return WTF_MBPModel.entities.Local_USER_WTF.create(WTF_MBPModel.Local_USER_WTFRecord.fromStructure(vars.value.local_WTFUserVar), callContext).then(function (value) {
createLocal_USER_WTFVar.value = value;
});
});
}

});
});
}

});
});
}).catch(function (ex) {
OS.Logger.trace("UserWTF.UserNosRecoveryMsisdnInUse_SendCodeRecovery", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserNosRecoveryMsisdnInUse_SendCodeRecovery$vars", [{
name: "RecoveryCode",
attrName: "recoveryCodeInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Msisdn",
attrName: "msisdnInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Local_WTFUser",
attrName: "local_WTFUserVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.Local_USER_WTFRec();
},
complexType: WTF_MBPModel.Local_USER_WTFRec
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserNosRecoveryMsisdnInUse_SendCodeRecovery$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "isOwner",
attrName: "isOwnerOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.userNosRecoveryMsisdnInUse_SendCodeRecovery$Action = function (recoveryCodeIn, msisdnIn) {
recoveryCodeIn = (recoveryCodeIn === undefined) ? "" : recoveryCodeIn;
msisdnIn = (msisdnIn === undefined) ? "" : msisdnIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.userNosRecoveryMsisdnInUse_SendCodeRecovery$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(recoveryCodeIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(msisdnIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
isOwner: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.isOwnerOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$UserNosRecoveryMsisdnInUse_SendSMS", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.UserNosRecoveryMsisdnInUse_SendCodeSms", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userNosRecoveryMsisdnInUse_SendSMS$Action = function (msisdnIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserNosRecoveryMsisdnInUse_SendSMS$vars"))());
vars.value.msisdnInLocal = msisdnIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var userNosRecoveryMsisdnInUse_SendCodeSmsVar = new OS.DataTypes.VariableHolder();
var getLocalUSERNOSINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserNosRecoveryMsisdnInUse_SendSMS$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalUSERNOSINFOES
var getLocalUSERNOSINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalUSERNOSINFOESVar.value;
});
};
return getLocalUSERNOSINFOESAggr().then(function () {
return OS.Flow.executeSequence(function () {
if((getLocalUSERNOSINFOESVar.value.listOut.isEmpty)) {
// Success = False
outVars.value.successOut = false;
// Message = "User não encontrado"
outVars.value.messageOut = "User não encontrado";
} else {
// Execute Action: UserNosRecoveryMsisdnInUse_SendCodeSms
return controller.userNosRecoveryMsisdnInUse_SendCodeSms$ServerAction(getLocalUSERNOSINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, vars.value.msisdnInLocal, callContext).then(function (value) {
userNosRecoveryMsisdnInUse_SendCodeSmsVar.value = value;
}).then(function () {
// Success = UserNosRecoveryMsisdnInUse_SendCodeSms.Success
outVars.value.successOut = userNosRecoveryMsisdnInUse_SendCodeSmsVar.value.successOut;
// Message = UserNosRecoveryMsisdnInUse_SendCodeSms.Message
outVars.value.messageOut = userNosRecoveryMsisdnInUse_SendCodeSmsVar.value.messageOut;
});
}

});
});
}).catch(function (ex) {
OS.Logger.trace("UserWTF.UserNosRecoveryMsisdnInUse_SendSMS", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserNosRecoveryMsisdnInUse_SendSMS$vars", [{
name: "Msisdn",
attrName: "msisdnInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserNosRecoveryMsisdnInUse_SendSMS$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.userNosRecoveryMsisdnInUse_SendSMS$Action = function (msisdnIn) {
msisdnIn = (msisdnIn === undefined) ? "" : msisdnIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.userNosRecoveryMsisdnInUse_SendSMS$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(msisdnIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$UserToken_CreateOrUpdate_ToReview", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.controller$CreateUserWTF_UserNOSInfo", "WTF_BP.model$App_UserNosRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.UserToken_CreateOrUpdate_ToReview"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userToken_CreateOrUpdate_ToReview$Action = function (refreshTokenIn, accessTokenIn, expires_inIn, refresh_token_expires_inIn, deviceUIDIn, id_tokenIn, fromLoginWithoutRegisterIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserToken_CreateOrUpdate_ToReview$vars"))());
vars.value.refreshTokenInLocal = refreshTokenIn;
vars.value.accessTokenInLocal = accessTokenIn;
vars.value.expires_inInLocal = expires_inIn;
vars.value.refresh_token_expires_inInLocal = refresh_token_expires_inIn;
vars.value.deviceUIDInLocal = deviceUIDIn;
vars.value.id_tokenInLocal = id_tokenIn;
vars.value.fromLoginWithoutRegisterInLocal = fromLoginWithoutRegisterIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var userToken_CreateOrUpdate_ToReviewVar = new OS.DataTypes.VariableHolder();
var createUserWTF_UserNOSInfoVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserToken_CreateOrUpdate_ToReview$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: UserToken_CreateOrUpdate_ToReview
return controller.userToken_CreateOrUpdate_ToReview$ServerAction(vars.value.refreshTokenInLocal, vars.value.accessTokenInLocal, vars.value.expires_inInLocal, vars.value.refresh_token_expires_inInLocal, vars.value.deviceUIDInLocal, vars.value.id_tokenInLocal, vars.value.fromLoginWithoutRegisterInLocal, callContext).then(function (value) {
userToken_CreateOrUpdate_ToReviewVar.value = value;
}).then(function () {
// LocalUserNosInfo = UserToken_CreateOrUpdate_ToReview.App_UserNosInfo
vars.value.localUserNosInfoVar = OS.DataTypes.JSConversions.typeConvertRecord(userToken_CreateOrUpdate_ToReviewVar.value.app_UserNosInfoOut, new WTF_MBPModel.Local_USER_NOS_INFORec(), function (source, target) {
target.uidAttr = OS.BuiltinFunctions.textToIdentifier(source.userUIDAttr);
target.nameAttr = source.nameAttr;
target.birth_dateAttr = source.birthDateAttr;
target.genderAttr = source.genderAttr;
target.usernameAttr = source.usernameAttr;
target.pictureAttr = source.pictureAttr;
target.createdAtAttr = OS.BuiltinFunctions.currDateTime();
return target;
});
// Execute Action: CreateUserWTF_UserNOSInfo
return WTF_MBPController.default.createUserWTF_UserNOSInfo$Action(vars.value.localUserNosInfoVar, callContext).then(function (value) {
createUserWTF_UserNOSInfoVar.value = value;
});
}).then(function () {
// Success = UserToken_CreateOrUpdate_ToReview.Success
outVars.value.successOut = userToken_CreateOrUpdate_ToReviewVar.value.successOut;
// Message = UserToken_CreateOrUpdate_ToReview.Message
outVars.value.messageOut = userToken_CreateOrUpdate_ToReviewVar.value.messageOut;
// App_UserAssociations_Length = UserToken_CreateOrUpdate_ToReview.UserAssociationsLength
outVars.value.app_UserAssociations_LengthOut = userToken_CreateOrUpdate_ToReviewVar.value.userAssociationsLengthOut;
});
}).catch(function (ex) {
OS.Logger.trace("UserWTF.UserToken_CreateOrUpdate_ToReview", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserToken_CreateOrUpdate_ToReview$vars", [{
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "AccessToken",
attrName: "accessTokenInLocal",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Expires_in",
attrName: "expires_inInLocal",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "Refresh_token_expires_in",
attrName: "refresh_token_expires_inInLocal",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "DeviceUID",
attrName: "deviceUIDInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Id_token",
attrName: "id_tokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "FromLoginWithoutRegister",
attrName: "fromLoginWithoutRegisterInLocal",
mandatory: true,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "LocalUserNosInfo",
attrName: "localUserNosInfoVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.Local_USER_NOS_INFORec();
},
complexType: WTF_MBPModel.Local_USER_NOS_INFORec
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserToken_CreateOrUpdate_ToReview$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_UserAssociations_Length",
attrName: "app_UserAssociations_LengthOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.clientActionProxies.userToken_CreateOrUpdate_ToReview$Action = function (refreshTokenIn, accessTokenIn, expires_inIn, refresh_token_expires_inIn, deviceUIDIn, id_tokenIn, fromLoginWithoutRegisterIn) {
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
accessTokenIn = (accessTokenIn === undefined) ? "" : accessTokenIn;
expires_inIn = (expires_inIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : expires_inIn;
refresh_token_expires_inIn = (refresh_token_expires_inIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : refresh_token_expires_inIn;
deviceUIDIn = (deviceUIDIn === undefined) ? "" : deviceUIDIn;
id_tokenIn = (id_tokenIn === undefined) ? "" : id_tokenIn;
fromLoginWithoutRegisterIn = (fromLoginWithoutRegisterIn === undefined) ? false : fromLoginWithoutRegisterIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.userToken_CreateOrUpdate_ToReview$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(accessTokenIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(expires_inIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refresh_token_expires_inIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(deviceUIDIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(id_tokenIn, OS.Types.Text), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(fromLoginWithoutRegisterIn, OS.Types.Boolean)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
App_UserAssociations_Length: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.app_UserAssociations_LengthOut, OS.Types.Integer, true)
};
});
};
});

define("WTF_MBP.controller$UserWtfAcceptRegulationScratch", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$GetApplicationName_MBP", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_MBP.model$Local_SCRATCH_REGULATION_ACCEPTRecord", "WTF_MBP.controller$ServerAction.AcceptRulesScratch", "WTF_MBP.model$Local_SCRATCH_REGULATION_ACCEPTRec", "WTF_MBP.model$Local_SCRATCH_REGULATION_ACCEPTRecordList", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userWtfAcceptRegulationScratch$Action = function (callContext) {
callContext = controller.callContext(callContext);
var acceptRulesScratchVar = new OS.DataTypes.VariableHolder();
var getApplicationName_MBPVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var createLocalRegulationAcceptVar = new OS.DataTypes.VariableHolder();
var getScratchRegulationAcceptVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_SCRATCH_REGULATION_ACCEPTRecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Regulation.UserWtfAcceptRegulationScratch$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// NullUserWTFID?
return OS.Flow.executeSequence(function () {
if((getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr.equals(OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.nullIdentifier())))) {
// Success = False
outVars.value.successOut = false;
} else {
// Execute Action: GetApplicationName_MBP
return WTF_MBPController.default.getApplicationName_MBP$Action(callContext).then(function (value) {
getApplicationName_MBPVar.value = value;
}).then(function () {
// EmptyApplicationName?
return OS.Flow.executeSequence(function () {
if(((OS.BuiltinFunctions.trim(getApplicationName_MBPVar.value.valueOut) === ""))) {
// Success = False
outVars.value.successOut = false;
} else {
// Execute Action: AcceptRulesScratch
return controller.acceptRulesScratch$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, callContext).then(function (value) {
acceptRulesScratchVar.value = value;
}).then(function () {
// Aggregate: GetScratchRegulationAccept
var getScratchRegulationAcceptAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_SCRATCH_REGULATION_ACCEPTRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4";
} else {
selectSql += "\"ENLocal_SCRATCH_REGULATION_\".\"Id\" o0, \"ENLocal_SCRATCH_REGULATION_\".\"AcceptedAt\" o1, \"ENLocal_SCRATCH_REGULATION_\".\"UserWTFID\" o2, \"ENLocal_SCRATCH_REGULATION_\".\"RegulationVersionId\" o3, \"ENLocal_SCRATCH_REGULATION_\".\"DateTime\" o4";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_SCRATCH_REGULATION_ACCEPT\" \"ENLocal_SCRATCH_REGULATION_\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_SCRATCH_REGULATION_ACCEPTRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_SCRATCH_REGULATION_ACCEPTAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getScratchRegulationAcceptVar.value;
});
};
return getScratchRegulationAcceptAggr();
}).then(function () {
// SetLocalRegister
// GetScratchRegulationAccept.List.Current.Local_SCRATCH_REGULATION_ACCEPT.AcceptedAt = CurrDateTime
getScratchRegulationAcceptVar.value.listOut.getCurrent(callContext.iterationContext).local_SCRATCH_REGULATION_ACCEPTAttr.acceptedAtAttr = OS.BuiltinFunctions.currDateTime();
// GetScratchRegulationAccept.List.Current.Local_SCRATCH_REGULATION_ACCEPT.UserWTFID = GetActiveUserWTF.UserWTFActiveNow.Id
getScratchRegulationAcceptVar.value.listOut.getCurrent(callContext.iterationContext).local_SCRATCH_REGULATION_ACCEPTAttr.userWTFIDAttr = OS.BuiltinFunctions.longIntegerToText(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr);
// GetScratchRegulationAccept.List.Current.Local_SCRATCH_REGULATION_ACCEPT.RegulationVersionId = AcceptRulesScratch.RegulationVersionID
getScratchRegulationAcceptVar.value.listOut.getCurrent(callContext.iterationContext).local_SCRATCH_REGULATION_ACCEPTAttr.regulationVersionIdAttr = acceptRulesScratchVar.value.regulationVersionIDOut;
// GetScratchRegulationAccept.List.Current.Local_SCRATCH_REGULATION_ACCEPT.DateTime = CurrDateTime
getScratchRegulationAcceptVar.value.listOut.getCurrent(callContext.iterationContext).local_SCRATCH_REGULATION_ACCEPTAttr.dateTimeAttr = OS.BuiltinFunctions.currDateTime();
// Execute Action: CreateLocalRegulationAccept
return WTF_MBPModel.entities.Local_SCRATCH_REGULATION_ACCEPT.createOrUpdate(WTF_MBPModel.Local_SCRATCH_REGULATION_ACCEPTRecord.fromStructure(getScratchRegulationAcceptVar.value.listOut.getCurrent(callContext.iterationContext).local_SCRATCH_REGULATION_ACCEPTAttr), callContext).then(function (value) {
createLocalRegulationAcceptVar.value = value;
});
}).then(function () {
// SetOutput
// Success = AcceptRulesScratch.Success
outVars.value.successOut = acceptRulesScratchVar.value.successOut;
// Message = AcceptRulesScratch.Message
outVars.value.messageOut = acceptRulesScratchVar.value.messageOut;
// IsFirstTime = AcceptRulesScratch.IsFirstTime
outVars.value.isFirstTimeOut = acceptRulesScratchVar.value.isFirstTimeOut;
});
}

});
});
}

});
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Regulation.UserWtfAcceptRegulationScratch$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "IsFirstTime",
attrName: "isFirstTimeOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.userWtfAcceptRegulationScratch$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.userWtfAcceptRegulationScratch$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
IsFirstTime: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.isFirstTimeOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$UserWtfAddress_CreateOrUpdate", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_UserWtfAddressRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.UserWtfAddress_CreateOrUpdate", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userWtfAddress_CreateOrUpdate$Action = function (app_UserWtfPrizeAddressIn, userWtfAddressIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserWtfAddress_CreateOrUpdate$vars"))());
vars.value.app_UserWtfPrizeAddressInLocal = app_UserWtfPrizeAddressIn.clone();
vars.value.userWtfAddressIdInLocal = userWtfAddressIdIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var userWtfAddress_CreateOrUpdateVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserWtfAddress_CreateOrUpdate$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: UserWtfAddress_CreateOrUpdate
return controller.userWtfAddress_CreateOrUpdate$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfAddressIdInLocal), vars.value.app_UserWtfPrizeAddressInLocal, OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, callContext).then(function (value) {
userWtfAddress_CreateOrUpdateVar.value = value;
});
}).then(function () {
// Success = UserWtfAddress_CreateOrUpdate.Success
outVars.value.successOut = userWtfAddress_CreateOrUpdateVar.value.successOut;
// Message = UserWtfAddress_CreateOrUpdate.Message
outVars.value.messageOut = userWtfAddress_CreateOrUpdateVar.value.messageOut;
});
}).catch(function (ex) {
OS.Logger.trace("UserWTF.UserWtfAddress_CreateOrUpdate", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserWtfAddress_CreateOrUpdate$vars", [{
name: "App_UserWtfPrizeAddress",
attrName: "app_UserWtfPrizeAddressInLocal",
mandatory: true,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_UserWtfAddressRec();
},
complexType: WTF_BPModel.App_UserWtfAddressRec
}, {
name: "UserWtfAddressId",
attrName: "userWtfAddressIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserWtfAddress_CreateOrUpdate$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.userWtfAddress_CreateOrUpdate$Action = function (app_UserWtfPrizeAddressIn, userWtfAddressIdIn) {
app_UserWtfPrizeAddressIn = (app_UserWtfPrizeAddressIn === undefined) ? new WTF_BPModel.App_UserWtfAddressRec() : app_UserWtfPrizeAddressIn;
userWtfAddressIdIn = (userWtfAddressIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfAddressIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.userWtfAddress_CreateOrUpdate$Action.bind(controller, app_UserWtfPrizeAddressIn, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfAddressIdIn, OS.Types.LongInteger)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$UserWtfAddress_Delete", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.UserWtfAddress_Delete", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userWtfAddress_Delete$Action = function (userWtfAddressIdIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserWtfAddress_Delete$vars"))());
vars.value.userWtfAddressIdInLocal = userWtfAddressIdIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var userWtfAddress_DeleteVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserWtfAddress_Delete$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: UserWtfAddress_Delete
return controller.userWtfAddress_Delete$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfAddressIdInLocal), OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, callContext).then(function (value) {
userWtfAddress_DeleteVar.value = value;
});
}).then(function () {
// Success = UserWtfAddress_Delete.Success
outVars.value.successOut = userWtfAddress_DeleteVar.value.successOut;
// Message = UserWtfAddress_Delete.Message
outVars.value.messageOut = userWtfAddress_DeleteVar.value.messageOut;
});
}).catch(function (ex) {
OS.Logger.trace("UserWTF.UserWtfAddress_Delete", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserWtfAddress_Delete$vars", [{
name: "UserWtfAddressId",
attrName: "userWtfAddressIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserWtfAddress_Delete$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.clientActionProxies.userWtfAddress_Delete$Action = function (userWtfAddressIdIn) {
userWtfAddressIdIn = (userWtfAddressIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfAddressIdIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.userWtfAddress_Delete$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfAddressIdIn, OS.Types.LongInteger)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true)
};
});
};
});

define("WTF_MBP.controller$UserWtfAddress_GetAll", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_UserWtfAddressList", "WTF_MBP.controller$ServerAction.UserWtfAddress_GetAll"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userWtfAddress_GetAll$Action = function (userWtfIdIn, refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserWtfAddress_GetAll$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var userWtfAddress_GetAllVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserWtfAddress_GetAll$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: UserWtfAddress_GetAll
return controller.userWtfAddress_GetAll$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(OS.BuiltinFunctions.integerToLongInteger(vars.value.userWtfIdInLocal)), vars.value.refreshTokenInLocal, callContext).then(function (value) {
userWtfAddress_GetAllVar.value = value;
}).then(function () {
// Success = UserWtfAddress_GetAll.Success
outVars.value.successOut = userWtfAddress_GetAllVar.value.successOut;
// Message = UserWtfAddress_GetAll.Message
outVars.value.messageOut = userWtfAddress_GetAllVar.value.messageOut;
// App_UserWtfAddressList = UserWtfAddress_GetAll.App_UserWtfAddressList
outVars.value.app_UserWtfAddressListOut = userWtfAddress_GetAllVar.value.app_UserWtfAddressListOut;
});
}).catch(function (ex) {
OS.Logger.trace("UserWTF.UserWtfAddress_GetAll", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserWtfAddress_GetAll$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserWtfAddress_GetAll$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_UserWtfAddressList",
attrName: "app_UserWtfAddressListOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_UserWtfAddressList();
},
complexType: WTF_MBPModel.App_UserWtfAddressList
}]);
WTF_MBPController.default.clientActionProxies.userWtfAddress_GetAll$Action = function (userWtfIdIn, refreshTokenIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? 0 : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.userWtfAddress_GetAll$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.Integer), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
App_UserWtfAddressList: actionResults.app_UserWtfAddressListOut
};
});
};
});

define("WTF_MBP.controller$UserWtfAddress_GetById", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_UserWtfAddressRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.controller$ServerAction.UserWtfAddress_GetById"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userWtfAddress_GetById$Action = function (userWtfAddressIdIn, userWtfIdIn, refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserWtfAddress_GetById$vars"))());
vars.value.userWtfAddressIdInLocal = userWtfAddressIdIn;
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var userWtfAddress_GetByIdVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserWtfAddress_GetById$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: UserWtfAddress_GetById
return controller.userWtfAddress_GetById$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(OS.BuiltinFunctions.integerToLongInteger(vars.value.userWtfIdInLocal)), vars.value.refreshTokenInLocal, OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfAddressIdInLocal), callContext).then(function (value) {
userWtfAddress_GetByIdVar.value = value;
}).then(function () {
// Success = UserWtfAddress_GetById.Success
outVars.value.successOut = userWtfAddress_GetByIdVar.value.successOut;
// Message = UserWtfAddress_GetById.Message
outVars.value.messageOut = userWtfAddress_GetByIdVar.value.messageOut;
// App_UserWtfAddress = UserWtfAddress_GetById.App_UserWtfAddress
outVars.value.app_UserWtfAddressOut = userWtfAddress_GetByIdVar.value.app_UserWtfAddressOut;
});
}).catch(function (ex) {
OS.Logger.trace("UserWTF.UserWtfAddress_GetById", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserWtfAddress_GetById$vars", [{
name: "UserWtfAddressId",
attrName: "userWtfAddressIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserWtfAddress_GetById$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_UserWtfAddress",
attrName: "app_UserWtfAddressOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_UserWtfAddressRec();
},
complexType: WTF_BPModel.App_UserWtfAddressRec
}]);
WTF_MBPController.default.clientActionProxies.userWtfAddress_GetById$Action = function (userWtfAddressIdIn, userWtfIdIn, refreshTokenIn) {
userWtfAddressIdIn = (userWtfAddressIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfAddressIdIn;
userWtfIdIn = (userWtfIdIn === undefined) ? 0 : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.userWtfAddress_GetById$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfAddressIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.Integer), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
App_UserWtfAddress: actionResults.app_UserWtfAddressOut
};
});
};
});

define("WTF_MBP.controller$UserWtfAdress_GetCount", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_MBP.controller$ServerAction.UserWtfAddress_GetCount"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userWtfAdress_GetCount$Action = function (callContext) {
callContext = controller.callContext(callContext);
var userWtfAddress_GetCountVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserWtfAdress_GetCount$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: UserWtfAddress_GetCount
return controller.userWtfAddress_GetCount$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, callContext).then(function (value) {
userWtfAddress_GetCountVar.value = value;
});
}).then(function () {
// Success = UserWtfAddress_GetCount.Success
outVars.value.successOut = userWtfAddress_GetCountVar.value.successOut;
// Message = UserWtfAddress_GetCount.Message
outVars.value.messageOut = userWtfAddress_GetCountVar.value.messageOut;
// App_UserWtfAddressCount = UserWtfAddress_GetCount.App_UserWtfAddressListCount
outVars.value.app_UserWtfAddressCountOut = userWtfAddress_GetCountVar.value.app_UserWtfAddressListCountOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserWtfAdress_GetCount$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_UserWtfAddressCount",
attrName: "app_UserWtfAddressCountOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.clientActionProxies.userWtfAdress_GetCount$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.userWtfAdress_GetCount$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
App_UserWtfAddressCount: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.app_UserWtfAddressCountOut, OS.Types.Integer, true)
};
});
};
});

define("WTF_MBP.controller$UserWtfAdress_GetInInterval", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_UserWtfAddressList", "WTF_MBP.controller$ServerAction.UserWtfAdress_GetInInterval", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userWtfAdress_GetInInterval$Action = function (startOnIn, endOnIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserWtfAdress_GetInInterval$vars"))());
vars.value.startOnInLocal = startOnIn;
vars.value.endOnInLocal = endOnIn;
var userWtfAdress_GetInIntervalVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.UserWtfAdress_GetInInterval$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: UserWtfAdress_GetInInterval
return controller.userWtfAdress_GetInInterval$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, vars.value.startOnInLocal, vars.value.endOnInLocal, callContext).then(function (value) {
userWtfAdress_GetInIntervalVar.value = value;
});
}).then(function () {
// Success = UserWtfAdress_GetInInterval.Success
outVars.value.successOut = userWtfAdress_GetInIntervalVar.value.successOut;
// Message = UserWtfAdress_GetInInterval.Message
outVars.value.messageOut = userWtfAdress_GetInIntervalVar.value.messageOut;
// App_UserWtfAddressList = UserWtfAdress_GetInInterval.App_UserWtfAddressList
outVars.value.app_UserWtfAddressListOut = userWtfAdress_GetInIntervalVar.value.app_UserWtfAddressListOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserWtfAdress_GetInInterval$vars", [{
name: "StartOn",
attrName: "startOnInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "EndOn",
attrName: "endOnInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.UserWtfAdress_GetInInterval$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_UserWtfAddressList",
attrName: "app_UserWtfAddressListOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_UserWtfAddressList();
},
complexType: WTF_MBPModel.App_UserWtfAddressList
}]);
WTF_MBPController.default.clientActionProxies.userWtfAdress_GetInInterval$Action = function (startOnIn, endOnIn) {
startOnIn = (startOnIn === undefined) ? 0 : startOnIn;
endOnIn = (endOnIn === undefined) ? 0 : endOnIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.userWtfAdress_GetInInterval$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(startOnIn, OS.Types.Integer), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(endOnIn, OS.Types.Integer)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
App_UserWtfAddressList: actionResults.app_UserWtfAddressListOut
};
});
};
});

define("WTF_MBP.controller$ValidateIfUserAreBlocked", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.ValidateIfUserAreBlocked", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.validateIfUserAreBlocked$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var validateIfUserAreBlockedVar = new OS.DataTypes.VariableHolder();
var getLocalUSERNOSINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.ValidateIfUserAreBlocked$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalUSERNOSINFOES
var getLocalUSERNOSINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalUSERNOSINFOESVar.value;
});
};
return getLocalUSERNOSINFOESAggr().then(function () {
return OS.Flow.executeSequence(function () {
if((getLocalUSERNOSINFOESVar.value.listOut.isEmpty)) {
// hasBock = False
outVars.value.hasBockOut = false;
} else {
// Execute Action: ValidateIfUserAreBlocked
return controller.validateIfUserAreBlocked$ServerAction(getLocalUSERNOSINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr, callContext).then(function (value) {
validateIfUserAreBlockedVar.value = value;
}).then(function () {
// hasBock = ValidateIfUserAreBlocked.hasBlock
outVars.value.hasBockOut = validateIfUserAreBlockedVar.value.hasBlockOut;
});
}

});
});
}).catch(function (ex) {
OS.Logger.trace("UserWTF.ValidateIfUserAreBlocked", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.ValidateIfUserAreBlocked$outVars", [{
name: "hasBock",
attrName: "hasBockOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.validateIfUserAreBlocked$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.validateIfUserAreBlocked$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
hasBock: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.hasBockOut, OS.Types.Boolean, true),
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$ValidateMsisdnIsWTF", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_MBP.controller$ServerAction.ValidateMsisdnIsWTF_Public"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.validateMsisdnIsWTF$Action = function (msisdnToValidateIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.ValidateMsisdnIsWTF$vars"))());
vars.value.msisdnToValidateInLocal = msisdnToValidateIn;
var secretFriend_ValidateMsisdnVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.ValidateMsisdnIsWTF$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Execute Action: SecretFriend_ValidateMsisdn
return controller.validateMsisdnIsWTF_Public$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getActiveUserWTFVar.value.refreshTokenOut, vars.value.msisdnToValidateInLocal, callContext).then(function (value) {
secretFriend_ValidateMsisdnVar.value = value;
});
}).then(function () {
// Success = SecretFriend_ValidateMsisdn.Success
outVars.value.successOut = secretFriend_ValidateMsisdnVar.value.successOut;
// Message = SecretFriend_ValidateMsisdn.Message
outVars.value.messageOut = secretFriend_ValidateMsisdnVar.value.messageOut;
// IsWtf = SecretFriend_ValidateMsisdn.IsWtf
outVars.value.isWtfOut = secretFriend_ValidateMsisdnVar.value.isWtfOut;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.ValidateMsisdnIsWTF$vars", [{
name: "MsisdnToValidate",
attrName: "msisdnToValidateInLocal",
mandatory: true,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.ValidateMsisdnIsWTF$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "IsWtf",
attrName: "isWtfOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.validateMsisdnIsWTF$Action = function (msisdnToValidateIn) {
msisdnToValidateIn = (msisdnToValidateIn === undefined) ? 0 : msisdnToValidateIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.validateMsisdnIsWTF$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(msisdnToValidateIn, OS.Types.Integer)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
IsWtf: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.isWtfOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$VerifyHasDiamondDiaryPartToday_MBP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_DIARY_DIAMOND_PARTSRecordList", "WTF_MBP.model$Local_DIARY_DIAMOND_MOVEMENTRecordList", "WTF_MBP.model$Local_DIARY_DIAMOND_PARTSRec", "WTF_MBP.model$Local_DIARY_DIAMOND_MOVEMENTRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.verifyHasDiamondDiaryPartToday_MBP$Action = function (userWTFIDIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Diamonds.VerifyHasDiamondDiaryPartToday_MBP$vars"))());
vars.value.userWTFIDInLocal = userWTFIDIn;
var getDiaryDiamondPartsVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_DIARY_DIAMOND_PARTSRecordList))());
var getDiaryDiamondMovementsVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_DIARY_DIAMOND_MOVEMENTRecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Diamonds.VerifyHasDiamondDiaryPartToday_MBP$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetDiaryDiamondParts
var getDiaryDiamondPartsAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_DIARY_DIAMOND_PARTSRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}

var qpdaCurrDate = OS.BuiltinFunctions.currDate();
var qploUserWTFID = vars.value.userWTFIDInLocal;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_DIARY_DIAMOND_PARTS\".\"Id\" o0, \"ENLocal_DIARY_DIAMOND_PARTS\".\"Quantity\" o1, \"ENLocal_DIARY_DIAMOND_PARTS\".\"CreatedAt\" o2, \"ENLocal_DIARY_DIAMOND_PARTS\".\"UserWTFID\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_DIARY_DIAMOND_PARTS\" \"ENLocal_DIARY_DIAMOND_PARTS\"";
fromAndWhereSql += " WHERE ";
if (qploUserWTFID != 0) {
fromAndWhereSql += "((\"ENLocal_DIARY_DIAMOND_PARTS\".\"UserWTFID\" = :qploUserWTFID) AND (\"ENLocal_DIARY_DIAMOND_PARTS\".\"UserWTFID\" IS NOT NULL))";
argsList.add("qploUserWTFID", /*LONGINTEGER*/ 4, qploUserWTFID);
} else {
fromAndWhereSql += "(\"ENLocal_DIARY_DIAMOND_PARTS\".\"UserWTFID\" IS NULL)";
}
fromAndWhereSql += " AND ((CAST((JulianDay(DateTime(:qpdaCurrDate)) - JulianDay(\"ENLocal_DIARY_DIAMOND_PARTS\".\"CreatedAt\")) AS INTEGER)) = 0)";
argsList.add("qpdaCurrDate", /*DATE*/ 7, qpdaCurrDate);
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_DIARY_DIAMOND_PARTSRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_DIARY_DIAMOND_PARTSAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getDiaryDiamondPartsVar.value;
});
};
return getDiaryDiamondPartsAggr().then(function () {
// GetDiaryDiamondParts.Empty?
return OS.Flow.executeSequence(function () {
if((getDiaryDiamondPartsVar.value.listOut.isEmpty)) {
// Aggregate: GetDiaryDiamondMovements
var getDiaryDiamondMovementsAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_DIARY_DIAMOND_MOVEMENTRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 0;
}

var qploUserWTFID = vars.value.userWTFIDInLocal;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5";
} else {
selectSql += "\"ENLocal_DIARY_DIAMOND_MOVEM\".\"Id\" o0, \"ENLocal_DIARY_DIAMOND_MOVEM\".\"Quantity\" o1, \"ENLocal_DIARY_DIAMOND_MOVEM\".\"Observation\" o2, \"ENLocal_DIARY_DIAMOND_MOVEM\".\"CreatedAt\" o3, \"ENLocal_DIARY_DIAMOND_MOVEM\".\"UpdatedAt\" o4, \"ENLocal_DIARY_DIAMOND_MOVEM\".\"UserWTFID\" o5";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_DIARY_DIAMOND_MOVEMENT\" \"ENLocal_DIARY_DIAMOND_MOVEM\"";
fromAndWhereSql += " WHERE ";
if (qploUserWTFID != 0) {
fromAndWhereSql += "((\"ENLocal_DIARY_DIAMOND_MOVEM\".\"UserWTFID\" = :qploUserWTFID) AND (\"ENLocal_DIARY_DIAMOND_MOVEM\".\"UserWTFID\" IS NOT NULL))";
argsList.add("qploUserWTFID", /*LONGINTEGER*/ 4, qploUserWTFID);
} else {
fromAndWhereSql += "(\"ENLocal_DIARY_DIAMOND_MOVEM\".\"UserWTFID\" IS NULL)";
}
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_DIARY_DIAMOND_MOVEMENTRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_DIARY_DIAMOND_MOVEMENTAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getDiaryDiamondMovementsVar.value;
});
};
return getDiaryDiamondMovementsAggr().then(function () {
// SetHasPlayToday
// HasPlayToday = notGetDiaryDiamondMovements.List.Empty
outVars.value.hasPlayTodayOut = !(getDiaryDiamondMovementsVar.value.listOut.isEmpty);
});
} else {
// SetHasPlayToday
// HasPlayToday = True
outVars.value.hasPlayTodayOut = true;
}

});
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Diamonds.VerifyHasDiamondDiaryPartToday_MBP$vars", [{
name: "UserWTFID",
attrName: "userWTFIDInLocal",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Diamonds.VerifyHasDiamondDiaryPartToday_MBP$outVars", [{
name: "HasPlayToday",
attrName: "hasPlayTodayOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.verifyHasDiamondDiaryPartToday_MBP$Action = function (userWTFIDIn) {
userWTFIDIn = (userWTFIDIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWTFIDIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.verifyHasDiamondDiaryPartToday_MBP$Action.bind(controller, userWTFIDIn), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
HasPlayToday: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.hasPlayTodayOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$VerifyUserAssociationAndUpdateUserWtfActive", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.VerifyUserAssociationAndUpdateUserWtfActive", "WTF_MBP.model$Local_USER_WTFRec", "WTF_MBP.controller$GetActiveUserWTF", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORecordList", "WTF_MBP.model$Local_ACCESS_TOKEN_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.verifyUserAssociationAndUpdateUserWtfActive$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var verifyUserAssociationAndUpdateUserWtfActiveVar = new OS.DataTypes.VariableHolder();
var getActiveUserWTFVar = new OS.DataTypes.VariableHolder();
var getLocalACCESSTOKENINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.UserWTF.VerifyUserAssociationAndUpdateUserWtfActive$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: GetActiveUserWTF
return WTF_MBPController.default.getActiveUserWTF$Action(callContext).then(function (value) {
getActiveUserWTFVar.value = value;
}).then(function () {
// Aggregate: GetLocalACCESSTOKENINFOES
var getLocalACCESSTOKENINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3";
} else {
selectSql += "\"ENLocal_ACCESS_TOKEN_INFO\".\"Id\" o0, \"ENLocal_ACCESS_TOKEN_INFO\".\"Refresh_token\" o1, \"ENLocal_ACCESS_TOKEN_INFO\".\"Access_token\" o2, \"ENLocal_ACCESS_TOKEN_INFO\".\"IsUserRegistered\" o3";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_ACCESS_TOKEN_INFO\" \"ENLocal_ACCESS_TOKEN_INFO\"";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_ACCESS_TOKEN_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_ACCESS_TOKEN_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalACCESSTOKENINFOESVar.value;
});
};
return getLocalACCESSTOKENINFOESAggr();
}).then(function () {
return OS.Flow.executeSequence(function () {
if((getLocalACCESSTOKENINFOESVar.value.listOut.isEmpty)) {
// Success = False
outVars.value.successOut = false;
// Message = "Sessão inválida"
outVars.value.messageOut = "Sessão inválida";
} else {
// Execute Action: VerifyUserAssociationAndUpdateUserWtfActive
return controller.verifyUserAssociationAndUpdateUserWtfActive$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(getActiveUserWTFVar.value.userWTFActiveNowOut.idAttr), getLocalACCESSTOKENINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_ACCESS_TOKEN_INFOAttr.refresh_tokenAttr, callContext).then(function (value) {
verifyUserAssociationAndUpdateUserWtfActiveVar.value = value;
}).then(function () {
if((verifyUserAssociationAndUpdateUserWtfActiveVar.value.successOut)) {
// Success = True
outVars.value.successOut = true;
// ReturnIsActiveUser = VerifyUserAssociationAndUpdateUserWtfActive.ReturnIsActiveUser
outVars.value.returnIsActiveUserOut = verifyUserAssociationAndUpdateUserWtfActiveVar.value.returnIsActiveUserOut;
return OS.Flow.returnAsync(outVars.value);

} else {
// Success = VerifyUserAssociationAndUpdateUserWtfActive.Success
outVars.value.successOut = verifyUserAssociationAndUpdateUserWtfActiveVar.value.successOut;
// Message = VerifyUserAssociationAndUpdateUserWtfActive.Message
outVars.value.messageOut = verifyUserAssociationAndUpdateUserWtfActiveVar.value.messageOut;
}

});
}

});
}).then(function () {
// Execute Action: DeleteAllLocal_USER_WTF
return WTF_MBPModel.entities.Local_USER_WTF.deleteAll(callContext);
});
}).catch(function (ex) {
OS.Logger.trace("UserWTF.VerifyUserAssociationAndUpdateUserWtfActive", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.UserWTF.VerifyUserAssociationAndUpdateUserWtfActive$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ReturnIsActiveUser",
attrName: "returnIsActiveUserOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
WTF_MBPController.default.clientActionProxies.verifyUserAssociationAndUpdateUserWtfActive$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.verifyUserAssociationAndUpdateUserWtfActive$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
ReturnIsActiveUser: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.returnIsActiveUserOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$VerifyWelcomePrizeAndSecretFriendAndInfoCards", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_SecretFriendRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.model$App_InfoCardsList", "WTF_MBP.controller$ServerAction.VerifyWelcomePrizeAndSecretFriendAndInfoCards", "WTF_MBP.model$Local_INFOCARDSList", "WTF_MBP.controller$CreateOrUpdateAllLocal_INFO_CARDS_logic", "WTF_MBP.model$App_InfoCardsMBPList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.verifyWelcomePrizeAndSecretFriendAndInfoCards$Action = function (userWtfIdIn, refreshTokenIn, callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Prizes.VerifyWelcomePrizeAndSecretFriendAndInfoCards$vars"))());
vars.value.userWtfIdInLocal = userWtfIdIn;
vars.value.refreshTokenInLocal = refreshTokenIn;
var verifyWelcomePrizeAndSecretFriendAndInfoCardsVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Prizes.VerifyWelcomePrizeAndSecretFriendAndInfoCards$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: VerifyWelcomePrizeAndSecretFriendAndInfoCards
return controller.verifyWelcomePrizeAndSecretFriendAndInfoCards$ServerAction(OS.BuiltinFunctions.longIntegerToIdentifier(vars.value.userWtfIdInLocal), vars.value.refreshTokenInLocal, callContext).then(function (value) {
verifyWelcomePrizeAndSecretFriendAndInfoCardsVar.value = value;
}).then(function () {
// Success = VerifyWelcomePrizeAndSecretFriendAndInfoCards.Success
outVars.value.successOut = verifyWelcomePrizeAndSecretFriendAndInfoCardsVar.value.successOut;
// Message = VerifyWelcomePrizeAndSecretFriendAndInfoCards.Message
outVars.value.messageOut = verifyWelcomePrizeAndSecretFriendAndInfoCardsVar.value.messageOut;
// HasPrize = VerifyWelcomePrizeAndSecretFriendAndInfoCards.HasPrize
outVars.value.hasPrizeOut = verifyWelcomePrizeAndSecretFriendAndInfoCardsVar.value.hasPrizeOut;
// AppWelcomePrizeIdentifier = VerifyWelcomePrizeAndSecretFriendAndInfoCards.AppWelcomePrizeIdentifier
outVars.value.appWelcomePrizeIdentifierOut = verifyWelcomePrizeAndSecretFriendAndInfoCardsVar.value.appWelcomePrizeIdentifierOut;
// FriendSecretActive = VerifyWelcomePrizeAndSecretFriendAndInfoCards.FriendSecretActive
outVars.value.friendSecretActiveOut = verifyWelcomePrizeAndSecretFriendAndInfoCardsVar.value.friendSecretActiveOut;
// ZonaWelcomeOfferId = VerifyWelcomePrizeAndSecretFriendAndInfoCards.ZonaWelcomeOfferId
outVars.value.zonaWelcomeOfferIdOut = verifyWelcomePrizeAndSecretFriendAndInfoCardsVar.value.zonaWelcomeOfferIdOut;
// InfoCardsList = VerifyWelcomePrizeAndSecretFriendAndInfoCards.InfoCardsList
outVars.value.infoCardsListOut = OS.DataTypes.JSConversions.typeConvertRecordList(verifyWelcomePrizeAndSecretFriendAndInfoCardsVar.value.infoCardsListOut, new WTF_MBPModel.App_InfoCardsMBPList(), function (source, target) {
target.identifierAttr = source.identifierAttr;
target.titleCardAttr = source.titleCardAttr;
target.descCardAttr = source.descCardAttr;
target.titleHeaderPageAttr = source.titleHeaderPageAttr;
target.hasDetailAttr = source.hasDetailAttr;
target.hasActionAttr = source.hasActionAttr;
target.hasReadAttr = source.hasReadAttr;
target.btnActionExternalLinkAttr = source.btnActionExternalLinkAttr;
target.btnActionInAppAttr = source.btnActionInAppAttr;
target.btnActionUrlAttr = source.btnActionUrlAttr;
target.hasDeleteActionAttr = source.hasDeleteActionAttr;
target.hasDeleteActionAfterReadAttr = source.hasDeleteActionAfterReadAttr;
return target;
});
}).then(function () {
return OS.Flow.executeSequence(function () {
if(((outVars.value.successOut && !(outVars.value.infoCardsListOut.isEmpty)))) {
// Execute Action: CreateOrUpdateAllLocal_INFO_CARDS_logic
return WTF_MBPController.default.createOrUpdateAllLocal_INFO_CARDS_logic$Action(OS.DataTypes.JSConversions.typeConvertRecordList(verifyWelcomePrizeAndSecretFriendAndInfoCardsVar.value.infoCardsListOut, new WTF_MBPModel.Local_INFOCARDSList(), function (source, target) {
target.idAttr = OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.nullIdentifier());
target.identifierAttr = source.identifierAttr;
target.hasReadAttr = source.hasReadAttr;
target.titleCardAttr = source.titleCardAttr;
target.descCardAttr = source.descCardAttr;
target.titleHeaderPageAttr = source.titleHeaderPageAttr;
target.content_TypeAttr = source.content_TypeAttr;
target.content_BinaryAttr = source.content_BinaryAttr;
target.hasDetailAttr = source.hasDetailAttr;
target.titleDetailAttr = source.titleDetailAttr;
target.subtitleDetailAttr = source.subtitleDetailAttr;
target.bodyDetailAttr = source.bodyDetailAttr;
target.hasActionAttr = source.hasActionAttr;
target.btnActionExternalLinkAttr = source.btnActionExternalLinkAttr;
target.btnActionLabelAttr = source.btnActionLabelAttr;
target.btnActionInAppAttr = source.btnActionInAppAttr;
target.btnActionUrlAttr = source.btnActionUrlAttr;
target.hasDeleteActionAttr = source.hasDeleteActionAttr;
target.hasDeleteActionAfterReadAttr = source.hasDeleteActionAfterReadAttr;
return target;
}), callContext);
}

});
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Prizes.VerifyWelcomePrizeAndSecretFriendAndInfoCards$vars", [{
name: "UserWtfId",
attrName: "userWtfIdInLocal",
mandatory: true,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "RefreshToken",
attrName: "refreshTokenInLocal",
mandatory: true,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Prizes.VerifyWelcomePrizeAndSecretFriendAndInfoCards$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "HasPrize",
attrName: "hasPrizeOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "FriendSecretActive",
attrName: "friendSecretActiveOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_SecretFriendRec();
},
complexType: WTF_BPModel.App_SecretFriendRec
}, {
name: "AppWelcomePrizeIdentifier",
attrName: "appWelcomePrizeIdentifierOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "ZonaWelcomeOfferId",
attrName: "zonaWelcomeOfferIdOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.BuiltinFunctions.integerToLongInteger(0);
}
}, {
name: "InfoCardsList",
attrName: "infoCardsListOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_InfoCardsMBPList();
},
complexType: WTF_MBPModel.App_InfoCardsMBPList
}]);
WTF_MBPController.default.clientActionProxies.verifyWelcomePrizeAndSecretFriendAndInfoCards$Action = function (userWtfIdIn, refreshTokenIn) {
userWtfIdIn = (userWtfIdIn === undefined) ? OS.DataTypes.LongInteger.defaultValue : userWtfIdIn;
refreshTokenIn = (refreshTokenIn === undefined) ? "" : refreshTokenIn;
return controller.executeActionInsideJSNode(WTF_MBPController.default.verifyWelcomePrizeAndSecretFriendAndInfoCards$Action.bind(controller, OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(userWtfIdIn, OS.Types.LongInteger), OS.DataTypes.JSNodeConversions.jsNodeOutputToBasicType(refreshTokenIn, OS.Types.Text)), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true),
Message: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.messageOut, OS.Types.Text, true),
HasPrize: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.hasPrizeOut, OS.Types.Boolean, true),
FriendSecretActive: actionResults.friendSecretActiveOut,
AppWelcomePrizeIdentifier: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.appWelcomePrizeIdentifierOut, OS.Types.LongInteger, true),
ZonaWelcomeOfferId: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.zonaWelcomeOfferIdOut, OS.Types.LongInteger, true),
InfoCardsList: actionResults.infoCardsListOut
};
});
};
});

define("WTF_MBP.controller$Wallet_ClearCache", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$Cache_DisableByService", "WTF_MBP.model$STR_CACHE_SERVICERec", "WTF_MBP.controller$GetCacheServiceID"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.wallet_ClearCache$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var cache_DisableByServiceWalletItemVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Cache_Control.Wallet_ClearCache$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: Cache_DisableByServiceWalletItem
return WTF_MBPController.default.cache_DisableByService$Action(WTF_MBPController.default.getCacheServiceID$Action(callContext.withoutIterationContext()).cacheServicesOut.walletItemsAttr, callContext).then(function (value) {
cache_DisableByServiceWalletItemVar.value = value;
});
}).catch(function (ex) {
OS.Logger.trace("Cache_Control.Wallet_ClearCache", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// SetOutput
// Success = False
outVars.value.successOut = false;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Cache_Control.Wallet_ClearCache$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.wallet_ClearCache$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.wallet_ClearCache$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$WalletClearCache", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$Cache_DisableByService", "WTF_MBP.model$STR_CACHE_SERVICERec", "WTF_MBP.controller$GetCacheServiceID", "WTF_MBP.model$Local_WALLET_ITEMRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.walletClearCache$Action = function (callContext) {
callContext = controller.callContext(callContext);
var cache_DisableByServiceVar = new OS.DataTypes.VariableHolder();
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.Wallet.WalletClearCache$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: Cache_DisableByService
return WTF_MBPController.default.cache_DisableByService$Action(WTF_MBPController.default.getCacheServiceID$Action(callContext.withoutIterationContext()).cacheServicesOut.walletItemsAttr, callContext).then(function (value) {
cache_DisableByServiceVar.value = value;
}).then(function () {
// Execute Action: DeleteAllWalletItems
return WTF_MBPModel.entities.Local_WALLET_ITEM.deleteAll(callContext);
}).then(function () {
// Success = True
outVars.value.successOut = true;
});
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.Wallet.WalletClearCache$outVars", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.walletClearCache$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.walletClearCache$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
Success: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.successOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$WhatsNew_CheckUser", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.WhatsNew_GetActive_BP", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_WHATSNEW_USER_CONTROLRecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.model$Local_WHATSNEW_USER_CONTROLRec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.whatsNew_CheckUser$Action = function (callContext) {
callContext = controller.callContext(callContext);
var allExceptionsVar = new OS.DataTypes.VariableHolder(new OS.DataTypes.ErrorHandlerOutputType());
var whatsNew_GetActive_BPVar = new OS.DataTypes.VariableHolder();
var getLocalUSERNOSINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
var getLocalWHATSNEWUSERSByLatestWhatsNewVisitIdVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_WHATSNEW_USER_CONTROLRecordList))());
var outVars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.WhatsNew.WhatsNew_CheckUser$outVars"))());
return OS.Flow.executeAsyncFlow(function () {
// Execute Action: WhatsNew_GetActive_BP
return controller.whatsNew_GetActive_BP$ServerAction(callContext).then(function (value) {
whatsNew_GetActive_BPVar.value = value;
}).then(function () {
return OS.Flow.executeSequence(function () {
if((whatsNew_GetActive_BPVar.value.activeWhatsNewIdOut.equals(OS.BuiltinFunctions.integerToLongInteger(OS.BuiltinFunctions.nullIdentifier())))) {
// IsSkip = True
outVars.value.isSkipOut = true;
} else {
// Aggregate: GetLocalUSERNOSINFOES
var getLocalUSERNOSINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
orderBySql += " ORDER BY \"ENLocal_USER_NOS_INFO\".\"Name\" ASC ";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalUSERNOSINFOESVar.value;
});
};
return getLocalUSERNOSINFOESAggr().then(function () {
// Aggregate: GetLocalWHATSNEWUSERSByLatestWhatsNewVisitId
var getLocalWHATSNEWUSERSByLatestWhatsNewVisitIdAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_WHATSNEW_USER_CONTROLRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}

var qpstUser_NOS_Id = getLocalUSERNOSINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr;
var qploLatestWhatsNewVisitId = whatsNew_GetActive_BPVar.value.activeWhatsNewIdOut;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2";
} else {
selectSql += "\"ENLocal_WHATSNEW_USER_CONTR\".\"Id\" o0, \"ENLocal_WHATSNEW_USER_CONTR\".\"User_NOS_Id\" o1, \"ENLocal_WHATSNEW_USER_CONTR\".\"LatestWhatsNewVisitId\" o2";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_WHATSNEW_USER_CONTROL\" \"ENLocal_WHATSNEW_USER_CONTR\"";
fromAndWhereSql += " WHERE ";
if (qploLatestWhatsNewVisitId != 0) {
fromAndWhereSql += "(((\"ENLocal_WHATSNEW_USER_CONTR\".\"LatestWhatsNewVisitId\") = :qploLatestWhatsNewVisitId) AND ((\"ENLocal_WHATSNEW_USER_CONTR\".\"LatestWhatsNewVisitId\") IS NOT NULL))";
argsList.add("qploLatestWhatsNewVisitId", /*LONGINTEGER*/ 4, qploLatestWhatsNewVisitId);
} else {
fromAndWhereSql += "((\"ENLocal_WHATSNEW_USER_CONTR\".\"LatestWhatsNewVisitId\") IS NULL)";
}
fromAndWhereSql += " AND ";
if (((qpstUser_NOS_Id.trim()) !== (""))) {
fromAndWhereSql += "((\"ENLocal_WHATSNEW_USER_CONTR\".\"User_NOS_Id\" = :qpstUser_NOS_Id) AND (\"ENLocal_WHATSNEW_USER_CONTR\".\"User_NOS_Id\" IS NOT NULL))";
argsList.add("qpstUser_NOS_Id", /*TEXT*/ 0, qpstUser_NOS_Id);
} else {
fromAndWhereSql += "(\"ENLocal_WHATSNEW_USER_CONTR\".\"User_NOS_Id\" IS NULL)";
}
orderBySql += " ORDER BY \"ENLocal_WHATSNEW_USER_CONTR\".\"User_NOS_Id\" ASC ";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_WHATSNEW_USER_CONTROLRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_WHATSNEW_USER_CONTROLAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalWHATSNEWUSERSByLatestWhatsNewVisitIdVar.value;
});
};
return getLocalWHATSNEWUSERSByLatestWhatsNewVisitIdAggr();
}).then(function () {
// IsSkip = notGetLocalWHATSNEWUSERSByLatestWhatsNewVisitId.List.Empty
outVars.value.isSkipOut = !(getLocalWHATSNEWUSERSByLatestWhatsNewVisitIdVar.value.listOut.isEmpty);
});
}

});
});
}).catch(function (ex) {
OS.Logger.trace("WhatsNew.WhatsNew_CheckUser", OS.Exceptions.getMessage(ex), ex.name);
// Handle Error: AllExceptions
if(!(OS.Exceptions.isSystem(ex))) {
OS.Logger.error(null, ex);
allExceptionsVar.value.exceptionMessageAttr = OS.Exceptions.getMessage(ex);
return OS.Flow.executeAsyncFlow(function () {
// IsSkip = True
outVars.value.isSkipOut = true;
return OS.Flow.returnAsync(outVars.value);

});
}

throw ex;
}).then(function () {
return outVars.value;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.WhatsNew.WhatsNew_CheckUser$outVars", [{
name: "IsSkip",
attrName: "isSkipOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
WTF_MBPController.default.clientActionProxies.whatsNew_CheckUser$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.whatsNew_CheckUser$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {
IsSkip: OS.DataTypes.JSConversions.basicTypeToJS(actionResults.isSkipOut, OS.Types.Boolean, true)
};
});
};
});

define("WTF_MBP.controller$WhatsNew_CreateOrUpdate_UserControl", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.controller$ServerAction.WhatsNew_GetActive_BP", "WTF_MBP.model$Local_WHATSNEW_USER_CONTROLRecord", "WTF_MBP.model$Local_WHATSNEW_USER_CONTROLRec", "WTF_MBP.model$Local_USER_NOS_INFORecordList", "WTF_MBP.model$Local_WHATSNEW_USER_CONTROLRecordList", "WTF_MBP.model$Local_USER_NOS_INFORec", "WTF_MBP.entities"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.whatsNew_CreateOrUpdate_UserControl$Action = function (callContext) {
callContext = controller.callContext(callContext);
var vars = new OS.DataTypes.VariableHolder(new (controller.constructor.getVariableGroupType("WTF_MBP.WhatsNew.WhatsNew_CreateOrUpdate_UserControl$vars"))());
var whatsNew_GetActive_BPVar = new OS.DataTypes.VariableHolder();
var createOrUpdateLocal_WHATSNEW_USER_CONTROLVar = new OS.DataTypes.VariableHolder();
var getLocalUSERNOSINFOESVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_USER_NOS_INFORecordList))());
var getLocalWHATSNEWUSERCONTROLSByUserIDVar = new OS.DataTypes.VariableHolder(new (OS.Controller.BaseController.getAggregateOutputType(WTF_MBPModel.Local_WHATSNEW_USER_CONTROLRecordList))());
return OS.Flow.executeAsyncFlow(function () {
// Aggregate: GetLocalUSERNOSINFOES
var getLocalUSERNOSINFOESAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_USER_NOS_INFORecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}


var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6";
} else {
selectSql += "\"ENLocal_USER_NOS_INFO\".\"Uid\" o0, \"ENLocal_USER_NOS_INFO\".\"Name\" o1, \"ENLocal_USER_NOS_INFO\".\"Birth_date\" o2, \"ENLocal_USER_NOS_INFO\".\"Gender\" o3, \"ENLocal_USER_NOS_INFO\".\"Username\" o4, \"ENLocal_USER_NOS_INFO\".\"Picture\" o5, \"ENLocal_USER_NOS_INFO\".\"CreatedAt\" o6";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_USER_NOS_INFO\" \"ENLocal_USER_NOS_INFO\"";
orderBySql += " ORDER BY \"ENLocal_USER_NOS_INFO\".\"Name\" ASC ";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_USER_NOS_INFORecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_USER_NOS_INFOAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalUSERNOSINFOESVar.value;
});
};
return getLocalUSERNOSINFOESAggr().then(function () {
// Execute Action: WhatsNew_GetActive_BP
return controller.whatsNew_GetActive_BP$ServerAction(callContext).then(function (value) {
whatsNew_GetActive_BPVar.value = value;
});
}).then(function () {
// Aggregate: GetLocalWHATSNEWUSERCONTROLSByUserID
var getLocalWHATSNEWUSERCONTROLSByUserIDAggr = function (maxRecords) {
var executeQuery = function () {
var targetListType = WTF_MBPModel.Local_WHATSNEW_USER_CONTROLRecordList;
var result = {
list: null,
count: OS.DataTypes.LongInteger.defaultValue
};
var countArgsList = new OS.Entities.QueryArgumentsList();
if(!(maxRecords)) {
maxRecords = 1;
}

var qpstUserId = getLocalUSERNOSINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr;

var optimizeSelect = false;
var selectSql = "";
var fromAndWhereSql = "";
var groupByAndHavingSql = "";
var orderBySql = "";
var argsList = new OS.Entities.QueryArgumentsList();

selectSql += "SELECT ";
if (optimizeSelect) {
selectSql += "NULL o0, NULL o1, NULL o2";
} else {
selectSql += "\"ENLocal_WHATSNEW_USER_CONTR\".\"Id\" o0, \"ENLocal_WHATSNEW_USER_CONTR\".\"User_NOS_Id\" o1, \"ENLocal_WHATSNEW_USER_CONTR\".\"LatestWhatsNewVisitId\" o2";
}
fromAndWhereSql += " FROM \"MAIN\".\"OSUSR_p9g_Local_WHATSNEW_USER_CONTROL\" \"ENLocal_WHATSNEW_USER_CONTR\"";
fromAndWhereSql += " WHERE ";
if (((qpstUserId.trim()) !== (""))) {
fromAndWhereSql += "((\"ENLocal_WHATSNEW_USER_CONTR\".\"User_NOS_Id\" = :qpstUserId) AND (\"ENLocal_WHATSNEW_USER_CONTR\".\"User_NOS_Id\" IS NOT NULL))";
argsList.add("qpstUserId", /*TEXT*/ 0, qpstUserId);
} else {
fromAndWhereSql += "(\"ENLocal_WHATSNEW_USER_CONTR\".\"User_NOS_Id\" IS NULL)";
}
orderBySql += " ORDER BY \"ENLocal_WHATSNEW_USER_CONTR\".\"User_NOS_Id\" ASC ";
if (maxRecords > 0) {
orderBySql += " LIMIT ";
orderBySql += maxRecords;
}
var sql = selectSql + fromAndWhereSql + groupByAndHavingSql + orderBySql;

return OS.Entities.webSQLStorageInstance.executeQuery(sql, WTF_MBPModel.Local_WHATSNEW_USER_CONTROLRecordList, function (rec, r) {
var indexRef = {
value: 0
};
var attrOrder = [
"local_WHATSNEW_USER_CONTROLAttr",
];
return targetListType.RecordType.fromLocalStorage(r, indexRef, attrOrder);

}, argsList).then(function (resultList) {
result.list = resultList;
}).then(function () {
}).then(function () {
return result;
});
};
return controller.executeClientAggregate(executeQuery, function () {
return getLocalWHATSNEWUSERCONTROLSByUserIDVar.value;
});
};
return getLocalWHATSNEWUSERCONTROLSByUserIDAggr();
}).then(function () {
// Empty?
if((getLocalWHATSNEWUSERCONTROLSByUserIDVar.value.listOut.isEmpty)) {
// WHATSNEW_USER_CONTROL_Record.User_NOS_Id = GetLocalUSERNOSINFOES.List.Current.Local_USER_NOS_INFO.Uid
vars.value.wHATSNEW_USER_CONTROL_RecordVar.user_NOS_IdAttr = getLocalUSERNOSINFOESVar.value.listOut.getCurrent(callContext.iterationContext).local_USER_NOS_INFOAttr.uidAttr;
// WHATSNEW_USER_CONTROL_Record.LatestWhatsNewVisitId = WhatsNew_GetActive_BP.ActiveWhatsNewId
vars.value.wHATSNEW_USER_CONTROL_RecordVar.latestWhatsNewVisitIdAttr = whatsNew_GetActive_BPVar.value.activeWhatsNewIdOut;
} else {
// WHATSNEW_USER_CONTROL_Record.Id = GetLocalWHATSNEWUSERCONTROLSByUserID.List.Current.Local_WHATSNEW_USER_CONTROL.Id
vars.value.wHATSNEW_USER_CONTROL_RecordVar.idAttr = getLocalWHATSNEWUSERCONTROLSByUserIDVar.value.listOut.getCurrent(callContext.iterationContext).local_WHATSNEW_USER_CONTROLAttr.idAttr;
// WHATSNEW_USER_CONTROL_Record.User_NOS_Id = GetLocalWHATSNEWUSERCONTROLSByUserID.List.Current.Local_WHATSNEW_USER_CONTROL.User_NOS_Id
vars.value.wHATSNEW_USER_CONTROL_RecordVar.user_NOS_IdAttr = getLocalWHATSNEWUSERCONTROLSByUserIDVar.value.listOut.getCurrent(callContext.iterationContext).local_WHATSNEW_USER_CONTROLAttr.user_NOS_IdAttr;
// WHATSNEW_USER_CONTROL_Record.LatestWhatsNewVisitId = WhatsNew_GetActive_BP.ActiveWhatsNewId
vars.value.wHATSNEW_USER_CONTROL_RecordVar.latestWhatsNewVisitIdAttr = whatsNew_GetActive_BPVar.value.activeWhatsNewIdOut;
}

// Execute Action: CreateOrUpdateLocal_WHATSNEW_USER_CONTROL
return WTF_MBPModel.entities.Local_WHATSNEW_USER_CONTROL.createOrUpdate(WTF_MBPModel.Local_WHATSNEW_USER_CONTROLRecord.fromStructure(vars.value.wHATSNEW_USER_CONTROL_RecordVar), callContext).then(function (value) {
createOrUpdateLocal_WHATSNEW_USER_CONTROLVar.value = value;
});
});
}).then(function () {
return ;
});
};
var controller = WTF_MBPController.default;
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP.WhatsNew.WhatsNew_CreateOrUpdate_UserControl$vars", [{
name: "WHATSNEW_USER_CONTROL_Record",
attrName: "wHATSNEW_USER_CONTROL_RecordVar",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_MBPModel.Local_WHATSNEW_USER_CONTROLRec();
},
complexType: WTF_MBPModel.Local_WHATSNEW_USER_CONTROLRec
}]);
WTF_MBPController.default.clientActionProxies.whatsNew_CreateOrUpdate_UserControl$Action = function () {
return controller.executeActionInsideJSNode(WTF_MBPController.default.whatsNew_CreateOrUpdate_UserControl$Action.bind(controller), OS.Controller.BaseViewController.activeScreen ? OS.Controller.BaseViewController.activeScreen.callContext() : undefined, function (actionResults) {
return {};
});
};
});

define("WTF_MBP.controller$ServerAction.AcceptRulesScratch", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.acceptRulesScratch$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("AcceptRulesScratch", "screenservices/WTF_MBP/ActionAcceptRulesScratch", "hBjCz2T4Jh2RNVH2OCPg2A", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionAcceptRulesScratch"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.isFirstTimeOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.IsFirstTime, OS.Types.Boolean);
executeServerActionResult.regulationVersionIDOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.RegulationVersionID, OS.Types.LongInteger);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionAcceptRulesScratch", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "IsFirstTime",
attrName: "isFirstTimeOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "RegulationVersionID",
attrName: "regulationVersionIDOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}]);
});
define("WTF_MBP.controller$ServerAction.AccessTokenPassword", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "Mobile_LoginNOS.model", "Mobile_LoginNOS.model$AccessTokenCodeRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$Mobile_LoginNOS"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, Mobile_LoginNOSModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.accessTokenPassword$ServerAction = function (usernameIn, passwordIn, currentOSIn, deviceUIDIn, callContext) {
var controller = this.controller;
var inputs = {
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
Password: OS.DataTypes.JSConversions.basicTypeToJS(passwordIn, OS.Types.Text),
CurrentOS: OS.DataTypes.JSConversions.basicTypeToJS(currentOSIn, OS.Types.Text),
DeviceUID: OS.DataTypes.JSConversions.basicTypeToJS(deviceUIDIn, OS.Types.Text)
};
return controller.callServerAction("AccessTokenPassword", "screenservices/WTF_MBP/ActionAccessTokenPassword", "64YqhEgjKWf2Q7HF5r5xdQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionAccessTokenPassword"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.accessTokenInfoOut = Mobile_LoginNOSModel.AccessTokenCodeRec.fromJS(outputs.AccessTokenInfo);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionAccessTokenPassword", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "AccessTokenInfo",
attrName: "accessTokenInfoOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new Mobile_LoginNOSModel.AccessTokenCodeRec();
},
complexType: Mobile_LoginNOSModel.AccessTokenCodeRec
}]);
});
define("WTF_MBP.controller$ServerAction.Cache_GetCacheControlId", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.cache_GetCacheControlId$ServerAction = function (refreshTokenIn, cacheServiceIdIn, toRefreshIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
CacheServiceId: OS.DataTypes.JSConversions.basicTypeToJS(cacheServiceIdIn, OS.Types.Text),
ToRefresh: OS.DataTypes.JSConversions.basicTypeToJS(toRefreshIn, OS.Types.Boolean)
};
return controller.callServerAction("Cache_GetCacheControlId", "screenservices/WTF_MBP/ActionCache_GetCacheControlId", "0ZMU4fLQnaK+1maJe18fIw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionCache_GetCacheControlId"))();
executeServerActionResult.cacheControlIdOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.CacheControlId, OS.Types.LongInteger);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.minutesToInvalidateCacheOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.MinutesToInvalidateCache, OS.Types.Integer);
executeServerActionResult.isAtiveOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.isAtive, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionCache_GetCacheControlId", [{
name: "CacheControlId",
attrName: "cacheControlIdOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "MinutesToInvalidateCache",
attrName: "minutesToInvalidateCacheOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "isAtive",
attrName: "isAtiveOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.FillUserWtfWalletItemAddress", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.fillUserWtfWalletItemAddress$ServerAction = function (userWtfIdIn, refreshTokenIn, app_UserWtfPrizeAddressIn, walletItemIdIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
App_UserWtfPrizeAddress: app_UserWtfPrizeAddressIn.toJS(),
WalletItemId: OS.DataTypes.JSConversions.basicTypeToJS(walletItemIdIn, OS.Types.LongInteger)
};
return controller.callServerAction("FillUserWtfWalletItemAddress", "screenservices/WTF_MBP/ActionFillUserWtfWalletItemAddress", "bwSCh_wdHM7_0GVxoNCj7g", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionFillUserWtfWalletItemAddress"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionFillUserWtfWalletItemAddress", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.FilterListContacts", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_PhoneContactsList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.filterListContacts$ServerAction = function (userWtfIdIn, refreshTokenIn, app_PhoneContactsListIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
App_PhoneContactsList: app_PhoneContactsListIn.toJS()
};
return controller.callServerAction("FilterListContacts", "screenservices/WTF_MBP/ActionFilterListContacts", "ZRYkxKaD+NyR25vvAvhrsA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionFilterListContacts"))();
executeServerActionResult.app_PhoneContactsListFilterOut = WTF_MBPModel.App_PhoneContactsList.fromJS(outputs.App_PhoneContactsListFilter);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionFilterListContacts", [{
name: "App_PhoneContactsListFilter",
attrName: "app_PhoneContactsListFilterOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_PhoneContactsList();
},
complexType: WTF_MBPModel.App_PhoneContactsList
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetAccessTokenCode", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getAccessTokenCode$ServerAction = function (codeIn, codeVerifierIn, callbackURLIn, deviceUIDIn, callContext) {
var controller = this.controller;
var inputs = {
Code: OS.DataTypes.JSConversions.basicTypeToJS(codeIn, OS.Types.Text),
CodeVerifier: OS.DataTypes.JSConversions.basicTypeToJS(codeVerifierIn, OS.Types.Text),
CallbackURL: OS.DataTypes.JSConversions.basicTypeToJS(callbackURLIn, OS.Types.Text),
DeviceUID: OS.DataTypes.JSConversions.basicTypeToJS(deviceUIDIn, OS.Types.Text)
};
return controller.callServerAction("GetAccessTokenCode", "screenservices/WTF_MBP/ActionGetAccessTokenCode", "27JmhZeKV_BxPiC8atZW_w", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetAccessTokenCode"))();
executeServerActionResult.refreshTokenOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.RefreshToken, OS.Types.Text);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetAccessTokenCode", [{
name: "RefreshToken",
attrName: "refreshTokenOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetAddonsAndRefills_BP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$STR_ADDON_REFILLList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getAddonsAndRefills_BP$ServerAction = function (associationIDIn, serviceIDIn, refreshTokenIn, nOSIDIn, isNetMobileIn, applicationIn, callContext) {
var controller = this.controller;
var inputs = {
AssociationID: OS.DataTypes.JSConversions.basicTypeToJS(associationIDIn, OS.Types.LongInteger),
ServiceID: OS.DataTypes.JSConversions.basicTypeToJS(serviceIDIn, OS.Types.Text),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
IsNetMobile: OS.DataTypes.JSConversions.basicTypeToJS(isNetMobileIn, OS.Types.Boolean),
Application: OS.DataTypes.JSConversions.basicTypeToJS(applicationIn, OS.Types.Text)
};
return controller.callServerAction("GetAddonsAndRefills_BP", "screenservices/WTF_MBP/ActionGetAddonsAndRefills_BP", "1uhbMaMahBIf4y9xpF7VZw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespaceaddons_bp_ActionGetAddonsAndRefills_BP"))();
executeServerActionResult.addOnsListOut = WTF_MBPModel.STR_ADDON_REFILLList.fromJS(outputs.AddOnsList);
executeServerActionResult.addOnsSuccessOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.AddOnsSuccess, OS.Types.Boolean);
executeServerActionResult.refillsListOut = WTF_MBPModel.STR_ADDON_REFILLList.fromJS(outputs.RefillsList);
executeServerActionResult.refillsSuccessOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.RefillsSuccess, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespaceaddons_bp_ActionGetAddonsAndRefills_BP", [{
name: "AddOnsList",
attrName: "addOnsListOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.STR_ADDON_REFILLList();
},
complexType: WTF_MBPModel.STR_ADDON_REFILLList
}, {
name: "AddOnsSuccess",
attrName: "addOnsSuccessOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "RefillsList",
attrName: "refillsListOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.STR_ADDON_REFILLList();
},
complexType: WTF_MBPModel.STR_ADDON_REFILLList
}, {
name: "RefillsSuccess",
attrName: "refillsSuccessOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetAllMobileConfigs_BP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_ConfigList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getAllMobileConfigs_BP$ServerAction = function (callContext) {
var controller = this.controller;
return controller.callServerAction("GetAllMobileConfigs_BP", "screenservices/WTF_MBP/ActionGetAllMobileConfigs_BP", "7hUNAJi8ZNUZav0dKVTvJw", {}, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetAllMobileConfigs_BP"))();
executeServerActionResult.configListOut = WTF_MBPModel.App_ConfigList.fromJS(outputs.ConfigList);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetAllMobileConfigs_BP", [{
name: "ConfigList",
attrName: "configListOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_ConfigList();
},
complexType: WTF_MBPModel.App_ConfigList
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetAppFAQs", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$FAQConfig_AppList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getAppFAQs$ServerAction = function (callContext) {
var controller = this.controller;
return controller.callServerAction("GetAppFAQs", "screenservices/WTF_MBP/ActionGetAppFAQs", "tG04hBz3z_VDVDZREQB9+Q", {}, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetAppFAQs"))();
executeServerActionResult.fAQOut = WTF_MBPModel.FAQConfig_AppList.fromJS(outputs.FAQ);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetAppFAQs", [{
name: "FAQ",
attrName: "fAQOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.FAQConfig_AppList();
},
complexType: WTF_MBPModel.FAQConfig_AppList
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetAppIdentifiers_Public", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_IdentifierRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getAppIdentifiers_Public$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("GetAppIdentifiers_Public", "screenservices/WTF_MBP/ActionGetAppIdentifiers_Public", "pxgNZoYm8Q9x27_o45pFqg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetAppIdentifiers_Public"))();
executeServerActionResult.app_IdentifierOut = WTF_BPModel.App_IdentifierRec.fromJS(outputs.App_Identifier);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetAppIdentifiers_Public", [{
name: "App_Identifier",
attrName: "app_IdentifierOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_IdentifierRec();
},
complexType: WTF_BPModel.App_IdentifierRec
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetAssociationsFullInfo_BP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$STR_ASSOCIATION_FULL_BPList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getAssociationsFullInfo_BP$ServerAction = function (refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("GetAssociationsFullInfo_BP", "screenservices/WTF_MBP/ActionGetAssociationsFullInfo_BP", "1Irsf7OkQzaX8q_cpSm8rQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetAssociationsFullInfo_BP"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.versionOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Version, OS.Types.Text);
executeServerActionResult.associationListFullOut = WTF_MBPModel.STR_ASSOCIATION_FULL_BPList.fromJS(outputs.AssociationListFull);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetAssociationsFullInfo_BP", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Version",
attrName: "versionOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "AssociationListFull",
attrName: "associationListFullOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.STR_ASSOCIATION_FULL_BPList();
},
complexType: WTF_MBPModel.STR_ASSOCIATION_FULL_BPList
}]);
});
define("WTF_MBP.controller$ServerAction.GetBenefitRevolutNewUser", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_WalletCardRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getBenefitRevolutNewUser$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("GetBenefitRevolutNewUser", "screenservices/WTF_MBP/ActionGetBenefitRevolutNewUser", "MBTvtA+a5q1P1BHwlm0Qug", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetBenefitRevolutNewUser"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.walletCardOut = WTF_BPModel.App_WalletCardRec.fromJS(outputs.WalletCard);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetBenefitRevolutNewUser", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "WalletCard",
attrName: "walletCardOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_WalletCardRec();
},
complexType: WTF_BPModel.App_WalletCardRec
}]);
});
define("WTF_MBP.controller$ServerAction.GetChangeRatePlanInfoAll_BP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_TmcodeChangeList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getChangeRatePlanInfoAll_BP$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("GetChangeRatePlanInfoAll_BP", "screenservices/WTF_MBP/ActionGetChangeRatePlanInfoAll_BP", "GWqvMxwTz_4SCvappuz6Xw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetChangeRatePlanInfoAll_BP"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.app_TmcodeChangeOut = WTF_MBPModel.App_TmcodeChangeList.fromJS(outputs.App_TmcodeChange);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetChangeRatePlanInfoAll_BP", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_TmcodeChange",
attrName: "app_TmcodeChangeOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_TmcodeChangeList();
},
complexType: WTF_MBPModel.App_TmcodeChangeList
}]);
});
define("WTF_MBP.controller$ServerAction.GetInfoMGM", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getInfoMGM$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("GetInfoMGM", "screenservices/WTF_MBP/ActionGetInfoMGM", "b3FPvSEmBjX08Fu2LwuX2Q", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetInfoMGM"))();
executeServerActionResult.numberFriendsInvitedOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.NumberFriendsInvited, OS.Types.Integer);
executeServerActionResult.numberMaxOfFriendsOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.NumberMaxOfFriends, OS.Types.Integer);
executeServerActionResult.numberDiamondsHostOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.NumberDiamondsHost, OS.Types.Integer);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetInfoMGM", [{
name: "NumberFriendsInvited",
attrName: "numberFriendsInvitedOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "NumberMaxOfFriends",
attrName: "numberMaxOfFriendsOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "NumberDiamondsHost",
attrName: "numberDiamondsHostOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetLastVersionRegulation", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$STR_REGULATIONRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getLastVersionRegulation$ServerAction = function (applicationIn, moduleIn, callContext) {
var controller = this.controller;
var inputs = {
Application: OS.DataTypes.JSConversions.basicTypeToJS(applicationIn, OS.Types.Text),
Module: OS.DataTypes.JSConversions.basicTypeToJS(moduleIn, OS.Types.Text)
};
return controller.callServerAction("GetLastVersionRegulation", "screenservices/WTF_MBP/ActionGetLastVersionRegulation", "VI0BA2cgRbMHHFiWJ+GWbw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetLastVersionRegulation"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.regulationVersionIDOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.RegulationVersionID, OS.Types.LongInteger);
executeServerActionResult.regulationOut = WTF_BPModel.STR_REGULATIONRec.fromJS(outputs.Regulation);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetLastVersionRegulation", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "RegulationVersionID",
attrName: "regulationVersionIDOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "Regulation",
attrName: "regulationOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.STR_REGULATIONRec();
},
complexType: WTF_BPModel.STR_REGULATIONRec
}]);
});
define("WTF_MBP.controller$ServerAction.GetLayoutLevels", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$STR_LAYOUT_LEVELList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getLayoutLevels$ServerAction = function (callContext) {
var controller = this.controller;
return controller.callServerAction("GetLayoutLevels", "screenservices/WTF_MBP/ActionGetLayoutLevels", "V60gQgpNTYi+Evsnp2Skmg", {}, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetLayoutLevels"))();
executeServerActionResult.layoutLevelsListOut = WTF_MBPModel.STR_LAYOUT_LEVELList.fromJS(outputs.LayoutLevelsList);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetLayoutLevels", [{
name: "LayoutLevelsList",
attrName: "layoutLevelsListOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.STR_LAYOUT_LEVELList();
},
complexType: WTF_MBPModel.STR_LAYOUT_LEVELList
}]);
});
define("WTF_MBP.controller$ServerAction.GetMovieDelight", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getMovieDelight$ServerAction = function (userWtfIdIn, refreshTokenIn, assetIdIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
AssetId: OS.DataTypes.JSConversions.basicTypeToJS(assetIdIn, OS.Types.Text)
};
return controller.callServerAction("GetMovieDelight", "screenservices/WTF_MBP/ActionGetMovieDelight", "u8GJB642NBrZTpqxhzfBFQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetMovieDelight"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.pathOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Path, OS.Types.Text);
executeServerActionResult.sessionIdOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.SessionId, OS.Types.Text);
executeServerActionResult.licenceKeyOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.LicenceKey, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetMovieDelight", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Path",
attrName: "pathOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "SessionId",
attrName: "sessionIdOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "LicenceKey",
attrName: "licenceKeyOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetMSISDNByRefreshToken", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getMSISDNByRefreshToken$ServerAction = function (refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("GetMSISDNByRefreshToken", "screenservices/WTF_MBP/ActionGetMSISDNByRefreshToken", "svlLR4d7B6ZXn_PFxg09dQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetMSISDNByRefreshToken"))();
executeServerActionResult.isWtfOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.IsWtf, OS.Types.Boolean);
executeServerActionResult.mSISDNOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.MSISDN, OS.Types.PhoneNumber);
executeServerActionResult.tariffOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Tariff, OS.Types.Text);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetMSISDNByRefreshToken", [{
name: "IsWtf",
attrName: "isWtfOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "MSISDN",
attrName: "mSISDNOut",
mandatory: false,
dataType: OS.Types.PhoneNumber,
defaultValue: function () {
return "";
}
}, {
name: "Tariff",
attrName: "tariffOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetPictureById", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_PictureRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getPictureById$ServerAction = function (pictureIdIn, callContext) {
var controller = this.controller;
var inputs = {
PictureId: OS.DataTypes.JSConversions.basicTypeToJS(pictureIdIn, OS.Types.LongInteger)
};
return controller.callServerAction("GetPictureById", "screenservices/WTF_MBP/ActionGetPictureById", "N3B3Sxr0+82_ADsA9A3VHQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetPictureById"))();
executeServerActionResult.app_PictureOut = WTF_BPModel.App_PictureRec.fromJS(outputs.App_Picture);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetPictureById", [{
name: "App_Picture",
attrName: "app_PictureOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_PictureRec();
},
complexType: WTF_BPModel.App_PictureRec
}]);
});
define("WTF_MBP.controller$ServerAction.GetPrizeById", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_PrizeListRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getPrizeById$ServerAction = function (identifierIn, callContext) {
var controller = this.controller;
var inputs = {
Identifier: OS.DataTypes.JSConversions.basicTypeToJS(identifierIn, OS.Types.LongInteger)
};
return controller.callServerAction("GetPrizeById", "screenservices/WTF_MBP/ActionGetPrizeById", "QSXK32+z7EP75YOCpjEVng", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetPrizeById"))();
executeServerActionResult.app_PrizesOut = WTF_BPModel.App_PrizeListRec.fromJS(outputs.App_Prizes);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetPrizeById", [{
name: "App_Prizes",
attrName: "app_PrizesOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_PrizeListRec();
},
complexType: WTF_BPModel.App_PrizeListRec
}]);
});
define("WTF_MBP.controller$ServerAction.GetProductMaximumAutoRefill_BP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getProductMaximumAutoRefill_BP$ServerAction = function (refreshTokenIn, associationIdIn, mSISDNIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
AssociationId: OS.DataTypes.JSConversions.basicTypeToJS(associationIdIn, OS.Types.LongInteger),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text)
};
return controller.callServerAction("GetProductMaximumAutoRefill_BP", "screenservices/WTF_MBP/ActionGetProductMaximumAutoRefill_BP", "nSwn+NZ+neQriEaJXkOq_g", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetProductMaximumAutoRefill_BP"))();
executeServerActionResult.currentValueOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.CurrentValue, OS.Types.Text);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.errorOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Error, OS.Types.Text);
executeServerActionResult.maximumAllowedOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.MaximumAllowed, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetProductMaximumAutoRefill_BP", [{
name: "CurrentValue",
attrName: "currentValueOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "MaximumAllowed",
attrName: "maximumAllowedOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetPromotionsAndHotDealsActive", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_PromotionsList", "WTF_MBP.model$App_HotDealsList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getPromotionsAndHotDealsActive$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("GetPromotionsAndHotDealsActive", "screenservices/WTF_MBP/ActionGetPromotionsAndHotDealsActive", "jpQNLZVbq4RlUvFCXQ6OJA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetPromotionsAndHotDealsActive"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.promotionsOut = WTF_MBPModel.App_PromotionsList.fromJS(outputs.Promotions);
executeServerActionResult.hotDealsOut = WTF_MBPModel.App_HotDealsList.fromJS(outputs.HotDeals);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetPromotionsAndHotDealsActive", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Promotions",
attrName: "promotionsOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_PromotionsList();
},
complexType: WTF_MBPModel.App_PromotionsList
}, {
name: "HotDeals",
attrName: "hotDealsOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_HotDealsList();
},
complexType: WTF_MBPModel.App_HotDealsList
}]);
});
define("WTF_MBP.controller$ServerAction.GetRefillInformation_BP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getRefillInformation_BP$ServerAction = function (refreshTokenIn, associationIdIn, mSISDNIn, iDIn, statusIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
AssociationId: OS.DataTypes.JSConversions.basicTypeToJS(associationIdIn, OS.Types.LongInteger),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
ID: OS.DataTypes.JSConversions.basicTypeToJS(iDIn, OS.Types.Text),
Status: OS.DataTypes.JSConversions.basicTypeToJS(statusIn, OS.Types.Text)
};
return controller.callServerAction("GetRefillInformation_BP", "screenservices/WTF_MBP/ActionGetRefillInformation_BP", "GwajyjmDPhskNxPQm2ZK_g", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetRefillInformation_BP"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.eligibleOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Eligible, OS.Types.Boolean);
executeServerActionResult.errorMessageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMessage, OS.Types.Text);
executeServerActionResult.refillVolumeOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.RefillVolume, OS.Types.Integer);
executeServerActionResult.currRefillOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.CurrRefill, OS.Types.Integer);
executeServerActionResult.refillCostOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.RefillCost, OS.Types.Decimal);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetRefillInformation_BP", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Eligible",
attrName: "eligibleOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMessage",
attrName: "errorMessageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "RefillVolume",
attrName: "refillVolumeOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "CurrRefill",
attrName: "currRefillOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "RefillCost",
attrName: "refillCostOut",
mandatory: false,
dataType: OS.Types.Decimal,
defaultValue: function () {
return OS.DataTypes.Decimal.defaultValue;
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetRevolutVoucher", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_WalletCardRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getRevolutVoucher$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("GetRevolutVoucher", "screenservices/WTF_MBP/ActionGetRevolutVoucher", "rCMEzbQ3Hkk3yqde_3ufgw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetRevolutVoucher"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.walletCardOut = WTF_BPModel.App_WalletCardRec.fromJS(outputs.WalletCard);
executeServerActionResult.messageForUserWithoutBenefitOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.MessageForUserWithoutBenefit, OS.Types.Text);
executeServerActionResult.userWithoutBenefitOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.UserWithoutBenefit, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetRevolutVoucher", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "WalletCard",
attrName: "walletCardOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_WalletCardRec();
},
complexType: WTF_BPModel.App_WalletCardRec
}, {
name: "MessageForUserWithoutBenefit",
attrName: "messageForUserWithoutBenefitOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "UserWithoutBenefit",
attrName: "userWithoutBenefitOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetScratchRules", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_RegulationRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getScratchRules$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("GetScratchRules", "screenservices/WTF_MBP/ActionGetScratchRules", "6WvXyFz28i5FVXtt6kgPFg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetScratchRules"))();
executeServerActionResult.app_RegulationOut = WTF_BPModel.App_RegulationRec.fromJS(outputs.App_Regulation);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetScratchRules", [{
name: "App_Regulation",
attrName: "app_RegulationOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_RegulationRec();
},
complexType: WTF_BPModel.App_RegulationRec
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetTermsApp", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_RegulationRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getTermsApp$ServerAction = function (callContext) {
var controller = this.controller;
return controller.callServerAction("GetTermsApp", "screenservices/WTF_MBP/ActionGetTermsApp", "YFBMV3Cus2ynIb4RP4a9NQ", {}, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetTermsApp"))();
executeServerActionResult.app_RegulationOut = WTF_BPModel.App_RegulationRec.fromJS(outputs.App_Regulation);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetTermsApp", [{
name: "App_Regulation",
attrName: "app_RegulationOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_RegulationRec();
},
complexType: WTF_BPModel.App_RegulationRec
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetToken", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_WalletCardRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getToken$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("GetToken", "screenservices/WTF_MBP/ActionGetToken", "16cBvnLzFdij+tJV2kDXxA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetToken"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.walletCardOut = WTF_BPModel.App_WalletCardRec.fromJS(outputs.WalletCard);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetToken", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "WalletCard",
attrName: "walletCardOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_WalletCardRec();
},
complexType: WTF_BPModel.App_WalletCardRec
}]);
});
define("WTF_MBP.controller$ServerAction.GetUberVoucher", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_WalletCardRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getUberVoucher$ServerAction = function (userWtfIdIn, refreshTokenIn, uberVoucherTypeIdIn, uberVoucherRequestOriginIdIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
UberVoucherTypeId: OS.DataTypes.JSConversions.basicTypeToJS(uberVoucherTypeIdIn, OS.Types.Integer),
UberVoucherRequestOriginId: OS.DataTypes.JSConversions.basicTypeToJS(uberVoucherRequestOriginIdIn, OS.Types.Integer)
};
return controller.callServerAction("GetUberVoucher", "screenservices/WTF_MBP/ActionGetUberVoucher", "Wu68de3s0ZDsnNJ5D6rJ2A", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetUberVoucher"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.walletCardOut = WTF_BPModel.App_WalletCardRec.fromJS(outputs.WalletCard);
executeServerActionResult.willChangeFlagOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.WillChangeFlag, OS.Types.Boolean);
executeServerActionResult.willChangeMessageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.WillChangeMessage, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetUberVoucher", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "WalletCard",
attrName: "walletCardOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_WalletCardRec();
},
complexType: WTF_BPModel.App_WalletCardRec
}, {
name: "WillChangeFlag",
attrName: "willChangeFlagOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "WillChangeMessage",
attrName: "willChangeMessageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetUrl_AuthorizeUser", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getUrl_AuthorizeUser$ServerAction = function (callBackURLIn, callContext) {
var controller = this.controller;
var inputs = {
CallBackURL: OS.DataTypes.JSConversions.basicTypeToJS(callBackURLIn, OS.Types.Text)
};
return controller.callServerAction("GetUrl_AuthorizeUser", "screenservices/WTF_MBP/ActionGetUrl_AuthorizeUser", "bfHtQ8HNnLFxbGb6_9eqxQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetUrl_AuthorizeUser"))();
executeServerActionResult.codeVerifierOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.CodeVerifier, OS.Types.Text);
executeServerActionResult.uRLOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.URL, OS.Types.Text);
executeServerActionResult.parametersOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Parameters, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetUrl_AuthorizeUser", [{
name: "CodeVerifier",
attrName: "codeVerifierOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "URL",
attrName: "uRLOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Parameters",
attrName: "parametersOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetUrl_RegistrationUser", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getUrl_RegistrationUser$ServerAction = function (useOpenIdIn, callContext) {
var controller = this.controller;
var inputs = {
UseOpenId: OS.DataTypes.JSConversions.basicTypeToJS(useOpenIdIn, OS.Types.Boolean)
};
return controller.callServerAction("GetUrl_RegistrationUser", "screenservices/WTF_MBP/ActionGetUrl_RegistrationUser", "on61euBBa_TshuOaGWVymw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetUrl_RegistrationUser"))();
executeServerActionResult.uRLOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.URL, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetUrl_RegistrationUser", [{
name: "URL",
attrName: "uRLOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetUserAssociationAndCreateOrUpdateUserWtfActive", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_UserWtfRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getUserAssociationAndCreateOrUpdateUserWtfActive$ServerAction = function (user_AssociationIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
User_AssociationId: OS.DataTypes.JSConversions.basicTypeToJS(user_AssociationIdIn, OS.Types.Text),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("GetUserAssociationAndCreateOrUpdateUserWtfActive", "screenservices/WTF_MBP/ActionGetUserAssociationAndCreateOrUpdateUserWtfActive", "j3hxk8fdfWSrXDnDNjYvAA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetUserAssociationAndCreateOrUpdateUserWtfActive"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.returnUserWtfOut = WTF_BPModel.App_UserWtfRec.fromJS(outputs.ReturnUserWtf);
executeServerActionResult.alreadyInUseOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.AlreadyInUse, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetUserAssociationAndCreateOrUpdateUserWtfActive", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ReturnUserWtf",
attrName: "returnUserWtfOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_UserWtfRec();
},
complexType: WTF_BPModel.App_UserWtfRec
}, {
name: "AlreadyInUse",
attrName: "alreadyInUseOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetUserProfileInfo", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "Mobile_LoginNOS.model", "Mobile_LoginNOS.model$UserProfileInfoRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$Mobile_LoginNOS"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, Mobile_LoginNOSModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getUserProfileInfo$ServerAction = function (refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("GetUserProfileInfo", "screenservices/WTF_MBP/ActionGetUserProfileInfo", "8NKZJmcOtScvK+pzHLrqVQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetUserProfileInfo"))();
executeServerActionResult.userProfileInfoOut = Mobile_LoginNOSModel.UserProfileInfoRec.fromJS(outputs.UserProfileInfo);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetUserProfileInfo", [{
name: "UserProfileInfo",
attrName: "userProfileInfoOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new Mobile_LoginNOSModel.UserProfileInfoRec();
},
complexType: Mobile_LoginNOSModel.UserProfileInfoRec
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetValidateSession_BP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getValidateSession_BP$ServerAction = function (refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("GetValidateSession_BP", "screenservices/WTF_MBP/ActionGetValidateSession_BP", "iVen1quAaSMGNrpyiBALfQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetValidateSession_BP"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.accessTokenOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.AccessToken, OS.Types.Text);
executeServerActionResult.trafficAcceptanceMobileOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.TrafficAcceptanceMobile, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetValidateSession_BP", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "AccessToken",
attrName: "accessTokenOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "TrafficAcceptanceMobile",
attrName: "trafficAcceptanceMobileOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.GetWelcomePrizeInfo", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_WelcomePrizeRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.getWelcomePrizeInfo$ServerAction = function (userWtfIdIn, refreshTokenIn, identifierIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
Identifier: OS.DataTypes.JSConversions.basicTypeToJS(identifierIn, OS.Types.LongInteger)
};
return controller.callServerAction("GetWelcomePrizeInfo", "screenservices/WTF_MBP/ActionGetWelcomePrizeInfo", "EyZiN1SXEHDC2N_QsWb2ZQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetWelcomePrizeInfo"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.app_WelcomePrizeOut = WTF_BPModel.App_WelcomePrizeRec.fromJS(outputs.App_WelcomePrize);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionGetWelcomePrizeInfo", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_WelcomePrize",
attrName: "app_WelcomePrizeOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_WelcomePrizeRec();
},
complexType: WTF_BPModel.App_WelcomePrizeRec
}]);
});
define("WTF_MBP.controller$ServerAction.HotDeal_Buy", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.hotDeal_Buy$ServerAction = function (hotDealIdentifierIn, userWtfIdIn, refreshTokenIn, versionCodeIn, callContext) {
var controller = this.controller;
var inputs = {
HotDealIdentifier: OS.DataTypes.JSConversions.basicTypeToJS(hotDealIdentifierIn, OS.Types.LongInteger),
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
VersionCode: OS.DataTypes.JSConversions.basicTypeToJS(versionCodeIn, OS.Types.Text)
};
return controller.callServerAction("HotDeal_Buy", "screenservices/WTF_MBP/ActionHotDeal_Buy", "MopxtdEwaEOmkGt_kEdYVw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionHotDeal_Buy"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.paymentUrlOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.PaymentUrl, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionHotDeal_Buy", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "PaymentUrl",
attrName: "paymentUrlOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.HotDeal_Cancel_Public", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.hotDeal_Cancel_Public$ServerAction = function (userWtfIdIn, refreshTokenIn, walletItemIdIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
WalletItemId: OS.DataTypes.JSConversions.basicTypeToJS(walletItemIdIn, OS.Types.LongInteger)
};
return controller.callServerAction("HotDeal_Cancel_Public", "screenservices/WTF_MBP/ActionHotDeal_Cancel_Public", "hHKSmaHrI9Ap7Q7tnNPrlg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionHotDeal_Cancel_Public"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionHotDeal_Cancel_Public", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.HotDeal_Purchase", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.hotDeal_Purchase$ServerAction = function (walletItemIdIn, userWtfIdIn, refreshTokenIn, paygate_payment_type_codeIn, paygate_transaction_idIn, paygate_payment_refIn, paygate_paymentValueIn, paygate_phone_numberIn, paygate_refmb_entityIn, paygate_refmb_referenceIn, paygate_returnCodeIn, paygate_shortMsgIn, paygate_nameIn, callContext) {
var controller = this.controller;
var inputs = {
WalletItemId: OS.DataTypes.JSConversions.basicTypeToJS(walletItemIdIn, OS.Types.LongInteger),
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
Paygate_payment_type_code: OS.DataTypes.JSConversions.basicTypeToJS(paygate_payment_type_codeIn, OS.Types.Text),
Paygate_transaction_id: OS.DataTypes.JSConversions.basicTypeToJS(paygate_transaction_idIn, OS.Types.Text),
Paygate_payment_ref: OS.DataTypes.JSConversions.basicTypeToJS(paygate_payment_refIn, OS.Types.Text),
Paygate_paymentValue: OS.DataTypes.JSConversions.basicTypeToJS(paygate_paymentValueIn, OS.Types.Text),
Paygate_phone_number: OS.DataTypes.JSConversions.basicTypeToJS(paygate_phone_numberIn, OS.Types.Text),
Paygate_refmb_entity: OS.DataTypes.JSConversions.basicTypeToJS(paygate_refmb_entityIn, OS.Types.Text),
Paygate_refmb_reference: OS.DataTypes.JSConversions.basicTypeToJS(paygate_refmb_referenceIn, OS.Types.Text),
Paygate_returnCode: OS.DataTypes.JSConversions.basicTypeToJS(paygate_returnCodeIn, OS.Types.Text),
Paygate_shortMsg: OS.DataTypes.JSConversions.basicTypeToJS(paygate_shortMsgIn, OS.Types.Text),
Paygate_name: OS.DataTypes.JSConversions.basicTypeToJS(paygate_nameIn, OS.Types.Text)
};
return controller.callServerAction("HotDeal_Purchase", "screenservices/WTF_MBP/ActionHotDeal_Purchase", "ElBSKpt80xar05+dx4PK_Q", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionHotDeal_Purchase"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.requiredAddressOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.RequiredAddress, OS.Types.Boolean);
executeServerActionResult.itemIdOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ItemId, OS.Types.LongInteger);
executeServerActionResult.itemTypeIdOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ItemTypeId, OS.Types.Integer);
executeServerActionResult.itemNameOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ItemName, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionHotDeal_Purchase", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "RequiredAddress",
attrName: "requiredAddressOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ItemId",
attrName: "itemIdOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "ItemTypeId",
attrName: "itemTypeIdOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "ItemName",
attrName: "itemNameOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.HotDeal_SetError", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.hotDeal_SetError$ServerAction = function (userWtfIdIn, refreshTokenIn, walletItemIdIn, paygate_payment_type_codeIn, paygate_transaction_idIn, paygate_payment_refIn, paygate_paymentValueIn, paygate_phone_numberIn, paygate_refmb_entityIn, paygate_refmb_referenceIn, paygate_returnCodeIn, paygate_shortMsgIn, paygate_nameIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
WalletItemId: OS.DataTypes.JSConversions.basicTypeToJS(walletItemIdIn, OS.Types.LongInteger),
Paygate_payment_type_code: OS.DataTypes.JSConversions.basicTypeToJS(paygate_payment_type_codeIn, OS.Types.Text),
Paygate_transaction_id: OS.DataTypes.JSConversions.basicTypeToJS(paygate_transaction_idIn, OS.Types.Text),
Paygate_payment_ref: OS.DataTypes.JSConversions.basicTypeToJS(paygate_payment_refIn, OS.Types.Text),
Paygate_paymentValue: OS.DataTypes.JSConversions.basicTypeToJS(paygate_paymentValueIn, OS.Types.Text),
Paygate_phone_number: OS.DataTypes.JSConversions.basicTypeToJS(paygate_phone_numberIn, OS.Types.Text),
Paygate_refmb_entity: OS.DataTypes.JSConversions.basicTypeToJS(paygate_refmb_entityIn, OS.Types.Text),
Paygate_refmb_reference: OS.DataTypes.JSConversions.basicTypeToJS(paygate_refmb_referenceIn, OS.Types.Text),
Paygate_returnCode: OS.DataTypes.JSConversions.basicTypeToJS(paygate_returnCodeIn, OS.Types.Text),
Paygate_shortMsg: OS.DataTypes.JSConversions.basicTypeToJS(paygate_shortMsgIn, OS.Types.Text),
Paygate_name: OS.DataTypes.JSConversions.basicTypeToJS(paygate_nameIn, OS.Types.Text)
};
return controller.callServerAction("HotDeal_SetError", "screenservices/WTF_MBP/ActionHotDeal_SetError", "Tlu2KA7+Cig3ndMiwKQ+mg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionHotDeal_SetError"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionHotDeal_SetError", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.IsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$LongIntegerBooleanBooleanDIAMOND_TYPESIdentifierRecordList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.isFirstTimeForRegulamentAndPlayDiaryGetUserDiamond$ServerAction = function (userWtfIdIn, refreshTokenIn, moduleIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
Module: OS.DataTypes.JSConversions.basicTypeToJS(moduleIn, OS.Types.Text)
};
return controller.callServerAction("IsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond", "screenservices/WTF_MBP/ActionIsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond", "sD_MNz4XCB+WE0HmVduaBg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionIsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond"))();
executeServerActionResult.userWtfHasAcceptedOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.UserWtfHasAccepted, OS.Types.Boolean);
executeServerActionResult.nDiamondsBonusOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.nDiamondsBonus, OS.Types.Integer);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.diamondDiaryPartsNumberOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.DiamondDiaryPartsNumber, OS.Types.LongInteger);
executeServerActionResult.hasPlayTodayOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.HasPlayToday, OS.Types.Boolean);
executeServerActionResult.responseListOut = WTF_MBPModel.LongIntegerBooleanBooleanDIAMOND_TYPESIdentifierRecordList.fromJS(outputs.ResponseList);
executeServerActionResult.responsePartsGoldenOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ResponsePartsGolden, OS.Types.LongInteger);
executeServerActionResult.isFirstTimeForMGMOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.IsFirstTimeForMGM, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionIsFirstTimeForRegulamentAndPlayDiaryGetUserDiamond", [{
name: "UserWtfHasAccepted",
attrName: "userWtfHasAcceptedOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "nDiamondsBonus",
attrName: "nDiamondsBonusOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "DiamondDiaryPartsNumber",
attrName: "diamondDiaryPartsNumberOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "HasPlayToday",
attrName: "hasPlayTodayOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ResponseList",
attrName: "responseListOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.LongIntegerBooleanBooleanDIAMOND_TYPESIdentifierRecordList();
},
complexType: WTF_MBPModel.LongIntegerBooleanBooleanDIAMOND_TYPESIdentifierRecordList
}, {
name: "ResponsePartsGolden",
attrName: "responsePartsGoldenOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "IsFirstTimeForMGM",
attrName: "isFirstTimeForMGMOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.LastUserWtfPrizeAddress_Public", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_UserWtfPrizeAddressRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.lastUserWtfPrizeAddress_Public$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("LastUserWtfPrizeAddress_Public", "screenservices/WTF_MBP/ActionLastUserWtfPrizeAddress_Public", "aSTSg7eHNMIwPRA6vlbTVg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionLastUserWtfPrizeAddress_Public"))();
executeServerActionResult.app_UserWtfPrizeAddressOut = WTF_BPModel.App_UserWtfPrizeAddressRec.fromJS(outputs.App_UserWtfPrizeAddress);
executeServerActionResult.hasLastAddressOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.HasLastAddress, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionLastUserWtfPrizeAddress_Public", [{
name: "App_UserWtfPrizeAddress",
attrName: "app_UserWtfPrizeAddressOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_UserWtfPrizeAddressRec();
},
complexType: WTF_BPModel.App_UserWtfPrizeAddressRec
}, {
name: "HasLastAddress",
attrName: "hasLastAddressOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.MobilePhoneActivation_SendSMS", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.mobilePhoneActivation_SendSMS$ServerAction = function (refreshTokenIn, msisdnIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
Msisdn: OS.DataTypes.JSConversions.basicTypeToJS(msisdnIn, OS.Types.Integer)
};
return controller.callServerAction("MobilePhoneActivation_SendSMS", "screenservices/WTF_MBP/ActionMobilePhoneActivation_SendSMS", "n17kuUNyoCUDgnF0IreJnA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionMobilePhoneActivation_SendSMS"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.isWtfOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.IsWtf, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionMobilePhoneActivation_SendSMS", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "IsWtf",
attrName: "isWtfOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.MobilePhoneActivation_ValidateToken", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.mobilePhoneActivation_ValidateToken$ServerAction = function (refreshTokenIn, msisdnIn, codeIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
Msisdn: OS.DataTypes.JSConversions.basicTypeToJS(msisdnIn, OS.Types.Integer),
Code: OS.DataTypes.JSConversions.basicTypeToJS(codeIn, OS.Types.Text)
};
return controller.callServerAction("MobilePhoneActivation_ValidateToken", "screenservices/WTF_MBP/ActionMobilePhoneActivation_ValidateToken", "qrW_LC+7rPZQ2_Icyb0KrA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionMobilePhoneActivation_ValidateToken"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.isValidOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.IsValid, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionMobilePhoneActivation_ValidateToken", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "IsValid",
attrName: "isValidOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.PlayScratch", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_QuizRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_BP.model$App_CopiesRec"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.playScratch$ServerAction = function (userWtfIdIn, refreshTokenIn, diamondTypeNameIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
DiamondTypeName: OS.DataTypes.JSConversions.basicTypeToJS(diamondTypeNameIn, OS.Types.Text)
};
return controller.callServerAction("PlayScratch", "screenservices/WTF_MBP/ActionPlayScratch", "+dcCG_PLF4IVYCtZYScFJQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionPlayScratch"))();
executeServerActionResult.hasWonOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.HasWon, OS.Types.Boolean);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.quizOut = WTF_BPModel.App_QuizRec.fromJS(outputs.Quiz);
executeServerActionResult.prizeIdOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.PrizeId, OS.Types.LongInteger);
executeServerActionResult.categoryPrizeOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.CategoryPrize, OS.Types.Text);
executeServerActionResult.app_CopiesOut = WTF_BPModel.App_CopiesRec.fromJS(outputs.App_Copies);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionPlayScratch", [{
name: "HasWon",
attrName: "hasWonOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Quiz",
attrName: "quizOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_QuizRec();
},
complexType: WTF_BPModel.App_QuizRec
}, {
name: "PrizeId",
attrName: "prizeIdOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "CategoryPrize",
attrName: "categoryPrizeOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_Copies",
attrName: "app_CopiesOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_CopiesRec();
},
complexType: WTF_BPModel.App_CopiesRec
}]);
});
define("WTF_MBP.controller$ServerAction.PushReview_GetStatus", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_IdentifierRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.pushReview_GetStatus$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("PushReview_GetStatus", "screenservices/WTF_MBP/ActionPushReview_GetStatus", "d2PkKoglceEA70Z0+EyfVQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionPushReview_GetStatus"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.hasPushReviewOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.HasPushReview, OS.Types.Boolean);
executeServerActionResult.currentPushReviewStatusIdOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.CurrentPushReviewStatusId, OS.Types.Integer);
executeServerActionResult.app_IdentifierOut = WTF_BPModel.App_IdentifierRec.fromJS(outputs.App_Identifier);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionPushReview_GetStatus", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "HasPushReview",
attrName: "hasPushReviewOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "CurrentPushReviewStatusId",
attrName: "currentPushReviewStatusIdOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}, {
name: "App_Identifier",
attrName: "app_IdentifierOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_IdentifierRec();
},
complexType: WTF_BPModel.App_IdentifierRec
}]);
});
define("WTF_MBP.controller$ServerAction.PushReview_UpdateStatus", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.pushReview_UpdateStatus$ServerAction = function (userWtfIdIn, refreshTokenIn, newPushReviewStatusIdIn, feedbackMessageIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
NewPushReviewStatusId: OS.DataTypes.JSConversions.basicTypeToJS(newPushReviewStatusIdIn, OS.Types.Integer),
FeedbackMessage: OS.DataTypes.JSConversions.basicTypeToJS(feedbackMessageIn, OS.Types.Text)
};
return controller.callServerAction("PushReview_UpdateStatus", "screenservices/WTF_MBP/ActionPushReview_UpdateStatus", "tPJukqAaeUHA6c43MisLvA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionPushReview_UpdateStatus"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionPushReview_UpdateStatus", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.RefreshTokenValidate_BP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.refreshTokenValidate_BP$ServerAction = function (refreshTokenIn, validateUserInfoIn, forceRefreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ValidateUserInfo: OS.DataTypes.JSConversions.basicTypeToJS(validateUserInfoIn, OS.Types.Boolean),
ForceRefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(forceRefreshTokenIn, OS.Types.Boolean)
};
return controller.callServerAction("RefreshTokenValidate_BP", "screenservices/WTF_MBP/ActionRefreshTokenValidate_BP", "xvcLJQ2G4iDIv3FLCEJenA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionRefreshTokenValidate_BP"))();
executeServerActionResult.isValidOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.IsValid, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.accessTokenOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.AccessToken, OS.Types.Text);
executeServerActionResult.clientIdOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ClientId, OS.Types.Text);
executeServerActionResult.correlationIdOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.CorrelationId, OS.Types.Text);
executeServerActionResult.platformOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Platform, OS.Types.Text);
executeServerActionResult.userUIDOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.UserUID, OS.Types.Text);
executeServerActionResult.deviceUIDOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.DeviceUID, OS.Types.Text);
executeServerActionResult.isOpendIDOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.IsOpendID, OS.Types.Boolean);
executeServerActionResult.idTokenOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.IdToken, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionRefreshTokenValidate_BP", [{
name: "IsValid",
attrName: "isValidOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "AccessToken",
attrName: "accessTokenOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ClientId",
attrName: "clientIdOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "CorrelationId",
attrName: "correlationIdOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Platform",
attrName: "platformOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "UserUID",
attrName: "userUIDOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "DeviceUID",
attrName: "deviceUIDOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "IsOpendID",
attrName: "isOpendIDOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "IdToken",
attrName: "idTokenOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.RequestWelcomePrize", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.requestWelcomePrize$ServerAction = function (userWtfIdIn, refreshTokenIn, identifierIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
Identifier: OS.DataTypes.JSConversions.basicTypeToJS(identifierIn, OS.Types.LongInteger)
};
return controller.callServerAction("RequestWelcomePrize", "screenservices/WTF_MBP/ActionRequestWelcomePrize", "hN7UHgJgps4rkdBQwOBrmA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionRequestWelcomePrize"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionRequestWelcomePrize", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.RevolutIsFirstTime", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.revolutIsFirstTime$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("RevolutIsFirstTime", "screenservices/WTF_MBP/ActionRevolutIsFirstTime", "pzHNQBHwu1GoSYibN1OY2Q", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionRevolutIsFirstTime"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.isFirstTimeOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.IsFirstTime, OS.Types.Boolean);
executeServerActionResult.msisdnOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Msisdn, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionRevolutIsFirstTime", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "IsFirstTime",
attrName: "isFirstTimeOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Msisdn",
attrName: "msisdnOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.SecretFriend_GetAllOffersActive", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_SecretFriendConditionsAndOffersRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.secretFriend_GetAllOffersActive$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("SecretFriend_GetAllOffersActive", "screenservices/WTF_MBP/ActionSecretFriend_GetAllOffersActive", "mYkoxq_OtGLxyWqJq2ZwIg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSecretFriend_GetAllOffersActive"))();
executeServerActionResult.secretFriendConditionsAndOffersOut = WTF_BPModel.App_SecretFriendConditionsAndOffersRec.fromJS(outputs.SecretFriendConditionsAndOffers);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSecretFriend_GetAllOffersActive", [{
name: "SecretFriendConditionsAndOffers",
attrName: "secretFriendConditionsAndOffersOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_SecretFriendConditionsAndOffersRec();
},
complexType: WTF_BPModel.App_SecretFriendConditionsAndOffersRec
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.SecretFriend_GetConditionsActive", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.secretFriend_GetConditionsActive$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("SecretFriend_GetConditionsActive", "screenservices/WTF_MBP/ActionSecretFriend_GetConditionsActive", "xlHmOrkNPB_kvZwFUb+Njw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSecretFriend_GetConditionsActive"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.conditionsOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Conditions, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSecretFriend_GetConditionsActive", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Conditions",
attrName: "conditionsOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.SecretFriend_GetMyOffers", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_SecretFriendMyOffersList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.secretFriend_GetMyOffers$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("SecretFriend_GetMyOffers", "screenservices/WTF_MBP/ActionSecretFriend_GetMyOffers", "g6270yUy_2DsQRQTtgsDrQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSecretFriend_GetMyOffers"))();
executeServerActionResult.secretFriendMyOffersOut = WTF_MBPModel.App_SecretFriendMyOffersList.fromJS(outputs.SecretFriendMyOffers);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSecretFriend_GetMyOffers", [{
name: "SecretFriendMyOffers",
attrName: "secretFriendMyOffersOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_SecretFriendMyOffersList();
},
complexType: WTF_MBPModel.App_SecretFriendMyOffersList
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.SecretFriend_RedeemOffer", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.secretFriend_RedeemOffer$ServerAction = function (userWtfIdIn, refreshTokenIn, itemIdentifierIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ItemIdentifier: OS.DataTypes.JSConversions.basicTypeToJS(itemIdentifierIn, OS.Types.Integer)
};
return controller.callServerAction("SecretFriend_RedeemOffer", "screenservices/WTF_MBP/ActionSecretFriend_RedeemOffer", "WtgNZDQYG6P9fj32zhpvVg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSecretFriend_RedeemOffer"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSecretFriend_RedeemOffer", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.SecretFriend_SendOffer", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.secretFriend_SendOffer$ServerAction = function (userWtfIdIn, refreshTokenIn, offerIdentifierIn, msisdnToSendIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
OfferIdentifier: OS.DataTypes.JSConversions.basicTypeToJS(offerIdentifierIn, OS.Types.Integer),
MsisdnToSend: OS.DataTypes.JSConversions.basicTypeToJS(msisdnToSendIn, OS.Types.Integer)
};
return controller.callServerAction("SecretFriend_SendOffer", "screenservices/WTF_MBP/ActionSecretFriend_SendOffer", "Zifo5kkiqwsfkASrzpp0qg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSecretFriend_SendOffer"))();
executeServerActionResult.alreadyInAppOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.AlreadyInApp, OS.Types.Boolean);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSecretFriend_SendOffer", [{
name: "AlreadyInApp",
attrName: "alreadyInAppOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.SecretFriend_VerifyAlreadySendAllOffers", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_PictureRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.secretFriend_VerifyAlreadySendAllOffers$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("SecretFriend_VerifyAlreadySendAllOffers", "screenservices/WTF_MBP/ActionSecretFriend_VerifyAlreadySendAllOffers", "RoypguEDqg7wZCsNxBohXA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSecretFriend_VerifyAlreadySendAllOffers"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.app_PictureOut = WTF_BPModel.App_PictureRec.fromJS(outputs.App_Picture);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSecretFriend_VerifyAlreadySendAllOffers", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_Picture",
attrName: "app_PictureOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_PictureRec();
},
complexType: WTF_BPModel.App_PictureRec
}]);
});
define("WTF_MBP.controller$ServerAction.SendMGMCode", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.sendMGMCode$ServerAction = function (userWtfIdIn, refreshTokenIn, codeIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
Code: OS.DataTypes.JSConversions.basicTypeToJS(codeIn, OS.Types.Text)
};
return controller.callServerAction("SendMGMCode", "screenservices/WTF_MBP/ActionSendMGMCode", "mK_4vqsj+PrMs6YBzn6r4A", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSendMGMCode"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.nDiamondsBonusOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.NDiamondsBonus, OS.Types.Integer);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSendMGMCode", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "NDiamondsBonus",
attrName: "nDiamondsBonusOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
});
define("WTF_MBP.controller$ServerAction.SendVoucherForSms", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.sendVoucherForSms$ServerAction = function (userWtfIdIn, voucherCodeIn, refreshTokenIn, voucherTypeIdIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
VoucherCode: OS.DataTypes.JSConversions.basicTypeToJS(voucherCodeIn, OS.Types.Text),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
VoucherTypeId: OS.DataTypes.JSConversions.basicTypeToJS(voucherTypeIdIn, OS.Types.Integer)
};
return controller.callServerAction("SendVoucherForSms", "screenservices/WTF_MBP/ActionSendVoucherForSms", "TmOyJnXQSVuNwlxvcdQHXw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSendVoucherForSms"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSendVoucherForSms", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.SendVoucherUberSms", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.sendVoucherUberSms$ServerAction = function (userWtfIdIn, refreshTokenIn, app_VoucherIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
App_Voucher: app_VoucherIn.toJS()
};
return controller.callServerAction("SendVoucherUberSms", "screenservices/WTF_MBP/ActionSendVoucherUberSms", "Z5PB0t49UbOBrKRlDWhScw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSendVoucherUberSms"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSendVoucherUberSms", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_ACTIVATE_DELIGHT", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_ACTIVATE_DELIGHT$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, withErrorIn, errorCodeIn, delightIDIn, delightNameIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text),
withError: OS.DataTypes.JSConversions.basicTypeToJS(withErrorIn, OS.Types.Boolean),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS(errorCodeIn, OS.Types.Text),
DelightID: OS.DataTypes.JSConversions.basicTypeToJS(delightIDIn, OS.Types.LongInteger),
DelightName: OS.DataTypes.JSConversions.basicTypeToJS(delightNameIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_ACTIVATE_DELIGHT", "screenservices/WTF_MBP/ActionsetActivityLogger_ACTIVATE_DELIGHT", "LktbvZcUpiKzxbiltCPzpg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_ACTIVATE_DELIGHT"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_ACTIVATE_DELIGHT", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_ANTICIPATE_PAYMENT", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_ANTICIPATE_PAYMENT$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, activityLogSubActionIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text),
ActivityLogSubAction: OS.DataTypes.JSConversions.basicTypeToJS(activityLogSubActionIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_ANTICIPATE_PAYMENT", "screenservices/WTF_MBP/ActionsetActivityLogger_ANTICIPATE_PAYMENT", "D56t8CuhTdtGzaaYuQM9RQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_ANTICIPATE_PAYMENT"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_ANTICIPATE_PAYMENT", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_BALANCE", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_BALANCE$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_BALANCE", "screenservices/WTF_MBP/ActionsetActivityLogger_BALANCE", "2SsWJZgfbkvp_VWPdq3C+w", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_BALANCE"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_BALANCE", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_BALANCE_CHARGE", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_BALANCE_CHARGE$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, serviceAccountIDIn, custCodeIn, mSISDNIn, invoiceNumberIn, customerContactIn, directoryNumberIn, taxNumberIn, mACAddressIn, usernameIn, nOSIDIn, sessionIdIn, amountIn, withErrorIn, errorCodeIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
ServiceAccountID: OS.DataTypes.JSConversions.basicTypeToJS(serviceAccountIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
InvoiceNumber: OS.DataTypes.JSConversions.basicTypeToJS(invoiceNumberIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
TaxNumber: OS.DataTypes.JSConversions.basicTypeToJS(taxNumberIn, OS.Types.Text),
MACAddress: OS.DataTypes.JSConversions.basicTypeToJS(mACAddressIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text),
Amount: OS.DataTypes.JSConversions.basicTypeToJS(amountIn, OS.Types.Decimal),
withError: OS.DataTypes.JSConversions.basicTypeToJS(withErrorIn, OS.Types.Boolean),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS(errorCodeIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_BALANCE_CHARGE", "screenservices/WTF_MBP/ActionsetActivityLogger_BALANCE_CHARGE", "OOamlFmYtrFMzwXU4QMFSA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_BALANCE_CHARGE"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_BALANCE_CHARGE", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_CHANGE_EXTRA_BALANCE", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_CHANGE_EXTRA_BALANCE$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, isErrorIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text),
isError: OS.DataTypes.JSConversions.basicTypeToJS(isErrorIn, OS.Types.Boolean)
};
return controller.callServerAction("setActivityLogger_CHANGE_EXTRA_BALANCE", "screenservices/WTF_MBP/ActionsetActivityLogger_CHANGE_EXTRA_BALANCE", "CQL1NygE8GkeyDwaJIwd+g", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_CHANGE_EXTRA_BALANCE"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_CHANGE_EXTRA_BALANCE", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_CHANGE_MOBILE_TARIFF", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_CHANGE_MOBILE_TARIFF$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, activityLogSubActionIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text),
ActivityLogSubAction: OS.DataTypes.JSConversions.basicTypeToJS(activityLogSubActionIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_CHANGE_MOBILE_TARIFF", "screenservices/WTF_MBP/ActionsetActivityLogger_CHANGE_MOBILE_TARIFF", "TxRknV1nDS2gHEoXKjJ6Ww", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_CHANGE_MOBILE_TARIFF"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_CHANGE_MOBILE_TARIFF", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_CLICK_ADD_SERVICES", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_CLICK_ADD_SERVICES$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_CLICK_ADD_SERVICES", "screenservices/WTF_MBP/ActionsetActivityLogger_CLICK_ADD_SERVICES", "7sdiC14H9HQrLlxWr04fzA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_CLICK_ADD_SERVICES"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_CLICK_ADD_SERVICES", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_CLICK_LOGIN", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_CLICK_LOGIN$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, serviceAccountIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, taxNumberIn, mACAddressIn, usernameIn, sessionIdIn, nOSIDIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
ServiceAccountID: OS.DataTypes.JSConversions.basicTypeToJS(serviceAccountIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
TaxNumber: OS.DataTypes.JSConversions.basicTypeToJS(taxNumberIn, OS.Types.Text),
MACAddress: OS.DataTypes.JSConversions.basicTypeToJS(mACAddressIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_CLICK_LOGIN", "screenservices/WTF_MBP/ActionsetActivityLogger_CLICK_LOGIN", "hOFaA3dNbFNjDqSNC1sDVg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_CLICK_LOGIN"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_CLICK_LOGIN", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_CLICK_REGISTER", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_CLICK_REGISTER$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, serviceAccountIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, taxNumberIn, mACAddressIn, usernameIn, sessionIdIn, nOSIDIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
ServiceAccountID: OS.DataTypes.JSConversions.basicTypeToJS(serviceAccountIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
TaxNumber: OS.DataTypes.JSConversions.basicTypeToJS(taxNumberIn, OS.Types.Text),
MACAddress: OS.DataTypes.JSConversions.basicTypeToJS(mACAddressIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_CLICK_REGISTER", "screenservices/WTF_MBP/ActionsetActivityLogger_CLICK_REGISTER", "zWv0kK_oOxisVrjV0fK0ew", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_CLICK_REGISTER"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_CLICK_REGISTER", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_EXTRA_BALANCE", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_EXTRA_BALANCE$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, refillIn, isErrorIn, amountIn, toDeactivateIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text),
Refill: OS.DataTypes.JSConversions.basicTypeToJS(refillIn, OS.Types.Boolean),
isError: OS.DataTypes.JSConversions.basicTypeToJS(isErrorIn, OS.Types.Boolean),
Amount: OS.DataTypes.JSConversions.basicTypeToJS(amountIn, OS.Types.Decimal),
toDeactivate: OS.DataTypes.JSConversions.basicTypeToJS(toDeactivateIn, OS.Types.Boolean)
};
return controller.callServerAction("setActivityLogger_EXTRA_BALANCE", "screenservices/WTF_MBP/ActionsetActivityLogger_EXTRA_BALANCE", "mlJweFpRoYZA5ofA_rMxHQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_EXTRA_BALANCE"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_EXTRA_BALANCE", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_EXTRA_BALANCE_LIMIT", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_EXTRA_BALANCE_LIMIT$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, isErrorIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text),
isError: OS.DataTypes.JSConversions.basicTypeToJS(isErrorIn, OS.Types.Boolean)
};
return controller.callServerAction("setActivityLogger_EXTRA_BALANCE_LIMIT", "screenservices/WTF_MBP/ActionsetActivityLogger_EXTRA_BALANCE_LIMIT", "aVUPEIeOy3_e0boJ_tdw_A", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_EXTRA_BALANCE_LIMIT"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_EXTRA_BALANCE_LIMIT", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_HOMEPAGE", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_HOMEPAGE$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_HOMEPAGE", "screenservices/WTF_MBP/ActionsetActivityLogger_HOMEPAGE", "KVWPvZ19gMby2lc3xAswTA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_HOMEPAGE"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_HOMEPAGE", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_HOT_DEAL_PURCHASE", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_HOT_DEAL_PURCHASE$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, serviceAccountIDIn, custCodeIn, mSISDNIn, invoiceNumberIn, customerContactIn, directoryNumberIn, taxNumberIn, mACAddressIn, usernameIn, nOSIDIn, sessionIdIn, amountIn, withErrorIn, errorCodeIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
ServiceAccountID: OS.DataTypes.JSConversions.basicTypeToJS(serviceAccountIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
InvoiceNumber: OS.DataTypes.JSConversions.basicTypeToJS(invoiceNumberIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
TaxNumber: OS.DataTypes.JSConversions.basicTypeToJS(taxNumberIn, OS.Types.Text),
MACAddress: OS.DataTypes.JSConversions.basicTypeToJS(mACAddressIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text),
Amount: OS.DataTypes.JSConversions.basicTypeToJS(amountIn, OS.Types.Decimal),
withError: OS.DataTypes.JSConversions.basicTypeToJS(withErrorIn, OS.Types.Boolean),
ErrorCode: OS.DataTypes.JSConversions.basicTypeToJS(errorCodeIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_HOT_DEAL_PURCHASE", "screenservices/WTF_MBP/ActionsetActivityLogger_HOT_DEAL_PURCHASE", "9COSDayURH7KERcBEA4gQQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_HOT_DEAL_PURCHASE"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_HOT_DEAL_PURCHASE", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_LOGIN_MSISDN_VISIT", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_LOGIN_MSISDN_VISIT$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, activityLogSubActionIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text),
ActivityLogSubAction: OS.DataTypes.JSConversions.basicTypeToJS(activityLogSubActionIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_LOGIN_MSISDN_VISIT", "screenservices/WTF_MBP/ActionsetActivityLogger_LOGIN_MSISDN_VISIT", "FNTEFi9u_vrUM2DQAfgV8A", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_LOGIN_MSISDN_VISIT"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_LOGIN_MSISDN_VISIT", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_PINPUK", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_PINPUK$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_PINPUK", "screenservices/WTF_MBP/ActionsetActivityLogger_PINPUK", "8qn6JdMc_Dl9lHWwQZGVuQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_PINPUK"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_PINPUK", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_REDEEM_ADOPTION_CAMPAIGN_NATAL", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_REDEEM_ADOPTION_CAMPAIGN_NATAL$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_REDEEM_ADOPTION_CAMPAIGN_NATAL", "screenservices/WTF_MBP/ActionsetActivityLogger_REDEEM_ADOPTION_CAMPAIGN_NATAL", "jFu0Vg43mEsNYk0gcBUEmw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_REDEEM_ADOPTION_CAMPAIGN_NATAL"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_REDEEM_ADOPTION_CAMPAIGN_NATAL", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_REGISTER_MOBILE_SERVICE", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_REGISTER_MOBILE_SERVICE$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_REGISTER_MOBILE_SERVICE", "screenservices/WTF_MBP/ActionsetActivityLogger_REGISTER_MOBILE_SERVICE", "m3tw6tiTRiiGGW7H+to3Vw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_REGISTER_MOBILE_SERVICE"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_REGISTER_MOBILE_SERVICE", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_REQUEST_REVOLUT", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_REQUEST_REVOLUT$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_REQUEST_REVOLUT", "screenservices/WTF_MBP/ActionsetActivityLogger_REQUEST_REVOLUT", "Fz4_6KM9kDId25t6seKGyQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_REQUEST_REVOLUT"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_REQUEST_REVOLUT", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_REQUEST_TOKEN_CINEMA", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_REQUEST_TOKEN_CINEMA$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_REQUEST_TOKEN_CINEMA", "screenservices/WTF_MBP/ActionsetActivityLogger_REQUEST_TOKEN_CINEMA", "M9eVNEGx5j_Q_Z81Qu9nVA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_REQUEST_TOKEN_CINEMA"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_REQUEST_TOKEN_CINEMA", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_REQUEST_UBER_EATS_VOUCHER", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_REQUEST_UBER_EATS_VOUCHER$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_REQUEST_UBER_EATS_VOUCHER", "screenservices/WTF_MBP/ActionsetActivityLogger_REQUEST_UBER_EATS_VOUCHER", "a54Gbpn2qRwJhqzT4elBAA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_REQUEST_UBER_EATS_VOUCHER"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_REQUEST_UBER_EATS_VOUCHER", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_REQUEST_UBER_VOUCHER", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_REQUEST_UBER_VOUCHER$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_REQUEST_UBER_VOUCHER", "screenservices/WTF_MBP/ActionsetActivityLogger_REQUEST_UBER_VOUCHER", "656kr8hwknuOeDzZVKGG3w", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_REQUEST_UBER_VOUCHER"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_REQUEST_UBER_VOUCHER", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_RGPD_FIRST_TIME_ACCEPT", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_RGPD_FIRST_TIME_ACCEPT$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_RGPD_FIRST_TIME_ACCEPT", "screenservices/WTF_MBP/ActionsetActivityLogger_RGPD_FIRST_TIME_ACCEPT", "lJ5mzGnRwVEnXROn1VGSqQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_RGPD_FIRST_TIME_ACCEPT"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_RGPD_FIRST_TIME_ACCEPT", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_RGPD_FIRST_TIME_REJECT", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_RGPD_FIRST_TIME_REJECT$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_RGPD_FIRST_TIME_REJECT", "screenservices/WTF_MBP/ActionsetActivityLogger_RGPD_FIRST_TIME_REJECT", "yddKkekCqbVvvUYz2kkDfA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_RGPD_FIRST_TIME_REJECT"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_RGPD_FIRST_TIME_REJECT", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_CHECK_FAQS", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_SCRATCH_CHECK_FAQS$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_SCRATCH_CHECK_FAQS", "screenservices/WTF_MBP/ActionsetActivityLogger_SCRATCH_CHECK_FAQS", "MtgPCoxueOnllKTkQVUTMg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_CHECK_FAQS"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_CHECK_FAQS", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_CHECK_PRIZES", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_SCRATCH_CHECK_PRIZES$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_SCRATCH_CHECK_PRIZES", "screenservices/WTF_MBP/ActionsetActivityLogger_SCRATCH_CHECK_PRIZES", "R2s9BFtzRiiuio9yKRunSQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_CHECK_PRIZES"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_CHECK_PRIZES", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_CHECK_RULES", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_SCRATCH_CHECK_RULES$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_SCRATCH_CHECK_RULES", "screenservices/WTF_MBP/ActionsetActivityLogger_SCRATCH_CHECK_RULES", "0zcy6fcwfzKFa3K3X4aGOQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_CHECK_RULES"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_CHECK_RULES", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_COPY_FRIENDS", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_SCRATCH_COPY_FRIENDS$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_SCRATCH_COPY_FRIENDS", "screenservices/WTF_MBP/ActionsetActivityLogger_SCRATCH_COPY_FRIENDS", "oAeH9dBvi+09PCWiaQK2ag", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_COPY_FRIENDS"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_COPY_FRIENDS", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_GOLDEN_FAIL", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_SCRATCH_GOLDEN_FAIL$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_SCRATCH_GOLDEN_FAIL", "screenservices/WTF_MBP/ActionsetActivityLogger_SCRATCH_GOLDEN_FAIL", "9iKWbQUzcMKOlp2SUo6gjg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_GOLDEN_FAIL"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_GOLDEN_FAIL", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_GOLDEN_LOST", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_SCRATCH_GOLDEN_LOST$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_SCRATCH_GOLDEN_LOST", "screenservices/WTF_MBP/ActionsetActivityLogger_SCRATCH_GOLDEN_LOST", "WR7yHu1+qpg_a0Q7QI4b+g", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_GOLDEN_LOST"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_GOLDEN_LOST", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_GOLDEN_PLAY", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_SCRATCH_GOLDEN_PLAY$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_SCRATCH_GOLDEN_PLAY", "screenservices/WTF_MBP/ActionsetActivityLogger_SCRATCH_GOLDEN_PLAY", "m2fBBOrIr+3bs0iKMYVBIA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_GOLDEN_PLAY"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_GOLDEN_PLAY", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_GOLDEN_WON", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_SCRATCH_GOLDEN_WON$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_SCRATCH_GOLDEN_WON", "screenservices/WTF_MBP/ActionsetActivityLogger_SCRATCH_GOLDEN_WON", "lClnzTP3IY_1kd3zDRjKrg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_GOLDEN_WON"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_GOLDEN_WON", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_SHARE_FRIENDS", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_SCRATCH_SHARE_FRIENDS$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_SCRATCH_SHARE_FRIENDS", "screenservices/WTF_MBP/ActionsetActivityLogger_SCRATCH_SHARE_FRIENDS", "R6BHpbJXBT7gRonL_IbmBQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_SHARE_FRIENDS"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_SHARE_FRIENDS", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_SILVER_FAIL", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_SCRATCH_SILVER_FAIL$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_SCRATCH_SILVER_FAIL", "screenservices/WTF_MBP/ActionsetActivityLogger_SCRATCH_SILVER_FAIL", "SxDceS5uB2Lt8jEAo_uizw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_SILVER_FAIL"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_SILVER_FAIL", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_SILVER_LOST", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_SCRATCH_SILVER_LOST$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_SCRATCH_SILVER_LOST", "screenservices/WTF_MBP/ActionsetActivityLogger_SCRATCH_SILVER_LOST", "Kreep2MjXRqx_9R9lCEW4w", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_SILVER_LOST"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_SILVER_LOST", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_SILVER_PLAY", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_SCRATCH_SILVER_PLAY$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_SCRATCH_SILVER_PLAY", "screenservices/WTF_MBP/ActionsetActivityLogger_SCRATCH_SILVER_PLAY", "CTUEbQzcZ5fE8h3czTi5tA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_SILVER_PLAY"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_SILVER_PLAY", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_SCRATCH_SILVER_WON", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_SCRATCH_SILVER_WON$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_SCRATCH_SILVER_WON", "screenservices/WTF_MBP/ActionsetActivityLogger_SCRATCH_SILVER_WON", "c7sHUCNzl5BjCf1zOF6dzQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_SILVER_WON"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SCRATCH_SILVER_WON", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_SEND_ADOPTION_CAMPAIGN_NATAL", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_SEND_ADOPTION_CAMPAIGN_NATAL$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_SEND_ADOPTION_CAMPAIGN_NATAL", "screenservices/WTF_MBP/ActionsetActivityLogger_SEND_ADOPTION_CAMPAIGN_NATAL", "RAXRRb2jc3lvIeztLCbLNQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SEND_ADOPTION_CAMPAIGN_NATAL"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_SEND_ADOPTION_CAMPAIGN_NATAL", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_VIDEO_PLAYER_PROGRESS", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_VIDEO_PLAYER_PROGRESS$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, playerProgressIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text),
PlayerProgress: OS.DataTypes.JSConversions.basicTypeToJS(playerProgressIn, OS.Types.Integer)
};
return controller.callServerAction("setActivityLogger_VIDEO_PLAYER_PROGRESS", "screenservices/WTF_MBP/ActionsetActivityLogger_VIDEO_PLAYER_PROGRESS", "VlqGrf_RtefQEKwAq0JmlQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_VIDEO_PLAYER_PROGRESS"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_VIDEO_PLAYER_PROGRESS", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_VIDEO_PLAYER_STARTED", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_VIDEO_PLAYER_STARTED$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_VIDEO_PLAYER_STARTED", "screenservices/WTF_MBP/ActionsetActivityLogger_VIDEO_PLAYER_STARTED", "Bxg+LuD97OPFPnVVRJtcFw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_VIDEO_PLAYER_STARTED"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_VIDEO_PLAYER_STARTED", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_VISIT", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_VISIT$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, serviceAccountIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, taxNumberIn, mACAddressIn, usernameIn, logoutIn, openAppIn, withLoginIn, nOSIDIn, sessionIdIn, anonymousAccessIn, onResumeWithLoginIn, onResumeWithoutLoginIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
ServiceAccountID: OS.DataTypes.JSConversions.basicTypeToJS(serviceAccountIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
TaxNumber: OS.DataTypes.JSConversions.basicTypeToJS(taxNumberIn, OS.Types.Text),
MACAddress: OS.DataTypes.JSConversions.basicTypeToJS(mACAddressIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
Logout: OS.DataTypes.JSConversions.basicTypeToJS(logoutIn, OS.Types.Boolean),
OpenApp: OS.DataTypes.JSConversions.basicTypeToJS(openAppIn, OS.Types.Boolean),
WithLogin: OS.DataTypes.JSConversions.basicTypeToJS(withLoginIn, OS.Types.Boolean),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text),
AnonymousAccess: OS.DataTypes.JSConversions.basicTypeToJS(anonymousAccessIn, OS.Types.Boolean),
OnResumeWithLogin: OS.DataTypes.JSConversions.basicTypeToJS(onResumeWithLoginIn, OS.Types.Boolean),
OnResumeWithoutLogin: OS.DataTypes.JSConversions.basicTypeToJS(onResumeWithoutLoginIn, OS.Types.Boolean)
};
return controller.callServerAction("setActivityLogger_VISIT", "screenservices/WTF_MBP/ActionsetActivityLogger_VISIT", "ht+rBAGWh3mupPgNiD4qeg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_VISIT"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_VISIT", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.setActivityLogger_WTF_SERVICE_CHANGED", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setActivityLogger_WTF_SERVICE_CHANGED$ServerAction = function (refreshTokenIn, parametersListIn, customerIDIn, custCodeIn, mSISDNIn, customerContactIn, directoryNumberIn, usernameIn, nOSIDIn, sessionIdIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ParametersList: parametersListIn.toJS(),
CustomerID: OS.DataTypes.JSConversions.basicTypeToJS(customerIDIn, OS.Types.Text),
CustCode: OS.DataTypes.JSConversions.basicTypeToJS(custCodeIn, OS.Types.Text),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
CustomerContact: OS.DataTypes.JSConversions.basicTypeToJS(customerContactIn, OS.Types.Text),
DirectoryNumber: OS.DataTypes.JSConversions.basicTypeToJS(directoryNumberIn, OS.Types.Text),
Username: OS.DataTypes.JSConversions.basicTypeToJS(usernameIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
SessionId: OS.DataTypes.JSConversions.basicTypeToJS(sessionIdIn, OS.Types.Text)
};
return controller.callServerAction("setActivityLogger_WTF_SERVICE_CHANGED", "screenservices/WTF_MBP/ActionsetActivityLogger_WTF_SERVICE_CHANGED", "btgyll8_A1RqPWsuIbO2qA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_WTF_SERVICE_CHANGED"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.errorMsgOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ErrorMsg, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionsetActivityLogger_WTF_SERVICE_CHANGED", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "ErrorMsg",
attrName: "errorMsgOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.SetAddon_BP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ADDONS_BP.model", "ADDONS_BP.model$STR_ADDONSRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ADDONS_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ADDONS_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setAddon_BP$ServerAction = function (refreshTokenIn, associationIDIn, serviceIDIn, idIn, package_groupIn, nOSIDIn, isNetMobileIn, isActivationIn, applicationIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
AssociationID: OS.DataTypes.JSConversions.basicTypeToJS(associationIDIn, OS.Types.LongInteger),
ServiceID: OS.DataTypes.JSConversions.basicTypeToJS(serviceIDIn, OS.Types.Text),
Id: OS.DataTypes.JSConversions.basicTypeToJS(idIn, OS.Types.Text),
Package_group: OS.DataTypes.JSConversions.basicTypeToJS(package_groupIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
IsNetMobile: OS.DataTypes.JSConversions.basicTypeToJS(isNetMobileIn, OS.Types.Boolean),
IsActivation: OS.DataTypes.JSConversions.basicTypeToJS(isActivationIn, OS.Types.Boolean),
Application: OS.DataTypes.JSConversions.basicTypeToJS(applicationIn, OS.Types.Text)
};
return controller.callServerAction("SetAddon_BP", "screenservices/WTF_MBP/ActionSetAddon_BP", "jYti9C_vBaavSRDPN2eBTw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespaceaddons_bp_ActionSetAddon_BP"))();
executeServerActionResult.addOnsResponseOut = ADDONS_BPModel.STR_ADDONSRec.fromJS(outputs.AddOnsResponse);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.isPendingOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.IsPending, OS.Types.Boolean);
executeServerActionResult.responseOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Response, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespaceaddons_bp_ActionSetAddon_BP", [{
name: "AddOnsResponse",
attrName: "addOnsResponseOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ADDONS_BPModel.STR_ADDONSRec();
},
complexType: ADDONS_BPModel.STR_ADDONSRec
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "IsPending",
attrName: "isPendingOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Response",
attrName: "responseOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.SetChangeRatePlanAndPreferentialInfoByContractDN", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setChangeRatePlanAndPreferentialInfoByContractDN$ServerAction = function (userWtfIdIn, refreshTokenIn, pUCodeIn, amountIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
PUCode: OS.DataTypes.JSConversions.basicTypeToJS(pUCodeIn, OS.Types.Text),
Amount: OS.DataTypes.JSConversions.basicTypeToJS(amountIn, OS.Types.Text)
};
return controller.callServerAction("SetChangeRatePlanAndPreferentialInfoByContractDN", "screenservices/WTF_MBP/ActionSetChangeRatePlanAndPreferentialInfoByContractDN", "s9Lo_y39XGLhk6iOKR0swA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSetChangeRatePlanAndPreferentialInfoByContractDN"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.withoutAmountOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.withoutAmount, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSetChangeRatePlanAndPreferentialInfoByContractDN", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "withoutAmount",
attrName: "withoutAmountOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.SetMonthlyRenewalByContractDN_Public", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setMonthlyRenewalByContractDN_Public$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("SetMonthlyRenewalByContractDN_Public", "screenservices/WTF_MBP/ActionSetMonthlyRenewalByContractDN_Public", "Is2t_ErBC0bUProe30pvew", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSetMonthlyRenewalByContractDN_Public"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.withoutAmountOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.withoutAmount, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSetMonthlyRenewalByContractDN_Public", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "withoutAmount",
attrName: "withoutAmountOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.SetRefill_BP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "ADDONS_BP.model", "ADDONS_BP.model$STR_POSTREFILLS_WSRESPONSERec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$ADDONS_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, ADDONS_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setRefill_BP$ServerAction = function (refreshTokenIn, associationIDIn, serviceIDIn, idIn, package_groupIn, nOSIDIn, isNetMobileIn, isActivationIn, applicationIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
AssociationID: OS.DataTypes.JSConversions.basicTypeToJS(associationIDIn, OS.Types.LongInteger),
ServiceID: OS.DataTypes.JSConversions.basicTypeToJS(serviceIDIn, OS.Types.Text),
Id: OS.DataTypes.JSConversions.basicTypeToJS(idIn, OS.Types.Text),
Package_group: OS.DataTypes.JSConversions.basicTypeToJS(package_groupIn, OS.Types.Text),
NOSID: OS.DataTypes.JSConversions.basicTypeToJS(nOSIDIn, OS.Types.Text),
IsNetMobile: OS.DataTypes.JSConversions.basicTypeToJS(isNetMobileIn, OS.Types.Boolean),
IsActivation: OS.DataTypes.JSConversions.basicTypeToJS(isActivationIn, OS.Types.Boolean),
Application: OS.DataTypes.JSConversions.basicTypeToJS(applicationIn, OS.Types.Text)
};
return controller.callServerAction("SetRefill_BP", "screenservices/WTF_MBP/ActionSetRefill_BP", "+K_05LD_PyT4uHObg6vNDQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespaceaddons_bp_ActionSetRefill_BP"))();
executeServerActionResult.refillsResponseOut = ADDONS_BPModel.STR_POSTREFILLS_WSRESPONSERec.fromJS(outputs.RefillsResponse);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespaceaddons_bp_ActionSetRefill_BP", [{
name: "RefillsResponse",
attrName: "refillsResponseOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new ADDONS_BPModel.STR_POSTREFILLS_WSRESPONSERec();
},
complexType: ADDONS_BPModel.STR_POSTREFILLS_WSRESPONSERec
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
});
define("WTF_MBP.controller$ServerAction.SetStatusInfoCards", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.setStatusInfoCards$ServerAction = function (userWtfIdIn, infoCardIdentifierIn, refreshTokenIn, forDeleteItemIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
InfoCardIdentifier: OS.DataTypes.JSConversions.basicTypeToJS(infoCardIdentifierIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
ForDeleteItem: OS.DataTypes.JSConversions.basicTypeToJS(forDeleteItemIn, OS.Types.Boolean)
};
return controller.callServerAction("SetStatusInfoCards", "screenservices/WTF_MBP/ActionSetStatusInfoCards", "0midyB3bX8qBjyi6Y6cvDQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSetStatusInfoCards"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.alreadyRunOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.AlreadyRun, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSetStatusInfoCards", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "AlreadyRun",
attrName: "alreadyRunOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.SharePrizeWithMsisdns", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.sharePrizeWithMsisdns$ServerAction = function (userWtfIdIn, refreshTokenIn, app_PhoneContactsListIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
App_PhoneContactsList: app_PhoneContactsListIn.toJS()
};
return controller.callServerAction("SharePrizeWithMsisdns", "screenservices/WTF_MBP/ActionSharePrizeWithMsisdns", "RFxkJleILQxmaMqJofki4Q", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSharePrizeWithMsisdns"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionSharePrizeWithMsisdns", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.ShowWithoutLogin", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.showWithoutLogin$ServerAction = function (callContext) {
var controller = this.controller;
return controller.callServerAction("ShowWithoutLogin", "screenservices/WTF_MBP/ActionShowWithoutLogin", "oun9o_rq_MC3K98CCrHdXQ", {}, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionShowWithoutLogin"))();
executeServerActionResult.showOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Show, OS.Types.Boolean);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionShowWithoutLogin", [{
name: "Show",
attrName: "showOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}]);
});
define("WTF_MBP.controller$ServerAction.SyncPICTURES", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_PICTUREList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.syncPICTURES$ServerAction = function (callContext) {
var controller = this.controller;
return controller.callServerAction("SyncPICTURES", "screenservices/WTF_MBP/ActionSyncPICTURES", "kqlif0zMREzex3Pu2tL7nQ", {}, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$ActionSyncPICTURES"))();
executeServerActionResult.localPICTUREsOut = WTF_MBPModel.Local_PICTUREList.fromJS(outputs.LocalPICTUREs);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$ActionSyncPICTURES", [{
name: "LocalPICTUREs",
attrName: "localPICTUREsOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.Local_PICTUREList();
},
complexType: WTF_MBPModel.Local_PICTUREList
}]);
});
define("WTF_MBP.controller$ServerAction.SyncPRIZES", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$Local_PRIZEList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.syncPRIZES$ServerAction = function (callContext) {
var controller = this.controller;
return controller.callServerAction("SyncPRIZES", "screenservices/WTF_MBP/ActionSyncPRIZES", "lkCE3LebpKn1W3VnKLb8Nw", {}, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$ActionSyncPRIZES"))();
executeServerActionResult.local_PRIZESOut = WTF_MBPModel.Local_PRIZEList.fromJS(outputs.Local_PRIZES);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$ActionSyncPRIZES", [{
name: "Local_PRIZES",
attrName: "local_PRIZESOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.Local_PRIZEList();
},
complexType: WTF_MBPModel.Local_PRIZEList
}]);
});
define("WTF_MBP.controller$ServerAction.UpdateProductMaximumAutoRefill_BP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.updateProductMaximumAutoRefill_BP$ServerAction = function (refreshTokenIn, associationIdIn, mSISDNIn, maximumRefillIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
AssociationId: OS.DataTypes.JSConversions.basicTypeToJS(associationIdIn, OS.Types.LongInteger),
MSISDN: OS.DataTypes.JSConversions.basicTypeToJS(mSISDNIn, OS.Types.Text),
MaximumRefill: OS.DataTypes.JSConversions.basicTypeToJS(maximumRefillIn, OS.Types.Text)
};
return controller.callServerAction("UpdateProductMaximumAutoRefill_BP", "screenservices/WTF_MBP/ActionUpdateProductMaximumAutoRefill_BP", "MqAmznVnG2diMBXWq6usaw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUpdateProductMaximumAutoRefill_BP"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.errorOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Error, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUpdateProductMaximumAutoRefill_BP", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Error",
attrName: "errorOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.UserAnswerQuiz", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_UserWtfPrizeAddressRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_BP.model$App_WalletCardRec"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userAnswerQuiz$ServerAction = function (userWtfIdIn, refreshTokenIn, quizAnswerIdIn, quizIdIn, userPlaysQuizIdIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
QuizAnswerId: OS.DataTypes.JSConversions.basicTypeToJS(quizAnswerIdIn, OS.Types.Integer),
QuizId: OS.DataTypes.JSConversions.basicTypeToJS(quizIdIn, OS.Types.Integer),
UserPlaysQuizId: OS.DataTypes.JSConversions.basicTypeToJS(userPlaysQuizIdIn, OS.Types.Integer)
};
return controller.callServerAction("UserAnswerQuiz", "screenservices/WTF_MBP/ActionUserAnswerQuiz", "DNeGiSyqJMzwuKnD2_3AoA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserAnswerQuiz"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.hasWonOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.HasWon, OS.Types.Boolean);
executeServerActionResult.requiredAddressOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.RequiredAddress, OS.Types.Boolean);
executeServerActionResult.app_UserWtfPrizeAddressOut = WTF_BPModel.App_UserWtfPrizeAddressRec.fromJS(outputs.App_UserWtfPrizeAddress);
executeServerActionResult.hasLastAddressOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.HasLastAddress, OS.Types.Boolean);
executeServerActionResult.walletCardOut = WTF_BPModel.App_WalletCardRec.fromJS(outputs.WalletCard);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserAnswerQuiz", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "HasWon",
attrName: "hasWonOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "RequiredAddress",
attrName: "requiredAddressOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "App_UserWtfPrizeAddress",
attrName: "app_UserWtfPrizeAddressOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_UserWtfPrizeAddressRec();
},
complexType: WTF_BPModel.App_UserWtfPrizeAddressRec
}, {
name: "HasLastAddress",
attrName: "hasLastAddressOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "WalletCard",
attrName: "walletCardOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_WalletCardRec();
},
complexType: WTF_BPModel.App_WalletCardRec
}]);
});
define("WTF_MBP.controller$ServerAction.UserNosRecoveryMsisdnInUse_SendCodeRecovery", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_UserWtfRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userNosRecoveryMsisdnInUse_SendCodeRecovery$ServerAction = function (userNOSUidIn, msisdnIn, recoveryCodeIn, callContext) {
var controller = this.controller;
var inputs = {
UserNOSUid: OS.DataTypes.JSConversions.basicTypeToJS(userNOSUidIn, OS.Types.Text),
Msisdn: OS.DataTypes.JSConversions.basicTypeToJS(msisdnIn, OS.Types.Text),
RecoveryCode: OS.DataTypes.JSConversions.basicTypeToJS(recoveryCodeIn, OS.Types.Text)
};
return controller.callServerAction("UserNosRecoveryMsisdnInUse_SendCodeRecovery", "screenservices/WTF_MBP/ActionUserNosRecoveryMsisdnInUse_SendCodeRecovery", "tMDqtLfQxKXmec+eGohExw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserNosRecoveryMsisdnInUse_SendCodeRecovery"))();
executeServerActionResult.isOwnerOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.isOwner, OS.Types.Boolean);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.returnUserWtfOut = WTF_BPModel.App_UserWtfRec.fromJS(outputs.ReturnUserWtf);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserNosRecoveryMsisdnInUse_SendCodeRecovery", [{
name: "isOwner",
attrName: "isOwnerOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ReturnUserWtf",
attrName: "returnUserWtfOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_UserWtfRec();
},
complexType: WTF_BPModel.App_UserWtfRec
}]);
});
define("WTF_MBP.controller$ServerAction.UserNosRecoveryMsisdnInUse_SendCodeSms", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userNosRecoveryMsisdnInUse_SendCodeSms$ServerAction = function (userNOSUidIn, msisdnIn, callContext) {
var controller = this.controller;
var inputs = {
UserNOSUid: OS.DataTypes.JSConversions.basicTypeToJS(userNOSUidIn, OS.Types.Text),
Msisdn: OS.DataTypes.JSConversions.basicTypeToJS(msisdnIn, OS.Types.Text)
};
return controller.callServerAction("UserNosRecoveryMsisdnInUse_SendCodeSms", "screenservices/WTF_MBP/ActionUserNosRecoveryMsisdnInUse_SendCodeSms", "19nk8JBiACvld00m2VOxEA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserNosRecoveryMsisdnInUse_SendCodeSms"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserNosRecoveryMsisdnInUse_SendCodeSms", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.UserToken_CreateOrUpdate_ToReview", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_UserNosRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userToken_CreateOrUpdate_ToReview$ServerAction = function (refreshTokenIn, accessTokenIn, expires_inIn, refresh_token_expires_inIn, deviceUIDIn, id_tokenIn, fromLoginWithoutRegisterIn, callContext) {
var controller = this.controller;
var inputs = {
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
AccessToken: OS.DataTypes.JSConversions.basicTypeToJS(accessTokenIn, OS.Types.Text),
Expires_in: OS.DataTypes.JSConversions.basicTypeToJS(expires_inIn, OS.Types.LongInteger),
Refresh_token_expires_in: OS.DataTypes.JSConversions.basicTypeToJS(refresh_token_expires_inIn, OS.Types.LongInteger),
DeviceUID: OS.DataTypes.JSConversions.basicTypeToJS(deviceUIDIn, OS.Types.Text),
Id_token: OS.DataTypes.JSConversions.basicTypeToJS(id_tokenIn, OS.Types.Text),
FromLoginWithoutRegister: OS.DataTypes.JSConversions.basicTypeToJS(fromLoginWithoutRegisterIn, OS.Types.Boolean)
};
return controller.callServerAction("UserToken_CreateOrUpdate_ToReview", "screenservices/WTF_MBP/ActionUserToken_CreateOrUpdate_ToReview", "RbL632QXq6yI_l0OJP5rpw", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserToken_CreateOrUpdate_ToReview"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.app_UserNosInfoOut = WTF_BPModel.App_UserNosRec.fromJS(outputs.App_UserNosInfo);
executeServerActionResult.userAssociationsLengthOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.UserAssociationsLength, OS.Types.Integer);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserToken_CreateOrUpdate_ToReview", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_UserNosInfo",
attrName: "app_UserNosInfoOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_UserNosRec();
},
complexType: WTF_BPModel.App_UserNosRec
}, {
name: "UserAssociationsLength",
attrName: "userAssociationsLengthOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
});
define("WTF_MBP.controller$ServerAction.UserWtfAddress_CreateOrUpdate", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userWtfAddress_CreateOrUpdate$ServerAction = function (userWtfAddressIdIn, app_UserWtfPrizeAddressIn, userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfAddressId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfAddressIdIn, OS.Types.LongInteger),
App_UserWtfPrizeAddress: app_UserWtfPrizeAddressIn.toJS(),
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("UserWtfAddress_CreateOrUpdate", "screenservices/WTF_MBP/ActionUserWtfAddress_CreateOrUpdate", "Vo_S9a2nj8QELMlq5Nk41A", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserWtfAddress_CreateOrUpdate"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserWtfAddress_CreateOrUpdate", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.UserWtfAddress_Delete", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userWtfAddress_Delete$ServerAction = function (userWtfAddressIdIn, userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfAddressId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfAddressIdIn, OS.Types.LongInteger),
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("UserWtfAddress_Delete", "screenservices/WTF_MBP/ActionUserWtfAddress_Delete", "_eR7mdC3GinY_4Xqros8lA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserWtfAddress_Delete"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserWtfAddress_Delete", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.UserWtfAddress_GetAll", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_UserWtfAddressList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userWtfAddress_GetAll$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("UserWtfAddress_GetAll", "screenservices/WTF_MBP/ActionUserWtfAddress_GetAll", "yLLbO6L0pq0zXRvuwnXeYA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserWtfAddress_GetAll"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.app_UserWtfAddressListOut = WTF_MBPModel.App_UserWtfAddressList.fromJS(outputs.App_UserWtfAddressList);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserWtfAddress_GetAll", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_UserWtfAddressList",
attrName: "app_UserWtfAddressListOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_UserWtfAddressList();
},
complexType: WTF_MBPModel.App_UserWtfAddressList
}]);
});
define("WTF_MBP.controller$ServerAction.UserWtfAddress_GetById", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_UserWtfAddressRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userWtfAddress_GetById$ServerAction = function (userWtfIdIn, refreshTokenIn, userWtfAddressIdIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
UserWtfAddressId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfAddressIdIn, OS.Types.LongInteger)
};
return controller.callServerAction("UserWtfAddress_GetById", "screenservices/WTF_MBP/ActionUserWtfAddress_GetById", "WyOG17MELBs42Hvw4Grq3g", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserWtfAddress_GetById"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.app_UserWtfAddressOut = WTF_BPModel.App_UserWtfAddressRec.fromJS(outputs.App_UserWtfAddress);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserWtfAddress_GetById", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_UserWtfAddress",
attrName: "app_UserWtfAddressOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_UserWtfAddressRec();
},
complexType: WTF_BPModel.App_UserWtfAddressRec
}]);
});
define("WTF_MBP.controller$ServerAction.UserWtfAddress_GetCount", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userWtfAddress_GetCount$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("UserWtfAddress_GetCount", "screenservices/WTF_MBP/ActionUserWtfAddress_GetCount", "LoBvPUpssLCk_0rulfscOg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserWtfAddress_GetCount"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.app_UserWtfAddressListCountOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.App_UserWtfAddressListCount, OS.Types.Integer);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserWtfAddress_GetCount", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_UserWtfAddressListCount",
attrName: "app_UserWtfAddressListCountOut",
mandatory: false,
dataType: OS.Types.Integer,
defaultValue: function () {
return 0;
}
}]);
});
define("WTF_MBP.controller$ServerAction.UserWtfAdress_GetInInterval", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_UserWtfAddressList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.userWtfAdress_GetInInterval$ServerAction = function (userWtfIdIn, refreshTokenIn, startFromIn, endOnIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
StartFrom: OS.DataTypes.JSConversions.basicTypeToJS(startFromIn, OS.Types.Integer),
EndOn: OS.DataTypes.JSConversions.basicTypeToJS(endOnIn, OS.Types.Integer)
};
return controller.callServerAction("UserWtfAdress_GetInInterval", "screenservices/WTF_MBP/ActionUserWtfAdress_GetInInterval", "AYaEXEUJS3Vh3FC+CODpqA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserWtfAdress_GetInInterval"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.app_UserWtfAddressListOut = WTF_MBPModel.App_UserWtfAddressList.fromJS(outputs.App_UserWtfAddressList);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionUserWtfAdress_GetInInterval", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "App_UserWtfAddressList",
attrName: "app_UserWtfAddressListOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_UserWtfAddressList();
},
complexType: WTF_MBPModel.App_UserWtfAddressList
}]);
});
define("WTF_MBP.controller$ServerAction.ValidateIfUserAreBlocked", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.validateIfUserAreBlocked$ServerAction = function (userNosUidIn, callContext) {
var controller = this.controller;
var inputs = {
UserNosUid: OS.DataTypes.JSConversions.basicTypeToJS(userNosUidIn, OS.Types.Text)
};
return controller.callServerAction("ValidateIfUserAreBlocked", "screenservices/WTF_MBP/ActionValidateIfUserAreBlocked", "ug5ZT+IVyaIliPGpjyfPQA", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionValidateIfUserAreBlocked"))();
executeServerActionResult.hasBlockOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.hasBlock, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionValidateIfUserAreBlocked", [{
name: "hasBlock",
attrName: "hasBlockOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.ValidateMsisdnIsWTF_Public", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.validateMsisdnIsWTF_Public$ServerAction = function (userWtfIdIn, refreshTokenIn, msisdnToValidateIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
MsisdnToValidate: OS.DataTypes.JSConversions.basicTypeToJS(msisdnToValidateIn, OS.Types.Integer)
};
return controller.callServerAction("ValidateMsisdnIsWTF_Public", "screenservices/WTF_MBP/ActionValidateMsisdnIsWTF_Public", "Vme0mTXF4vNbrhck_NcNFg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionValidateMsisdnIsWTF_Public"))();
executeServerActionResult.isWtfOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.IsWtf, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionValidateMsisdnIsWTF_Public", [{
name: "IsWtf",
attrName: "isWtfOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.VerifyIsFirstTimeVoucher", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.verifyIsFirstTimeVoucher$ServerAction = function (userWtfIdIn, uberTypeIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
UberType: OS.DataTypes.JSConversions.basicTypeToJS(uberTypeIn, OS.Types.Text),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("VerifyIsFirstTimeVoucher", "screenservices/WTF_MBP/ActionVerifyIsFirstTimeVoucher", "D7Zs3S+1TvkehDoO9EIi8w", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionVerifyIsFirstTimeVoucher"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.responseOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Response, OS.Types.Boolean);
executeServerActionResult.messageEmptyRuleOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.MessageEmptyRule, OS.Types.Text);
executeServerActionResult.showEmptyMessageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ShowEmptyMessage, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionVerifyIsFirstTimeVoucher", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "Response",
attrName: "responseOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "MessageEmptyRule",
attrName: "messageEmptyRuleOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ShowEmptyMessage",
attrName: "showEmptyMessageOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.VerifyUserAssociationAndUpdateUserWtfActive", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.verifyUserAssociationAndUpdateUserWtfActive$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("VerifyUserAssociationAndUpdateUserWtfActive", "screenservices/WTF_MBP/ActionVerifyUserAssociationAndUpdateUserWtfActive", "AfuJAVk407_uyqNI4JByBQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionVerifyUserAssociationAndUpdateUserWtfActive"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.returnIsActiveUserOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ReturnIsActiveUser, OS.Types.Boolean);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionVerifyUserAssociationAndUpdateUserWtfActive", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "ReturnIsActiveUser",
attrName: "returnIsActiveUserOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}]);
});
define("WTF_MBP.controller$ServerAction.VerifyWelcomePrizeAndSecretFriendAndInfoCards", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_BP.model", "WTF_BP.model$App_SecretFriendRec", "WTF_MBP.referencesHealth", "WTF_MBP.referencesHealth$WTF_BP", "WTF_MBP.model$App_InfoCardsList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController, WTF_BPModel) {
var OS = OutSystems.Internal;
WTF_MBPController.default.verifyWelcomePrizeAndSecretFriendAndInfoCards$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("VerifyWelcomePrizeAndSecretFriendAndInfoCards", "screenservices/WTF_MBP/ActionVerifyWelcomePrizeAndSecretFriendAndInfoCards", "meYP_ZxSADu1qqK66OLYxg", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionVerifyWelcomePrizeAndSecretFriendAndInfoCards"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.hasPrizeOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.HasPrize, OS.Types.Boolean);
executeServerActionResult.friendSecretActiveOut = WTF_BPModel.App_SecretFriendRec.fromJS(outputs.FriendSecretActive);
executeServerActionResult.appWelcomePrizeIdentifierOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.AppWelcomePrizeIdentifier, OS.Types.LongInteger);
executeServerActionResult.zonaWelcomeOfferIdOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ZonaWelcomeOfferId, OS.Types.LongInteger);
executeServerActionResult.infoCardsListOut = WTF_MBPModel.App_InfoCardsList.fromJS(outputs.InfoCardsList);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionVerifyWelcomePrizeAndSecretFriendAndInfoCards", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "HasPrize",
attrName: "hasPrizeOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "FriendSecretActive",
attrName: "friendSecretActiveOut",
mandatory: false,
dataType: OS.Types.Record,
defaultValue: function () {
return new WTF_BPModel.App_SecretFriendRec();
},
complexType: WTF_BPModel.App_SecretFriendRec
}, {
name: "AppWelcomePrizeIdentifier",
attrName: "appWelcomePrizeIdentifierOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "ZonaWelcomeOfferId",
attrName: "zonaWelcomeOfferIdOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.BuiltinFunctions.integerToLongInteger(0);
}
}, {
name: "InfoCardsList",
attrName: "infoCardsListOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_InfoCardsList();
},
complexType: WTF_MBPModel.App_InfoCardsList
}]);
});
define("WTF_MBP.controller$ServerAction.Wallet_GetAll", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_WalletCardList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.wallet_GetAll$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("Wallet_GetAll", "screenservices/WTF_MBP/ActionWallet_GetAll", "o12OIi0gMCT3l7iN54s7iQ", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionWallet_GetAll"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
executeServerActionResult.list_EquipamentsOut = WTF_MBPModel.App_WalletCardList.fromJS(outputs.List_Equipaments);
executeServerActionResult.list_ComunicationsOut = WTF_MBPModel.App_WalletCardList.fromJS(outputs.List_Comunications);
executeServerActionResult.list_FilmesVodOut = WTF_MBPModel.App_WalletCardList.fromJS(outputs.List_FilmesVod);
executeServerActionResult.list_UberEatsOut = WTF_MBPModel.App_WalletCardList.fromJS(outputs.List_UberEats);
executeServerActionResult.list_UberRidersOut = WTF_MBPModel.App_WalletCardList.fromJS(outputs.List_UberRiders);
executeServerActionResult.list_CinemasOut = WTF_MBPModel.App_WalletCardList.fromJS(outputs.List_Cinemas);
executeServerActionResult.list_GoldenOut = WTF_MBPModel.App_WalletCardList.fromJS(outputs.List_Golden);
executeServerActionResult.list_UberEatsEmptyOut = WTF_MBPModel.App_WalletCardList.fromJS(outputs.List_UberEatsEmpty);
executeServerActionResult.list_UberRidersEmptyOut = WTF_MBPModel.App_WalletCardList.fromJS(outputs.List_UberRidersEmpty);
executeServerActionResult.list_CinemasEmptyOut = WTF_MBPModel.App_WalletCardList.fromJS(outputs.List_CinemasEmpty);
executeServerActionResult.list_GenericOut = WTF_MBPModel.App_WalletCardList.fromJS(outputs.List_Generic);
executeServerActionResult.list_RevolutEmptyOut = WTF_MBPModel.App_WalletCardList.fromJS(outputs.List_RevolutEmpty);
executeServerActionResult.list_RevolutOut = WTF_MBPModel.App_WalletCardList.fromJS(outputs.List_Revolut);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionWallet_GetAll", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}, {
name: "List_Equipaments",
attrName: "list_EquipamentsOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Comunications",
attrName: "list_ComunicationsOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_FilmesVod",
attrName: "list_FilmesVodOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_UberEats",
attrName: "list_UberEatsOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_UberRiders",
attrName: "list_UberRidersOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Cinemas",
attrName: "list_CinemasOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Golden",
attrName: "list_GoldenOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_UberEatsEmpty",
attrName: "list_UberEatsEmptyOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_UberRidersEmpty",
attrName: "list_UberRidersEmptyOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_CinemasEmpty",
attrName: "list_CinemasEmptyOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Generic",
attrName: "list_GenericOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_RevolutEmpty",
attrName: "list_RevolutEmptyOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}, {
name: "List_Revolut",
attrName: "list_RevolutOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_WalletCardList();
},
complexType: WTF_MBPModel.App_WalletCardList
}]);
});
define("WTF_MBP.controller$ServerAction.WalletHistory_GetAll", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller", "WTF_MBP.model$App_HistoryList"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.walletHistory_GetAll$ServerAction = function (userWtfIdIn, refreshTokenIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text)
};
return controller.callServerAction("WalletHistory_GetAll", "screenservices/WTF_MBP/ActionWalletHistory_GetAll", "mx3x+lXnva3UBad83Q8r9A", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionWalletHistory_GetAll"))();
executeServerActionResult.app_History_ActivitiesOut = WTF_MBPModel.App_HistoryList.fromJS(outputs.App_History_Activities);
executeServerActionResult.app_History_PlaysOut = WTF_MBPModel.App_HistoryList.fromJS(outputs.App_History_Plays);
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionWalletHistory_GetAll", [{
name: "App_History_Activities",
attrName: "app_History_ActivitiesOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_HistoryList();
},
complexType: WTF_MBPModel.App_HistoryList
}, {
name: "App_History_Plays",
attrName: "app_History_PlaysOut",
mandatory: false,
dataType: OS.Types.RecordList,
defaultValue: function () {
return new WTF_MBPModel.App_HistoryList();
},
complexType: WTF_MBPModel.App_HistoryList
}, {
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return false;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.WalletItem_MarkUsed", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.walletItem_MarkUsed$ServerAction = function (userWtfIdIn, refreshTokenIn, walletItemIdIn, callContext) {
var controller = this.controller;
var inputs = {
UserWtfId: OS.DataTypes.JSConversions.basicTypeToJS(userWtfIdIn, OS.Types.LongInteger),
RefreshToken: OS.DataTypes.JSConversions.basicTypeToJS(refreshTokenIn, OS.Types.Text),
WalletItemId: OS.DataTypes.JSConversions.basicTypeToJS(walletItemIdIn, OS.Types.LongInteger)
};
return controller.callServerAction("WalletItem_MarkUsed", "screenservices/WTF_MBP/ActionWalletItem_MarkUsed", "58Of3X8U6Y8odw7qJnFC3w", inputs, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionWalletItem_MarkUsed"))();
executeServerActionResult.successOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Success, OS.Types.Boolean);
executeServerActionResult.messageOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.Message, OS.Types.Text);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionWalletItem_MarkUsed", [{
name: "Success",
attrName: "successOut",
mandatory: false,
dataType: OS.Types.Boolean,
defaultValue: function () {
return true;
}
}, {
name: "Message",
attrName: "messageOut",
mandatory: false,
dataType: OS.Types.Text,
defaultValue: function () {
return "";
}
}]);
});
define("WTF_MBP.controller$ServerAction.WhatsNew_GetActive_BP", ["exports", "OutSystems", "WTF_MBP.model", "WTF_MBP.controller"], function (exports, OutSystems, WTF_MBPModel, WTF_MBPController) {
var OS = OutSystems.Internal;
WTF_MBPController.default.whatsNew_GetActive_BP$ServerAction = function (callContext) {
var controller = this.controller;
return controller.callServerAction("WhatsNew_GetActive_BP", "screenservices/WTF_MBP/ActionWhatsNew_GetActive_BP", "SrLmwGr7KwghF4+gbPrJqg", {}, controller.callContext(callContext)).then(function (outputs) {
var executeServerActionResult = new (controller.constructor.getVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionWhatsNew_GetActive_BP"))();
executeServerActionResult.activeWhatsNewIdOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ActiveWhatsNewId, OS.Types.LongInteger);
executeServerActionResult.activatedOnOut = OS.DataTypes.JSConversions.jsToBasicType(outputs.ActivatedOn, OS.Types.DateTime);
return executeServerActionResult;
});
};
WTF_MBPController.default.constructor.registerVariableGroupType("WTF_MBP$rssespacewtf_bp_ActionWhatsNew_GetActive_BP", [{
name: "ActiveWhatsNewId",
attrName: "activeWhatsNewIdOut",
mandatory: false,
dataType: OS.Types.LongInteger,
defaultValue: function () {
return OS.DataTypes.LongInteger.defaultValue;
}
}, {
name: "ActivatedOn",
attrName: "activatedOnOut",
mandatory: false,
dataType: OS.Types.DateTime,
defaultValue: function () {
return OS.DataTypes.DateTime.defaultValue;
}
}]);
});
define("WTF_MBP.controller", ["exports", "OutSystems", "WTF_MBP.model"], function (exports, OutSystems, WTF_MBPModel) {
var OS = OutSystems.Internal;
var WTF_MBPController = exports;
var Controller = (function (_super) {
__extends(Controller, _super);
function Controller() {
_super.apply(this, arguments);
}
Controller.prototype.clientActionProxies = {};
Controller.prototype.roles = {};
Controller.prototype.defaultTimeout = 20;
Controller.prototype.getDefaultTimeout = function () {
return WTF_MBPController.default.defaultTimeout;
};
return Controller;
})(OS.Controller.BaseModuleController);
WTF_MBPController.default = new Controller();
});
